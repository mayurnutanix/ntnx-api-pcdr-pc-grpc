components:
  schemas:
    BackupTarget:
      description: DocRef(BackupTargetDescription)
      required:
        - location
      allOf:
        - $ref: "ModelRef({ext:common:/namespaces/common/versioned/v1/modules/response/beta/models/ExternalizableAbstractModel})"
        - type: "object"
          properties:
            location:
              type: "object"
              description: DocRef(LocationDescription)
              oneOf:
                - $ref: ModelRef({./ClusterLocation})
                - $ref: ModelRef({./ObjectStoreLocation})
              x-codegen-hint:
                $any:
                  - type: entity-identifier
                    properties:
                      identifiers:
                        - type: ModelRef({./ClusterLocation})
                          index: 12001
                        - type: ModelRef({./ObjectStoreLocation})
                          index: 12002
            lastSyncTime:
              type: "string"
              format: "date-time"
              readOnly: true
              description: DocRef(LastSyncTimeDescription)
            isBackupPaused:
              type: "boolean"
              readOnly: true
              description: DocRef(IsBackupPausedDescription)
            backupPauseReason:
              type: "string"
              readOnly: true
              description: DocRef(BackupPauseReasonDescription)
      x-codegen-hint:
        $any:
          - type: entity-identifier
            properties:
              identifiers:
                - name: externalizableAbstractModel
                  type: "ModelRef({ext:common:/namespaces/common/versioned/v1/modules/response/beta/models/ExternalizableAbstractModel})"
                  index: 1000
                - name: location
                  index: 1001
                - name: lastSyncTime
                  index: 1002
                - name: isBackupPaused
                  index: 1003
                - name: backupPauseReason
                  index: 1004

    ClusterLocation:
      description: DocRef(PrismElementClusterModelDescription)
      type: "object"
      properties:
        config:
          type: "object"
          description: DocRef(ClusterConfigDescription)
          $ref: ModelRef({ext:guru:/namespaces/prism/versioned/v4/modules/management/beta/models/ClusterReference})
      x-codegen-hint:
        $any:
          - type: entity-identifier
            properties:
              identifiers:
                - name: config
                  index: 1000

    ObjectStoreLocation:
      description: DocRef(ObjectStoreDescription)
      type: "object"
      required:
        - providerConfig
        - backupPolicy
      properties:
        providerConfig:
          description: DocRef(ObjectStoreProviderDescription)
          required: true
          $ref: ModelRef({./AWSS3Config})
        backupPolicy:
          description: DocRef(ObjectStoreBackupPolicyDescription)
          $ref: ModelRef({./BackupPolicy})
      x-codegen-hint:
        $any:
          - type: entity-identifier
            properties:
              identifiers:
                - name: providerConfig
                  index: 1000
                - name: backupPolicy
                  index: 1001

    S3Config:
      description: DocRef(S3ConfigDescription)
      type: "object"
      required:
        - bucketName
        - region
      properties:
        bucketName:
          type: "string"
          description: DocRef(BucketNameDescription)
          x-constraints:
            minLength: "ConstantRef(minBucketNameLength)"
            maxLength: "ConstantRef(maxBucketNameLength)"
            $scopes:
              - name: "update"
                constraints:
                  readOnly: true
        region:
          type: "string"
          description: DocRef(RegionDescription)
          x-constraints:
            maxLength: "ConstantRef(maxRegionLength)"
            $scopes:
              - name: "update"
                constraints:
                  readOnly: true
      x-codegen-hint:
        $any:
          - type: entity-identifier
            properties:
              identifiers:
                - name: bucketName
                  index: 1000
                - name: region
                  index: 1001

    AWSS3Config:
      description: DocRef(AWSS3ConfigDescription)
      allOf:
        - $ref: "ModelRef({./S3Config})"
        - type: "object"
          properties:
            credentials:
              description: DocRef(ObjectStoreCredentialsDescription)
              writeOnly: true
              oneOf:
                - $ref: ModelRef({./AccessKeyCredentials})
              x-codegen-hint:
                $any:
                  - type: entity-identifier
                    properties:
                      identifiers:
                        - type: ModelRef({./AccessKeyCredentials})
                          index: 12001
      x-codegen-hint:
        $any:
          - type: entity-identifier
            properties:
              identifiers:
                - name: s3Config
                  type: "ModelRef({./S3Config})"
                  index: 1000
                - name: credentials
                  index: 1001


    AccessKeyCredentials:
      type: "object"
      description: DocRef(AccessKeyCredentialsDescription)
      properties:
        accessKeyId:
          type: "string"
          x-constraints:
            minLength: ConstantRef(accessKeyMinLength)
            maxLength: ConstantRef(accessKeyMaxLength)
            # add alphanumeric pattern once ENG-670306 is resolved
          description: DocRef(AccessKeyDescription)
        secretAccessKey:
          type: "string"
          format: "password"
          x-constraints:
            maxLength: ConstantRef(secretAccessKeyMaxLength)
          description: DocRef(SecretAccessKeyDescription)
      x-codegen-hint:
        $any:
          - type: entity-identifier
            properties:
              identifiers:
                - name: accessKeyId
                  index: 1000
                - name: secretAccessKey
                  index: 1001

    BackupPolicy:
      description: DocRef(ObjectStoreBackupPolicyDescription)
      type: "object"
      required:
        - rpoInMinutes
      properties:
        rpoInMinutes:
          type: "integer"
          format: "int32"
          description: DocRef(RpoInMinutesDescription)
          x-constraints:
            minimum: ConstantRef(minRpoMinutes)
            maximum: ConstantRef(maxRpoMinutes)
      x-codegen-hint:
        $any:
          - type: entity-identifier
            properties:
              identifiers:
                - name: rpoInMinutes
                  index: 1000
