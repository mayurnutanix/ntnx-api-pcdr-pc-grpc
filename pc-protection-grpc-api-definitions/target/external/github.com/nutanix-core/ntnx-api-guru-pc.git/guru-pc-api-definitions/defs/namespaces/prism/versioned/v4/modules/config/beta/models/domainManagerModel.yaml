components:
  schemas:
    DomainManager:
      description: DocRef(DomainManagerDescription)
      allOf:
        - $ref: "ModelRef({ext:common:/namespaces/common/versioned/v1/modules/response/beta/models/ExternalizableAbstractModel})"
        - type: object
          required:
            - config
            - network
          properties:
            config:
              description: DocRef(DomainManagerClusterConfigDescription)
              $ref: "ModelRef({./DomainManagerClusterConfig})"
            isRegisteredWithHostingCluster:
              description: DocRef(IsRegisteredToHostingClusterDescription)
              type: boolean
              readOnly: true
            network:
              description: DocRef(DomainManagerNetworkDescription)
              $ref: "ModelRef({./DomainManagerNetwork})"
              x-constraints:
                $scopes:
                  - name: "update"
                    constraints:
                      readOnly: true
            hostingClusterExtId:
              description: DocRef(HostingClusterExtIdDescription)
              type: string
              readOnly: true
              x-constraints:
                pattern: "ConstantRef({ext:common:/namespaces/common}, uuidPattern)"
            shouldEnableHighAvailability:
              description: DocRef(ShouldEnableHighAvailabilityDescription)
              type: boolean
              default: false
              x-constraints:
                $scopes:
                  - name: "update"
                    constraints:
                      readOnly: true
            nodeExtIds:
              description: DocRef(NodeExtIdsDescription)
              type: array
              readOnly: true
              uniqueItems: true
              x-constraints:
                minItems: ConstantRef(MinNodeExtIds)
                maxItems: ConstantRef(MaxNodeExtIds)
              items:
                type: string
                x-constraints:
                  pattern: ConstantRef({ext:common:/namespaces/common}, uuidPattern)
      x-codegen-hint:
        $any:
          - type: entity-identifier
            properties:
              identifiers:
                - type: "ModelRef({ext:common:/namespaces/common/versioned/v1/modules/response/beta/models/ExternalizableAbstractModel})"
                  name: base
                  index: 2001
                - name: config
                  index: 2002
                - name: isRegisteredWithHostingCluster
                  index: 2004
                - name: network
                  index: 2008
                - name: hostingClusterExtId
                  index: 2010
                - name: shouldEnableHighAvailability
                  index: 2011
                - name: nodeExtIds
                  index: 2012
      x-selection-properties:
        - extId
        - config

    DomainManagerClusterConfig:
      description: DocRef(DomainManagerClusterConfigDescription)
      allOf:
        - $ref: "ModelRef({ext:clsmgmt:/namespaces/clustermgmt/versioned/v4/modules/config/beta/models/ClusterConfig})"
        - type: object
          required:
            - name
            - size
            - buildInfo
          properties:
            name:
              description: DocRef(DomainManagerNameDescription)
              type: string
              x-constraints:
                minLength: ConstantRef(minClusterNameLength)
                maxLength: ConstantRef(maxClusterNameLength)
            size:
              description: DocRef(DomainManagerSizeDescription)
              $ref: "ModelRef({./Size})"
              x-constraints:
                $scopes:
                  - name: "update"
                    constraints:
                      readOnly: true
            bootstrapConfig: # dark site support without PE releases.
              description: DocRef(BootstrapConfigDescription)
              $ref: "ModelRef({./BootstrapConfig})"
              x-constraints:
                $scopes:
                  - name: "update"
                    constraints:
                      readOnly: true
            credentials:
              description: DocRef(CredentialsDescription)
              type: array
              items:
                $ref: "ModelRef({ext:common:/namespaces/common/versioned/v1/modules/config/beta/models/BasicAuth})"
              uniqueItems: true
              writeOnly: true
              x-constraints:
                minItems: ConstantRef(MinCredentialsLength)
                maxItems: ConstantRef(MaxCredentialsLength)
            resourceConfig:
              description: DocRef(ResourceConfigDescription)
              $ref: "ModelRef({./DomainManagerResourceConfig})"
              x-constraints:
                $scopes:
                  - name: "update"
                    constraints:
                      readOnly: true
      x-codegen-hint:
        $any:
          - type: entity-identifier
            properties:
              identifiers:
                - type: "ModelRef({ext:clsmgmt:/namespaces/clustermgmt/versioned/v4/modules/config/beta/models/ClusterConfig})"
                  name: base
                  index: 2001
                - name: name
                  index: 2003
                - name: size
                  index: 2005
                - name: bootstrapConfig
                  index: 2006
                - name: credentials
                  index: 2008
                - name: resourceConfig
                  index: 2009
      x-selection-properties:
        - name
        - size
        - buildInfo

    DomainManagerNetwork:
      description: DocRef(DomainManagerNetworkDescription)
      allOf:
        - $ref: "ModelRef({ext:clsmgmt:/namespaces/clustermgmt/versioned/v4/modules/config/beta/models/ClusterNetwork})"
        - type: object
          required:
            - ntpServers
            - nameServers
            - externalNetworks
          properties:
            internalNetworks:
              description: DocRef(InternalNetworkDescription)
              type: array
              writeOnly: true
              items:
                $ref: "ModelRef({./BaseNetwork})"
              uniqueItems: true
              x-constraints:
                minItems: ConstantRef(MinInternalNetworksLength)
                maxItems: ConstantRef(MaxInternalNetworksLength)
                $scopes:
                  - name: "update"
                    constraints:
                      readOnly: true
            externalNetworks:
              description: DocRef(ExternalNetworkDescription)
              type: array
              items:
                $ref: "ModelRef({./ExternalNetwork})"
              uniqueItems: true
              x-constraints:
                minItems: ConstantRef(MinExternalNetworksLength)
                maxItems: ConstantRef(MaxExternalNetworksLength)
                $scopes:
                  - name: "update"
                    constraints:
                      readOnly: true
      x-codegen-hint:
        $any:
          - type: entity-identifier
            properties:
              identifiers:
                - type: "ModelRef({ext:clsmgmt:/namespaces/clustermgmt/versioned/v4/modules/config/beta/models/ClusterNetwork})"
                  name: base
                  index: 4001
                - name: internalNetworks
                  index: 4002
                - name: externalNetworks
                  index: 4003

    BootstrapConfig:
      description: DocRef(BootstrapConfigDescription)
      type: object
      properties:
        cloudInitConfig:
          description: DocRef(CloudInitConfigDescription)
          type: array
          writeOnly: true
          items:
            $ref: "ModelRef({ext:vmm:/namespaces/vmm/versioned/v4/modules/ahv/beta/models/CloudInit})"
          x-constraints:
            minItems: ConstantRef(MinCloudInitCommandsLength)
            maxItems: ConstantRef(MaxCloudInitCommandsLength)
        environmentInfo:
          description: DocRef(EnvironmentInfoDescription)
          $ref: "ModelRef({./EnvironmentInfo})"
          readOnly: true
      x-codegen-hint:
        $any:
          - type: entity-identifier
            properties:
              identifiers:
                - name: cloudInitConfig
                  index: 2001
                - name: environmentInfo
                  index: 2002

    Size:
      description: DocRef(DomainManagerSizeDescription)
      allOf:
        - $ref: "ModelRef({ext:common:/namespaces/common/versioned/v1/modules/config/beta/models/BaseEnum})"
        - type: string
          enum:
            - STARTER
            - SMALL
            - LARGE
            - EXTRALARGE
      x-codegen-hint:
        $any:
          - type: enum
            properties:
              descriptions:
                - name: 'STARTER'
                  description: DocRef(StarterDomainManagerDescription)
                - name: 'SMALL'
                  description: DocRef(SmallDomainManagerDescription)
                - name: 'LARGE'
                  description: DocRef(LargeDomainManagerDescription)
                - name: 'EXTRALARGE'
                  description: DocRef(ExtraLargeDomainManagerDescription)
          - type: entity-identifier
            properties:
              identifiers:
                - value: "STARTER"
                  index: 4001
                - value: "SMALL"
                  index: 4002
                - value: "LARGE"
                  index: 4003
                - value: "EXTRALARGE"
                  index: 4004
    BaseNetwork:
      description: DocRef(BaseNetworkDescription)
      type: object
      required:
        - defaultGateway
        - subnetMask
        - ipRanges
      properties:
        defaultGateway:
          description: DocRef(DefaultGatewayDescription)
          $ref: ModelRef({ext:common:/namespaces/common/versioned/v1/modules/config/beta/models/IPAddressOrFQDN})
        subnetMask:
          description: DocRef(SubnetMaskDescription)
          $ref: ModelRef({ext:common:/namespaces/common/versioned/v1/modules/config/beta/models/IPAddressOrFQDN})
        ipRanges:
          description: DocRef(IpRangesDescription)
          type: array
          uniqueItems: true
          items:
            $ref: ModelRef({ext:common:/namespaces/common/versioned/v1/modules/config/beta/models/IpRange})
          x-constraints:
            minItems: ConstantRef(MinIpRangeListElements)
            maxItems: ConstantRef(MaxIpRangeListElements)
      x-codegen-hint:
        $any:
          - type: entity-identifier
            properties:
              identifiers:
                - name: defaultGateway
                  index: 2001
                - name: subnetMask
                  index: 2002
                - name: ipRanges
                  index: 2003

    ExternalNetwork:
      description: DocRef(ExternalNetworkDescription)
      allOf:
        - $ref: "ModelRef({./BaseNetwork})"
        - type: object
          required:
            - networkExtId
          properties:
            networkExtId:
              description: DocRef(NetworkExtIdDescription)
              type: string
              x-constraints:
                pattern: "ConstantRef({ext:common:/namespaces/common}, uuidPattern)"
      x-codegen-hint:
        $any:
          - type: entity-identifier
            properties:
              identifiers:
                - name: base
                  type: "ModelRef({./BaseNetwork})"
                  index: 2001
                - name: networkExtId
                  index: 2002

    DomainManagerResourceConfig:
      description: DocRef(ResourceConfigDescription)
      type: object
      properties:
        numVcpus:
          description: DocRef(NumVcpusDescription)
          type: integer
          format: int32
          readOnly: true
        memorySizeBytes:
          description: DocRef(MemorySizeBytesDescription)
          type: integer
          format: int64
          readOnly: true
        dataDiskSizeBytes:
          description: DocRef(DataDiskSizeBytesDescription)
          type: integer
          format: int64
          readOnly: true
        containerExtIds:
          description: DocRef(ContainerExtIdDescription)
          type: array
          uniqueItems: true
          x-constraints:
            minItems: ConstantRef(MinContainerExtdIds)
            maxItems: ConstantRef(MaxContainerExtdIds)
          items:
            type: string
            x-constraints:
              pattern: "ConstantRef({ext:common:/namespaces/common}, uuidPattern)"
      x-codegen-hint:
        $any:
          - type: entity-identifier
            properties:
              identifiers:
                - name: "numVcpus"
                  index: 4006
                - name: "memorySizeBytes"
                  index: 4007
                - name: "dataDiskSizeBytes"
                  index: 4008
                - name: "containerExtIds"
                  index: 4009

