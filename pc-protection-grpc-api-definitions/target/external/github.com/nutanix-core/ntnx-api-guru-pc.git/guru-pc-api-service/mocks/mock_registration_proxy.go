// Code generated by MockGen. DO NOT EDIT.
// Source: guru-pc-api-service/services/register_aos/registration_proxy/interface.go

// Package mocks is a generated GoMock package.
package mocks

import (
	guru_error "ntnx-api-guru-pc/guru-pc-api-service/errors/guru_error"
	models "ntnx-api-guru-pc/guru-pc-api-service/models"
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
)

// MockRegistrationProxyIfc is a mock of RegistrationProxyIfc interface.
type MockRegistrationProxyIfc struct {
	ctrl     *gomock.Controller
	recorder *MockRegistrationProxyIfcMockRecorder
}

// MockRegistrationProxyIfcMockRecorder is the mock recorder for MockRegistrationProxyIfc.
type MockRegistrationProxyIfcMockRecorder struct {
	mock *MockRegistrationProxyIfc
}

// NewMockRegistrationProxyIfc creates a new mock instance.
func NewMockRegistrationProxyIfc(ctrl *gomock.Controller) *MockRegistrationProxyIfc {
	mock := &MockRegistrationProxyIfc{ctrl: ctrl}
	mock.recorder = &MockRegistrationProxyIfcMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockRegistrationProxyIfc) EXPECT() *MockRegistrationProxyIfcMockRecorder {
	return m.recorder
}

// DeleteClusterState mocks base method.
func (m *MockRegistrationProxyIfc) DeleteClusterState(item *models.Job) (*bool, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "DeleteClusterState", item)
	ret0, _ := ret[0].(*bool)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// DeleteClusterState indicates an expected call of DeleteClusterState.
func (mr *MockRegistrationProxyIfcMockRecorder) DeleteClusterState(item interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "DeleteClusterState", reflect.TypeOf((*MockRegistrationProxyIfc)(nil).DeleteClusterState), item)
}

// Execute mocks base method.
func (m *MockRegistrationProxyIfc) Execute(item *models.Job) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Execute", item)
	ret0, _ := ret[0].(error)
	return ret0
}

// Execute indicates an expected call of Execute.
func (mr *MockRegistrationProxyIfcMockRecorder) Execute(item interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Execute", reflect.TypeOf((*MockRegistrationProxyIfc)(nil).Execute), item)
}

// Rollback mocks base method.
func (m *MockRegistrationProxyIfc) Rollback(item *models.Job) {
	m.ctrl.T.Helper()
	m.ctrl.Call(m, "Rollback", item)
}

// Rollback indicates an expected call of Rollback.
func (mr *MockRegistrationProxyIfcMockRecorder) Rollback(item interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Rollback", reflect.TypeOf((*MockRegistrationProxyIfc)(nil).Rollback), item)
}

// TriggerRegisterOnPe mocks base method.
func (m *MockRegistrationProxyIfc) TriggerRegisterOnPe(item *models.Job) (string, guru_error.GuruErrorInterface) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "TriggerRegisterOnPe", item)
	ret0, _ := ret[0].(string)
	ret1, _ := ret[1].(guru_error.GuruErrorInterface)
	return ret0, ret1
}

// TriggerRegisterOnPe indicates an expected call of TriggerRegisterOnPe.
func (mr *MockRegistrationProxyIfcMockRecorder) TriggerRegisterOnPe(item interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "TriggerRegisterOnPe", reflect.TypeOf((*MockRegistrationProxyIfc)(nil).TriggerRegisterOnPe), item)
}
