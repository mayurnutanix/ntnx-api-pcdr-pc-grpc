components:
  schemas:
    Cluster:
      x-filterable-properties:
        - name
        - extId
        - config
        - network
        - upgradeStatus
        - clusterProfileExtId
        - backupEligibilityScore
      x-sortable-properties:
        - name
        - config
        - network
        - nodes
        - vmCount
        - inefficientVmCount
        - upgradeStatus
        - backupEligibilityScore
        - extId
      x-groupable-properties:
        - config
        - nodes
      x-selection-properties:
        - name
        - upgradeStatus
        - vmCount
        - inefficientVmCount
        - backupEligibilityScore
      x-property-mapping:
        - name: "name"
          value: "cluster_name"
        - name: "extId"
          value: "_cluster_uuid_"
        - name: "upgradeStatus"
          value: "cluster_upgrade_status"
        - name: "vmCount"
          value: "num_vms"
        - name: "inefficientVmCount"
          value: "capacity.inefficient_vm_num"
        - name: "clusterProfileExtId"
          value: "cluster_profile_uuid"
        - name: "backupEligibilityScore"
          value: "backup_eligibility_score"
      x-rbac-entity: cluster
      x-rbac-property-mapping:
        - name: "uuid"
          value: "extId"
      x-entity: cluster
      x-expand-items:
        - expansionKey: clusterProfile
          leftEntityKey: cluster_profile_uuid
          rightModel: ModelRef({./ClusterProfile})
          rightEntityKey: _entity_id_
          mappingType: ONE_TO_ONE
        - expansionKey: storageSummary
          leftEntityKey: _entity_id_
          rightModel: ModelRef({./StorageSummary})
          rightEntityKey: _master_cluster_uuid_
          mappingType: ONE_TO_ONE
      allOf:
        - $ref: ModelRef({ext:common:/namespaces/common/versioned/v1/modules/response/beta/models/ExternalizableAbstractModel})
        - type: "object"
          description: DocRef(ClusterEntity)
          properties:
            name:
              description: DocRef(ClusterName)
              type: "string"
              x-constraints:
                maxLength: ConstantRef(maxClusterNameLength)
            nodes:
              description: DocRef(NodeReferenceDesc)
              $ref: ModelRef({./NodeReference})
            config:
              description: DocRef(ClusterConfig)
              $ref: ModelRef({./ClusterConfigReference})
            network:
              description: DocRef(ClusterNetworkDesc)
              $ref: ModelRef({./ClusterNetworkReference})
            upgradeStatus:
              description: DocRef(UpgradeStatusDesc)
              $ref: ModelRef({./UpgradeStatus})
              readOnly: true
            vmCount:
              description: DocRef(VmCountDesc)
              type: "integer"
              format: int64
              readOnly: true
            inefficientVmCount:
              description: DocRef(InefficientVmCountDesc)
              type: "integer"
              format: int64
              readOnly: true
            containerName:
              description: DocRef(ContainerNameDesc)
              type: "string"
              x-constraints:
                maxLength: ConstantRef(maxContainerNameLength)

            categories:
              description: DocRef(CategoriesDesc)
              type: array
              minItems: 0
              maxItems: 1024
              items:
                type: "string"
                x-constraints:
                  pattern: "ConstantRef({ext:common:/namespaces/common}, uuidPattern)"
            clusterProfileExtId:
              description: DocRef(ClusterProfileExtIdDescription)
              readOnly: true
              type: "string"
              x-constraints:
                pattern: "ConstantRef({ext:common:/namespaces/common}, uuidPattern)"
            backupEligibilityScore:
              description: DocRef(BackupEligibilityScoreDesc)
              readOnly: true
              type: "integer"
              format: int64
      x-codegen-hint:
        $any:
          - type: entity-identifier
            properties:
              identifiers:
                - type: "ModelRef({ext:common:/namespaces/common/versioned/v1/modules/response/beta/models/ExternalizableAbstractModel})"
                  name: base
                  index: 2001
                - name: "name"
                  index: 2002
                - name: "nodes"
                  index: 2003
                - name: "config"
                  index: 2004
                - name: "network"
                  index: 2005
                - name: "upgradeStatus"
                  index: 2006
                - name: "vmCount"
                  index: 2007
                - name: "inefficientVmCount"
                  index: 2008
                - name: "containerName"
                  index: 2009
                - name: "categories"
                  index: 2010
                - name: "clusterProfileExtId"
                  index: 2011
                - name: "backupEligibilityScore"
                  index: 2012

    NodeReference:
      description: DocRef(NodeReferenceDesc)
      type: "object"
      x-complex-type-edm: true
      x-sortable-properties:
        - numberOfNodes
      x-groupable-properties:
        - numberOfNodes
      x-property-mapping:
        - name: "numberOfNodes"
          value: "num_nodes"
      properties:
        numberOfNodes:
          description: DocRef(NumberOfNodesDesc)
          readOnly: true
          type: "integer"
          format: int32
        nodeList:
          description: DocRef(NodeListDesc)
          type: array
          minItems: 0
          maxItems: 1024
          items:
            $ref: ModelRef({./NodeListItemReference})
      x-codegen-hint:
        $any:
          - type: entity-identifier
            properties:
              identifiers:
                - name: "numberOfNodes"
                  index: 2001
                - name: "nodeList"
                  index: 2002

    NodeListItemReference:
      description: DocRef(NodeListDesc)
      type: "object"
      x-required-by-operation:
        create:
          - controllerVmIp
      properties:
        controllerVmIp:
          description: DocRef(ControllerVmIpDesc)
          $ref: ModelRef({ext:common:/namespaces/common/versioned/v1/modules/config/beta/models/IPAddress})
        nodeUuid:
          description: DocRef(NodeUuid)
          readOnly: true
          type: "string"
          x-constraints:
            pattern: "ConstantRef({ext:common:/namespaces/common}, uuidPattern)"
        hostIp:
          description: DocRef(HostIpDesc)
          readOnly: true
          $ref: ModelRef({ext:common:/namespaces/common/versioned/v1/modules/config/beta/models/IPAddress})
      x-codegen-hint:
        $any:
          - type: entity-identifier
            properties:
              identifiers:
                - name: "controllerVmIp"
                  index: 2001
                - name: "nodeUuid"
                  index: 2002
                - name: "hostIp"
                  index: 2003

    ClusterConfigReference:
      x-complex-type-edm: true
      x-sortable-properties:
        - buildInfo
        - isAvailable
      x-filterable-properties:
        - buildInfo
        - hypervisorTypes
        - encryptionOption
        - encryptionScope
        - encryptionInTransitStatus
        - isAvailable
        - clusterFunction
      x-groupable-properties:
        - buildInfo
      x-property-mapping:
        - name: "hypervisorTypes"
          value: "hypervisor_types"
        - name: "encryptionOption"
          value: "encryption_option"
        - name: "encryptionScope"
          value: "encryption_scope"
        - name: "encryptionInTransitStatus"
          value: "encryption_in_transit"
        - name: "clusterArch"
          value: "clusterArch"
        - name: "clusterFunction"
          value: "service_list"
        - name: "timezone"
          value: "timezone"
        - name: "redundancyFactor"
          value: "redundancy_factor"
        - name: "isAvailable"
          value: "is_available"
      description: DocRef(ClusterConfig)
      type: "object"
      properties:
        incarnationId:
          description: DocRef(IncarnationDesc)
          readOnly: true
          type: "integer"
          format: int64
        buildInfo:
          description: DocRef(BuildInfo)
          readOnly: true
          $ref: ModelRef({./BuildReference})
        hypervisorTypes:
          description: DocRef(HypervisorTypes)
          readOnly: true
          type: array
          minItems: 0
          maxItems: 5
          items:
            $ref: ModelRef({./HypervisorType})
        clusterFunction:
          description: DocRef(ClusterFunctionDesc)
          type: array
          minItems: 0
          maxItems: 7
          items:
            $ref: ModelRef({./ClusterFunctionRef})
        timezone:
          description: DocRef(TimezoneDesc)
          readOnly: true
          type: "string"
        authorizedPublicKeyList:
          description: DocRef(PublicKeyDesc)
          type: array
          minItems: 0
          maxItems: 1024
          items:
            $ref: ModelRef({./PublicKey})
        redundancyFactor:
          description: DocRef(RedundancyFactorDesc)
          type: "integer"
          format: int64
        clusterSoftwareMap:
          description: DocRef(ClusterSoftwareMapDesc)
          readOnly: true
          type: array
          minItems: 0
          maxItems: 3
          items:
            $ref: ModelRef({./SoftwareMapReference})
        clusterArch:
          description: DocRef(ClusterArchDesc)
          readOnly: true
          $ref: ModelRef({./ClusterArchReference})
        faultToleranceState:
          description: DocRef(FaultToleranceStateDesc)
          $ref: ModelRef({./FaultToleranceState})
        isRemoteSupportEnabled:
          description: DocRef(IsRemoteSupportEnabled)
          readOnly: true
          type: "boolean"
        operationMode:
          description: DocRef(OperationModeDesc)
          $ref: ModelRef({./OperationMode})
        isLts:
          description: DocRef(LtsDesc)
          readOnly: true
          type: "boolean"
        isPasswordRemoteLoginEnabled:
          description: DocRef(PasswordRemoteDesc)
          readOnly: true
          type: "boolean"
        encryptionInTransitStatus:
          description: DocRef(EncryptionStatusDesc)
          $ref: ModelRef({./EncryptionStatus})
          readOnly: true
        encryptionOption:
          description: DocRef(EncryptionOptionDesc)
          type: array
          minItems: 0
          maxItems: 3
          items:
            $ref: ModelRef({./EncryptionOptionInfo})
          readOnly: true
        encryptionScope:
          description: DocRef(EncryptionScopeDesc)
          type: array
          minItems: 0
          maxItems: 2
          items:
            $ref: ModelRef({./EncryptionScopeInfo})
          readOnly: true
        pulseStatus:
          description: DocRef(PulseStatusDesc)
          $ref: ModelRef({./PulseStatus})
        isAvailable:
          description: DocRef(IsAvailableDesc)
          readOnly: true
          type: "boolean"
      x-codegen-hint:
        $any:
          - type: entity-identifier
            properties:
              identifiers:
                - name: "incarnationId"
                  index: 2001
                - name: "buildInfo"
                  index: 2002
                - name: "hypervisorTypes"
                  index: 2003
                - name: "clusterFunction"
                  index: 2004
                - name: "timezone"
                  index: 2005
                - name: "authorizedPublicKeyList"
                  index: 2006
                - name: "redundancyFactor"
                  index: 2007
                - name: "clusterSoftwareMap"
                  index: 2008
                - name: "clusterArch"
                  index: 2009
                - name: "faultToleranceState"
                  index: 2010
                - name: "isRemoteSupportEnabled"
                  index: 2011
                - name: "operationMode"
                  index: 2012
                - name: "isLts"
                  index: 2013
                - name: "isPasswordRemoteLoginEnabled"
                  index: 2014
                - name: "encryptionInTransitStatus"
                  index: 2015
                - name: "encryptionOption"
                  index: 2016
                - name: "encryptionScope"
                  index: 2017
                - name: "pulseStatus"
                  index: 2018
                - name: "isAvailable"
                  index: 2019

    BuildReference:
      x-complex-type-edm: true
      x-sortable-properties:
        - version
      x-filterable-properties:
        - version
      x-groupable-properties:
        - version
      x-property-mapping:
        - name: "version"
          value: "version"
      description: DocRef(BuildInfo)
      type: "object"
      properties:
        buildType:
          description: DocRef(BuildTypeDesc)
          type: "string"
        version:
          description: DocRef(BuildVersionDesc)
          type: "string"
        fullVersion:
          description: DocRef(BuildFullVersionDesc)
          type: "string"
        commitId:
          description: DocRef(CommitIdDesc)
          type: "string"
        shortCommitId:
          description: DocRef(ShortCommitIdDesc)
          type: "string"
      x-codegen-hint:
        $any:
          - type: entity-identifier
            properties:
              identifiers:
                - name: "buildType"
                  index: 2001
                - name: "version"
                  index: 2002
                - name: "fullVersion"
                  index: 2003
                - name: "commitId"
                  index: 2004
                - name: "shortCommitId"
                  index: 2005

    ClusterFunctionRef:
      description: DocRef(ClusterFunctionDesc)
      allOf:
        - $ref: "ModelRef({ext:common:/namespaces/common/versioned/v1/modules/config/beta/models/BaseEnum})"
        - type: "string"
          enum:
            - AOS
            - PRISM_CENTRAL
            - CLOUD_DATA_GATEWAY
            - AFS
            - ONE_NODE
            - TWO_NODE
            - ANALYTICS_PLATFORM
          x-property-mapping:
            - name: AOS
              value: AOS
            - name: PRISM_CENTRAL
              value: PRISM_CENTRAL
            - name: CLOUD_DATA_GATEWAY
              value: CLOUD_DATA_GATEWAY
            - name: AFS
              value: AFS
            - name: ONE_NODE
              value: ONE_NODE
            - name: TWO_NODE
              value: TWO_NODE
            - name: ANALYTICS_PLATFORM
              value: ANALYTICS_PLATFORM
          x-codegen-hint:
            $any:
              - type: enum
                properties:
                  descriptions:
                    - name: 'AOS'
                      description: DocRef(AosDescription)
                    - name: 'PRISM_CENTRAL'
                      description: DocRef(PrismCentralDescription)
                    - name: 'CLOUD_DATA_GATEWAY'
                      description: DocRef(CloudDataGatewayDescription)
                    - name: 'AFS'
                      description: DocRef(AfsDescription)
                    - name: 'ONE_NODE'
                      description: DocRef(OneNodeDescription)
                    - name: 'TWO_NODE'
                      description: DocRef(TwoNodeDescription)
                    - name: 'ANALYTICS_PLATFORM'
                      description: DocRef(AnalyticsPlatformDescription)
              - type: entity-identifier
                properties:
                  identifiers:
                    - value: "AOS"
                      index: 2001
                    - value: "PRISM_CENTRAL"
                      index: 2002
                    - value: "CLOUD_DATA_GATEWAY"
                      index: 2003
                    - value: "AFS"
                      index: 2004
                    - value: "ONE_NODE"
                      index: 2005
                    - value: "TWO_NODE"
                      index: 2006
                    - value: "ANALYTICS_PLATFORM"
                      index: 2007

    PublicKey:
      description: DocRef(PublicKeyDesc)
      type: "object"
      required:
        - name
        - key
      properties:
        name:
          description: DocRef(KeyNameDesc)
          type: "string"
          x-constraints:
            maxLength: ConstantRef(maxPublicKeyNameLength)
        key:
          description: DocRef(KeyValueDesc)
          type: "string"
      x-codegen-hint:
        $any:
          - type: entity-identifier
            properties:
              identifiers:
                - name: "name"
                  index: 2001
                - name: "key"
                  index: 2002

    SoftwareMapReference:
      description: DocRef(ClusterSoftwareMapDesc)
      type: "object"
      properties:
        softwareType:
          description: DocRef(SoftwareTypeDesc)
          $ref: ModelRef({./SoftwareTypeRef})
        version:
          description: DocRef(SoftwareVersionDesc)
          type: "string"
      x-codegen-hint:
        $any:
          - type: entity-identifier
            properties:
              identifiers:
                - name: "softwareType"
                  index: 2001
                - name: "version"
                  index: 2002

    SoftwareTypeRef:
      description: DocRef(SoftwareTypeDesc)
      allOf:
        - $ref: "ModelRef({ext:common:/namespaces/common/versioned/v1/modules/config/beta/models/BaseEnum})"
        - type: "string"
          enum:
            - NOS
            - NCC
            - PRISM_CENTRAL
          x-codegen-hint:
            $any:
              - type: enum
                properties:
                  descriptions:
                    - name: 'NOS'
                      description: DocRef(NosDescription)
                    - name: 'NCC'
                      description: DocRef(NccDescription)
                    - name: 'PRISM_CENTRAL'
                      description: DocRef(PrismCentralSoftwareTypeDescription)
              - type: entity-identifier
                properties:
                  identifiers:
                    - value: "NOS"
                      index: 2001
                    - value: "NCC"
                      index: 2002
                    - value: "PRISM_CENTRAL"
                      index: 2003

    ClusterArchReference:
      description: DocRef(ClusterArchDesc)
      allOf:
        - $ref: "ModelRef({ext:common:/namespaces/common/versioned/v1/modules/config/beta/models/BaseEnum})"
        - type: "string"
          enum:
            - X86_64
            - PPC64LE
          x-property-mapping:
            - name: X86_64
              value: X86_64
            - name: PPC64LE
              value: PPC64LE
          x-codegen-hint:
            $any:
              - type: enum
                properties:
                  descriptions:
                    - name: 'X86_64'
                      description: DocRef(ClusterArchType1Description)
                    - name: 'PPC64LE'
                      description: DocRef(ClusterArchType2Description)
              - type: entity-identifier
                properties:
                  identifiers:
                    - value: "X86_64"
                      index: 2001
                    - value: "PPC64LE"
                      index: 2002

    FaultToleranceState:
      description: DocRef(FaultToleranceStateDesc)
      type: "object"
      properties:
        currentMaxFaultTolerance:
          description: DocRef(CurrentMaxFaultToleranceDesc)
          readOnly: true
          type: "integer"
          format: int32
        desiredMaxFaultTolerance:
          description: DocRef(DesiredMaxFaultToleranceDesc)
          readOnly: true
          type: "integer"
          format: int32
        domainAwarenessLevel:
          description: DocRef(DomainAwarenessLevelDesc)
          $ref: ModelRef({./DomainAwarenessLevel})
        currentClusterFaultTolerance:
          description: DocRef(CurrentClusterFaultToleranceDesc)
          readOnly: true
          $ref: ModelRef({./ClusterFaultToleranceRef})
        desiredClusterFaultTolerance:
          description: DocRef(DesiredClusterFaultToleranceDesc)
          $ref: ModelRef({./ClusterFaultToleranceRef})
        redundancyStatus:
          description: DocRef(RedundancyStatusDetailsDesc)
          $ref: ModelRef({./RedundancyStatusDetails})
      x-codegen-hint:
        $any:
          - type: entity-identifier
            properties:
              identifiers:
                - name: "currentMaxFaultTolerance"
                  index: 2001
                - name: "desiredMaxFaultTolerance"
                  index: 2002
                - name: "domainAwarenessLevel"
                  index: 2003
                - name: "currentClusterFaultTolerance"
                  index: 2004
                - name: "desiredClusterFaultTolerance"
                  index: 2005
                - name: "redundancyStatus"
                  index: 2006

    DomainAwarenessLevel:
      description: DocRef(DomainAwarenessLevelDesc)
      allOf:
        - $ref: "ModelRef({ext:common:/namespaces/common/versioned/v1/modules/config/beta/models/BaseEnum})"
        - type: "string"
          enum:
            - NODE
            - BLOCK
            - RACK
            - DISK
          x-codegen-hint:
            $any:
              - type: enum
                properties:
                  descriptions:
                    - name: 'NODE'
                      description: DocRef(NodeDescription)
                    - name: 'BLOCK'
                      description: DocRef(BlockDescription)
                    - name: 'RACK'
                      description: DocRef(RackDescription)
                    - name: 'DISK'
                      description: DocRef(DiskDescription)
              - type: entity-identifier
                properties:
                  identifiers:
                    - value: "NODE"
                      index: 2001
                    - value: "BLOCK"
                      index: 2002
                    - value: "RACK"
                      index: 2003
                    - value: "DISK"
                      index: 2004

    OperationMode:
      description: DocRef(OperationModeDesc)
      allOf:
        - $ref: "ModelRef({ext:common:/namespaces/common/versioned/v1/modules/config/beta/models/BaseEnum})"
        - type: "string"
          enum:
            - NORMAL
            - READ_ONLY
            - STAND_ALONE
            - SWITCH_TO_TWO_NODE
            - OVERRIDE
          x-codegen-hint:
            $any:
              - type: enum
                properties:
                  descriptions:
                    - name: 'NORMAL'
                      description: DocRef(NormalModeDescription)
                    - name: 'READ_ONLY'
                      description: DocRef(ReadOnlyModeDescription)
                    - name: 'STAND_ALONE'
                      description: DocRef(StandAloneModeDescription)
                    - name: 'SWITCH_TO_TWO_NODE'
                      description: DocRef(SwitchTwoNodeModeDescription)
                    - name: 'OVERRIDE'
                      description: DocRef(OverrideModeDescription)
              - type: entity-identifier
                properties:
                  identifiers:
                    - value: "NORMAL"
                      index: 2001
                    - value: "READ_ONLY"
                      index: 2002
                    - value: "STAND_ALONE"
                      index: 2003
                    - value: "SWITCH_TO_TWO_NODE"
                      index: 2004
                    - value: "OVERRIDE"
                      index: 2005

    ClusterNetworkReference:
      x-complex-type-edm: true
      x-sortable-properties:
        - keyManagementServerType
      x-filterable-properties:
        - keyManagementServerType
      x-property-mapping:
        - name: "keyManagementServerType"
          value: "key_management_server"
      description: DocRef(ClusterNetworkDesc)
      type: "object"
      properties:
        externalAddress:
          description: DocRef(ExternalIpDesc)
          $ref: ModelRef({ext:common:/namespaces/common/versioned/v1/modules/config/beta/models/IPAddress})
        externalDataServiceIp:
          description: DocRef(ExternalDataServiceIpDesc)
          $ref: ModelRef({ext:common:/namespaces/common/versioned/v1/modules/config/beta/models/IPAddress})
        externalSubnet:
          description: DocRef(ExternalSubnetDesc)
          readOnly: true
          type: "string"
        internalSubnet:
          description: DocRef(InternalSubnetDesc)
          readOnly: true
          type: "string"
        nfsSubnetWhitelist:
          description: DocRef(NfsSubnetWhitelistDesc)
          type: array
          x-constraints:
            minItems: ConstantRef(minNfsSubnetWhitelistCount)
            maxItems: ConstantRef(maxNfsSubnetWhitelistCount)
          items:
            type: "string"
            x-constraints:
              pattern: ConstantRef(nfsSubnetWhitelistConstraint)
        nameServerIpList:
          description: DocRef(NameServerDesc)
          type: array
          x-constraints:
            minItems: ConstantRef(minNameServersCount)
            maxItems: ConstantRef(maxNameServersCount)
          items:
            $ref: ModelRef({ext:common:/namespaces/common/versioned/v1/modules/config/beta/models/IPAddressOrFQDN})
        ntpServerIpList:
          description: DocRef(NtpServerDesc)
          type: array
          x-constraints:
            minItems: ConstantRef(minNtpServersCount)
            maxItems: ConstantRef(maxNtpServersCount)
          items:
            $ref: ModelRef({ext:common:/namespaces/common/versioned/v1/modules/config/beta/models/IPAddressOrFQDN})
        smtpServer:
          description: DocRef(SmtpServerDesc)
          $ref: ModelRef({./SmtpServerRef})
        masqueradingIp:
          description: DocRef(MasqueradingIpDesc)
          readOnly: true
          $ref: ModelRef({ext:common:/namespaces/common/versioned/v1/modules/config/beta/models/IPAddress})
        masqueradingPort:
          description: DocRef(MasqueradingPortDesc)
          readOnly: true
          type: "integer"
          format: int32
        managementServer:
          description: DocRef(ManagementServerDesc)
          readOnly: true
          $ref: ModelRef({./ManagementServerRef})
        fqdn:
          description: DocRef(FqdnDesc)
          type: "string"
          x-constraints:
            pattern: "ConstantRef({ext:common:/namespaces/common}, fqdnPattern)"
        keyManagementServerType:
          description: DocRef(KeyManagementServerTypeDesc)
          readOnly: true
          $ref: ModelRef({./KeyManagementServerType})
        backplane:
          description: DocRef(BackplaneNetworkParamsDesc)
          $ref: ModelRef({./BackplaneNetworkParams})
        httpProxyList:
          description: DocRef(HttpProxyConfigListDesc)
          type: array
          minItems: 0
          maxItems: 1
          items:
            $ref: ModelRef({./HttpProxyConfig})
        httpProxyWhiteList:
          description: DocRef(HttpProxyWhiteListConfigDesc)
          type: array
          minItems: 0
          maxItems: 1000
          items:
            $ref: ModelRef({./HttpProxyWhiteListConfig})
      x-codegen-hint:
        $any:
          - type: entity-identifier
            properties:
              identifiers:
                - name: "externalAddress"
                  index: 2001
                - name: "externalDataServiceIp"
                  index: 2002
                - name: "externalSubnet"
                  index: 2003
                - name: "internalSubnet"
                  index: 2004
                - name: "nfsSubnetWhitelist"
                  index: 2005
                - name: "nameServerIpList"
                  index: 2006
                - name: "ntpServerIpList"
                  index: 2007
                - name: "smtpServer"
                  index: 2008
                - name: "masqueradingIp"
                  index: 2009
                - name: "masqueradingPort"
                  index: 2010
                - name: "managementServer"
                  index: 2011
                - name: "fqdn"
                  index: 2012
                - name: "keyManagementServerType"
                  index: 2013
                - name: "backplane"
                  index: 2014
                - name: "httpProxyList"
                  index: 2015
                - name: "httpProxyWhiteList"
                  index: 2016

    KeyManagementServerType:
      description: DocRef(KeyManagementServerTypeDesc)
      allOf:
        - $ref: "ModelRef({ext:common:/namespaces/common/versioned/v1/modules/config/beta/models/BaseEnum})"
        - type: "string"
          enum:
            - LOCAL
            - PRISM_CENTRAL
            - EXTERNAL
          x-property-mapping:
            - name: LOCAL
              value: local
            - name: EXTERNAL
              value: external
            - name: PRISM_CENTRAL
              value: prism_central
          x-codegen-hint:
            $any:
              - type: enum
                properties:
                  descriptions:
                    - name: 'LOCAL'
                      description: DocRef(LocalServerTypeDescription)
                    - name: 'PRISM_CENTRAL'
                      description: DocRef(PrismCentralServerTypeDescription)
                    - name: 'EXTERNAL'
                      description: DocRef(ExternalServerTypeDescription)
              - type: entity-identifier
                properties:
                  identifiers:
                    - value: "LOCAL"
                      index: 2001
                    - value: "PRISM_CENTRAL"
                      index: 2002
                    - value: "EXTERNAL"
                      index: 2003

    EncryptionOptionInfo:
      description: DocRef(EncryptionOptionDesc)
      allOf:
        - $ref: "ModelRef({ext:common:/namespaces/common/versioned/v1/modules/config/beta/models/BaseEnum})"
        - type: "string"
          enum:
            - SOFTWARE
            - HARDWARE
            - SOFTWARE_AND_HARDWARE
          x-property-mapping:
            - name: SOFTWARE
              value: SW
            - name: HARDWARE
              value: HW
            - name: SOFTWARE_AND_HARDWARE
              value: SW+HW
          x-codegen-hint:
            $any:
              - type: enum
                properties:
                  descriptions:
                    - name: 'SOFTWARE'
                      description: DocRef(SoftwareEncryptionDescription)
                    - name: 'HARDWARE'
                      description: DocRef(HardwareEncryptionDescription)
                    - name: 'SOFTWARE_AND_HARDWARE'
                      description: DocRef(SoftwareAndHardwareEncryptionDescription)
              - type: entity-identifier
                properties:
                  identifiers:
                    - value: "SOFTWARE"
                      index: 2001
                    - value: "HARDWARE"
                      index: 2002
                    - value: "SOFTWARE_AND_HARDWARE"
                      index: 2003

    EncryptionScopeInfo:
      description: DocRef(EncryptionScopeDesc)
      allOf:
        - $ref: "ModelRef({ext:common:/namespaces/common/versioned/v1/modules/config/beta/models/BaseEnum})"
        - type: "string"
          enum:
            - CLUSTER
            - CONTAINER
          x-property-mapping:
            - name: CLUSTER
              value: cluster
            - name: CONTAINER
              value: container
          x-codegen-hint:
            $any:
              - type: enum
                properties:
                  descriptions:
                    - name: 'CLUSTER'
                      description: DocRef(ClusterScopeDescription)
                    - name: 'CONTAINER'
                      description: DocRef(ContainerScopeDescription)
              - type: entity-identifier
                properties:
                  identifiers:
                    - value: "CLUSTER"
                      index: 2001
                    - value: "CONTAINER"
                      index: 2002

    EncryptionStatus:
      description: DocRef(EncryptionStatusDesc)
      allOf:
        - $ref: "ModelRef({ext:common:/namespaces/common/versioned/v1/modules/config/beta/models/BaseEnum})"
        - type: "string"
          enum:
            - ENABLED
            - DISABLED
          x-property-mapping:
            - name: ENABLED
              value: 1
            - name: DISABLED
              value: 0
          x-codegen-hint:
            $any:
              - type: enum
                properties:
                  descriptions:
                    - name: 'ENABLED'
                      description: DocRef(EnabledStatusDescription)
                    - name: 'DISABLED'
                      description: DocRef(DisabledStatusDescription)
              - type: entity-identifier
                properties:
                  identifiers:
                    - value: "ENABLED"
                      index: 2001
                    - value: "DISABLED"
                      index: 2002

    UpgradeStatus:
      description: DocRef(UpgradeStatusDesc)
      allOf:
        - $ref: "ModelRef({ext:common:/namespaces/common/versioned/v1/modules/config/beta/models/BaseEnum})"
        - type: "string"
          enum:
            - PENDING
            - DOWNLOADING
            - QUEUED
            - PREUPGRADE
            - UPGRADING
            - SUCCEEDED
            - FAILED
            - CANCELLED
            - SCHEDULED
          x-property-mapping:
            - name: PENDING
              value: kPending
            - name: DOWNLOADING
              value: kDownloading
            - name: QUEUED
              value: kQueued
            - name: PREUPGRADE
              value: kPreupgrade
            - name: UPGRADING
              value: kUpgrading
            - name: SUCCEEDED
              value: kSucceeded
            - name: FAILED
              value: kFailed
            - name: CANCELLED
              value: kCancelled
            - name: SCHEDULED
              value: kScheduled
          x-codegen-hint:
            $any:
              - type: enum
                properties:
                  descriptions:
                    - name: 'PENDING'
                      description: DocRef(PendingStatusDescription)
                    - name: 'DOWNLOADING'
                      description: DocRef(DownloadStatusDescription)
                    - name: 'QUEUED'
                      description: DocRef(QueueStatusDescription)
                    - name: 'PREUPGRADE'
                      description: DocRef(PreupgradeStatusDescription)
                    - name: 'UPGRADING'
                      description: DocRef(UpgradeStatusDescription)
                    - name: 'SUCCEEDED'
                      description: DocRef(SuccessStatusDescription)
                    - name: 'FAILED'
                      description: DocRef(FailureStatusDescription)
                    - name: 'CANCELLED'
                      description: DocRef(CancelStatusDescription)
                    - name: 'SCHEDULED'
                      description: DocRef(ScheduledStatusDescription)
              - type: entity-identifier
                properties:
                  identifiers:
                    - value: "PENDING"
                      index: 2001
                    - value: "DOWNLOADING"
                      index: 2002
                    - value: "QUEUED"
                      index: 2003
                    - value: "PREUPGRADE"
                      index: 2004
                    - value: "UPGRADING"
                      index: 2005
                    - value: "SUCCEEDED"
                      index: 2006
                    - value: "FAILED"
                      index: 2007
                    - value: "CANCELLED"
                      index: 2008
                    - value: "SCHEDULED"
                      index: 2009

    PulseStatus:
      description: DocRef(PulseStatusDesc)
      type: "object"
      properties:
        isEnabled:
          description: DocRef(PulseEnabledDesc)
          type: "boolean"
        piiScrubbingLevel:
          description: DocRef(PIIScrubbingLevelDesc)
          $ref: ModelRef({./PIIScrubbingLevel})
      x-codegen-hint:
        $any:
          - type: entity-identifier
            properties:
              identifiers:
                - name: "isEnabled"
                  index: 2001
                - name: "piiScrubbingLevel"
                  index: 2002

    PIIScrubbingLevel:
      description: DocRef(PIIScrubbingLevelDesc)
      allOf:
        - $ref: "ModelRef({ext:common:/namespaces/common/versioned/v1/modules/config/beta/models/BaseEnum})"
        - type: "string"
          enum:
            - DEFAULT
            - ALL
          x-property-mapping:
            - name: DEFAULT
              value: kAuto
            - name: ALL
              value: kAll
          x-codegen-hint:
            $any:
              - type: enum
                properties:
                  descriptions:
                    - name: 'DEFAULT'
                      description: DocRef(DefaultPIIScrubbingLevelDescription)
                    - name: 'ALL'
                      description: DocRef(AllPIIScrubbingLevelDescription)
              - type: entity-identifier
                properties:
                  identifiers:
                    - value: "DEFAULT"
                      index: 2001
                    - value: "ALL"
                      index: 2002

    ManagementServerRef:
      description: DocRef(ManagementServerDesc)
      type: "object"
      properties:
        ip:
          description: DocRef(ManagementServerIpDesc)
          $ref: ModelRef({ext:common:/namespaces/common/versioned/v1/modules/config/beta/models/IPAddress})
        type:
          description: DocRef(ManagementServerTypeDesc)
          $ref: ModelRef({./ManagementServerType})
        isDrsEnabled:
          description: DocRef(IsDrsEnabledDesc)
          type: "boolean"
        isRegistered:
          description: DocRef(ManagementServerRegisterDesc)
          type: "boolean"
        isInUse:
          description: DocRef(ManagementServerInUseDesc)
          type: "boolean"
      x-codegen-hint:
        $any:
          - type: entity-identifier
            properties:
              identifiers:
                - name: "ip"
                  index: 2001
                - name: "type"
                  index: 2002
                - name: "isDrsEnabled"
                  index: 2003
                - name: "isRegistered"
                  index: 2004
                - name: "isInUse"
                  index: 2005

    ManagementServerType:
      description: DocRef(ManagementServerTypeDesc)
      allOf:
        - $ref: "ModelRef({ext:common:/namespaces/common/versioned/v1/modules/config/beta/models/BaseEnum})"
        - type: "string"
          enum:
            - VCENTER
          x-property-mapping:
            - name: VCENTER
              value: vcenter
          x-codegen-hint:
            $any:
              - type: enum
                properties:
                  descriptions:
                    - name: 'VCENTER'
                      description: DocRef(VcenterServerTypeDescription)
              - type: entity-identifier
                properties:
                  identifiers:
                    - value: "VCENTER"
                      index: 2001

    BasicAuthenticationCredentials:
      description: DocRef(BasicAuthenticationCredentialsDesc)
      type: "object"
      required:
        - username
        - password
      properties:
        username:
          description: DocRef(UserNameDesc)
          type: "string"
          x-constraints:
            maxLength: ConstantRef(maxBasicAuthenticationCredentialsUsernameLength)
        password:
          description: DocRef(PasswordDesc)
          type: "string"
      x-internal: true
      x-codegen-hint:
        $any:
          - type: entity-identifier
            properties:
              identifiers:
                - name: "username"
                  index: 2001
                - name: "password"
                  index: 2002

    ConfigCredentials:
      type: "object"
      description: DocRef(ConfigCredentials)
      properties:
        smtp:
          description: DocRef(SmtpCredentialsDesc)
          $ref: ModelRef({./BasicAuthenticationCredentials})
        snmp:
          description: DocRef(SnmpUserCredentialsDesc)
          type: "array"
          minItems: 0
          maxItems: 1024
          items:
            $ref: ModelRef({./SnmpUserCredentials})
        httpProxy:
          description: DocRef(HttpProxyCredentialsDesc)
          $ref: ModelRef({./BasicAuthenticationCredentials})
      x-internal: true
      x-codegen-hint:
        $any:
          - type: entity-identifier
            properties:
              identifiers:
                - name: "smtp"
                  index: 2001
                - name: "snmp"
                  index: 2002
                - name: "httpProxy"
                  index: 2003

    SmtpNetwork:
      type: "object"
      description: DocRef(SmtpNetworkDesc)
      required:
        - ipAddress
      properties:
        ipAddress:
          description: DocRef(SmtpServerIpDesc)
          $ref: ModelRef({ext:common:/namespaces/common/versioned/v1/modules/config/beta/models/IPAddress})
        port:
          description: DocRef(SmtpPortDesc)
          type: "integer"
          format: int32
        username:
          description: DocRef(SmtpServerUsernameDesc)
          type: string
          x-constraints:
            maxLength: ConstantRef(maxUsernameLength)
        password:
          description: DocRef(SmtpServerPasswordDesc)
          type: "string"
      x-codegen-hint:
        $any:
          - type: entity-identifier
            properties:
              identifiers:
                - name: "ipAddress"
                  index: 2001
                - name: "port"
                  index: 2002
                - name: "username"
                  index: 2003
                - name: "password"
                  index: 2004

    RackableUnit:
      description: DocRef(RackableUnit)
      allOf:
        - $ref: ModelRef({ext:common:/namespaces/common/versioned/v1/modules/response/beta/models/ExternalizableAbstractModel})
        - type: "object"
          properties:
            id:
              description: DocRef(RackableUnitId)
              type: "integer"
              format: int64
            serial:
              description: DocRef(RackableUnitSerialDesc)
              type: "string"
            model:
              description: DocRef(RackableUnitModelDesc)
              $ref: ModelRef({./RackableUnitModel})
            modelName:
              description: DocRef(RackableUnitModelNameDesc)
              type: "string"
              x-constraints:
                maxLength: ConstantRef(maxRackableUnitModelNameLength)
            nodes:
              description: DocRef(RackableUnitNodeDesc)
              type: "array"
              minItems: 0
              maxItems: 1024
              items:
                $ref: ModelRef({./RackableUnitNode})
            rack:
              description: DocRef(RackReferenceDesc)
              $ref: ModelRef({./RackReference})
      x-codegen-hint:
        $any:
          - type: entity-identifier
            properties:
              identifiers:
                - type: "ModelRef({ext:common:/namespaces/common/versioned/v1/modules/response/beta/models/ExternalizableAbstractModel})"
                  name: base
                  index: 2001
                - name: "id"
                  index: 2002
                - name: "serial"
                  index: 2004
                - name: "model"
                  index: 2005
                - name: "modelName"
                  index: 2006
                - name: "nodes"
                  index: 2007
                - name: "rack"
                  index: 2008

    RackReference:
      type: "object"
      description: DocRef(RackReferenceDesc)
      properties:
        uuid:
          description: DocRef(RackUuidDesc)
          type: "string"
          x-constraints:
            pattern: "ConstantRef({ext:common:/namespaces/common}, uuidPattern)"
        id:
          description: DocRef(RackIdDesc)
          type: "integer"
          format: int64
      x-codegen-hint:
        $any:
          - type: entity-identifier
            properties:
              identifiers:
                - name: "uuid"
                  index: 2001
                - name: "id"
                  index: 2002

    RackableUnitModel:
      description: DocRef(RackableUnitModelDesc)
      allOf:
        - $ref: "ModelRef({ext:common:/namespaces/common/versioned/v1/modules/config/beta/models/BaseEnum})"
        - type: "string"
          enum:
            - DESKTOP
            - NX2000
            - NX3000
            - NX3050
            - NX6050
            - NX6070
            - NX1050
            - NX3060
            - NX6060
            - NX6080
            - NX6020
            - NX7110
            - NX1020
            - NX9040
            - USELAYOUT
            - NULLVALUE
          x-codegen-hint:
            $any:
              - type: enum
                properties:
                  descriptions:
                    - name: 'DESKTOP'
                      description: DocRef(DesktopModelDescription)
                    - name: 'NX2000'
                      description: DocRef(NX2000ModelDescription)
                    - name: 'NX3000'
                      description: DocRef(NX3000ModelDescription)
                    - name: 'NX3050'
                      description: DocRef(NX3050ModelDescription)
                    - name: 'NX6050'
                      description: DocRef(NX6050ModelDescription)
                    - name: 'NX6070'
                      description: DocRef(NX6070ModelDescription)
                    - name: 'NX1050'
                      description: DocRef(NX1050ModelDescription)
                    - name: 'NX3060'
                      description: DocRef(NX3060ModelDescription)
                    - name: 'NX6060'
                      description: DocRef(NX6060ModelDescription)
                    - name: 'NX6080'
                      description: DocRef(NX6080ModelDescription)
                    - name: 'NX6020'
                      description: DocRef(NX6020ModelDescription)
                    - name: 'NX7110'
                      description: DocRef(NX7110ModelDescription)
                    - name: 'NX1020'
                      description: DocRef(NX1020ModelDescription)
                    - name: 'NX9040'
                      description: DocRef(NX9040ModelDescription)
                    - name: 'USELAYOUT'
                      description: DocRef(UseLayoutModelDescription)
                    - name: 'NULLVALUE'
                      description: DocRef(NullValModelDescription)
              - type: entity-identifier
                properties:
                  identifiers:
                    - value: "DESKTOP"
                      index: 2001
                    - value: "NX2000"
                      index: 2002
                    - value: "NX3000"
                      index: 2003
                    - value: "NX3050"
                      index: 2004
                    - value: "NX6050"
                      index: 2005
                    - value: "NX6070"
                      index: 2006
                    - value: "NX1050"
                      index: 2007
                    - value: "NX3060"
                      index: 2008
                    - value: "NX6060"
                      index: 2009
                    - value: "NX6080"
                      index: 2010
                    - value: "NX6020"
                      index: 2011
                    - value: "NX7110"
                      index: 2012
                    - value: "NX1020"
                      index: 2013
                    - value: "NX9040"
                      index: 2014
                    - value: "USELAYOUT"
                      index: 2015
                    - value: "NULLVALUE"
                      index: 2016

    RackableUnitNode:
      description: DocRef(RackableUnitNodeReferenceDesc)
      type: "object"
      properties:
        uuid:
          description: DocRef(NodeUuid)
          type: "string"
          x-constraints:
            pattern: "ConstantRef({ext:common:/namespaces/common}, uuidPattern)"
        svmId:
          description: DocRef(NodeSvmIdDesc)
          type: "integer"
          format: int64
        position:
          description: DocRef(NodePositionDesc)
          type: "integer"
          format: int32
      x-codegen-hint:
        $any:
          - type: entity-identifier
            properties:
              identifiers:
                - name: "uuid"
                  index: 2001
                - name: "svmId"
                  index: 2002
                - name: "position"
                  index: 2003

    MultiDomainFaultToleranceStatus:
      type: "object"
      description: DocRef(DomainFaultTolerance)
      properties:
        multiDomainFaultToleranceStatus:
          description: DocRef(MultiDomainFaultToleranceStatusDesc)
          type: "array"
          minItems: 1
          maxItems: 6
          items:
            $ref: ModelRef({./DomainFaultTolerance})
      x-codegen-hint:
        $any:
          - type: entity-identifier
            properties:
              identifiers:
                - name: "multiDomainFaultToleranceStatus"
                  index: 2001

    DomainFaultTolerance:
      type: "object"
      description: DocRef(DomainFaultTolerance)
      properties:
        type:
          description: DocRef(DomainTypeDesc)
          $ref: ModelRef({./DomainType})
        componentStatus:
          description: DocRef(ComponentListDesc)
          type: "array"
          minItems: 0
          maxItems: 8
          items:
            $ref: ModelRef({./ComponentFaultTolerance})
      x-codegen-hint:
        $any:
          - type: entity-identifier
            properties:
              identifiers:
                - name: "type"
                  index: 2001
                - name: "componentStatus"
                  index: 2002

    DomainType:
      description: DocRef(DomainTypeDesc)
      allOf:
        - $ref: "ModelRef({ext:common:/namespaces/common/versioned/v1/modules/config/beta/models/BaseEnum})"
        - type: "string"
          enum:
            - CUSTOM
            - DISK
            - NODE
            - RACKABLE_UNIT
            - RACK
            - CLUSTER
          x-codegen-hint:
            $any:
              - type: enum
                properties:
                  descriptions:
                    - name: 'CUSTOM'
                      description: DocRef(CustomTypeDescription)
                    - name: 'DISK'
                      description: DocRef(DiskTypeDescription)
                    - name: 'NODE'
                      description: DocRef(NodeTypeDescription)
                    - name: 'RACKABLE_UNIT'
                      description: DocRef(RackUnitTypeDescription)
                    - name: 'RACK'
                      description: DocRef(RackTypeDescription)
                    - name: 'CLUSTER'
                      description: DocRef(ClusterTypeDescription)
              - type: entity-identifier
                properties:
                  identifiers:
                    - value: "CUSTOM"
                      index: 2001
                    - value: "DISK"
                      index: 2002
                    - value: "NODE"
                      index: 2003
                    - value: "RACKABLE_UNIT"
                      index: 2004
                    - value: "RACK"
                      index: 2005
                    - value: "CLUSTER"
                      index: 2006

    ComponentFaultTolerance:
      description: DocRef(ComponentFaultToleranceDesc)
      type: "object"
      properties:
        type:
          description: DocRef(ComponentTypeDesc)
          $ref: ModelRef({./ComponentType})
        maxFaultsTolerated:
          description: DocRef(MaxFaultToleratedDesc)
          type: "integer"
          format: int32
        lastUpdatedTime:
          description: DocRef(LastUpdateSecDesc)
          type: "string"
          format: date-time
        isUnderComputation:
          description: DocRef(UnderComputationDesc)
          type: "boolean"
        detailMessage:
          description: DocRef(DetailMessageDesc)
          $ref: ModelRef({./ToleranceMessage})
      x-codegen-hint:
        $any:
          - type: entity-identifier
            properties:
              identifiers:
                - name: "type"
                  index: 2001
                - name: "maxFaultsTolerated"
                  index: 2002
                - name: "lastUpdatedTime"
                  index: 2003
                - name: "isUnderComputation"
                  index: 2004
                - name: "detailMessage"
                  index: 2005

    ComponentType:
      description: DocRef(ComponentTypeDesc)
      allOf:
        - $ref: "ModelRef({ext:common:/namespaces/common/versioned/v1/modules/config/beta/models/BaseEnum})"
        - type: "string"
          enum:
            - EXTENT_GROUP_REPLICAS
            - OPLOG_EPISODES
            - CASSANDRA_RING
            - ZOOKEPER_INSTANCES
            - FREE_SPACE
            - STATIC_CONFIG
            - ERASURE_CODE_STRIP_SIZE
            - STARGATE_HEALTH
          x-codegen-hint:
            $any:
              - type: enum
                properties:
                  descriptions:
                    - name: 'EXTENT_GROUP_REPLICAS'
                      description: DocRef(ExtentGrpTypeDescription)
                    - name: 'OPLOG_EPISODES'
                      description: DocRef(OplogTypeDescription)
                    - name: 'CASSANDRA_RING'
                      description: DocRef(CassandraRingTypeDescription)
                    - name: 'ZOOKEPER_INSTANCES'
                      description: DocRef(ZookeeperTypeDescription)
                    - name: 'FREE_SPACE'
                      description: DocRef(FreeSpaceTypeDescription)
                    - name: 'STATIC_CONFIG'
                      description: DocRef(StaticConfigTypeDescription)
                    - name: 'ERASURE_CODE_STRIP_SIZE'
                      description: DocRef(ErasureTypeDescription)
                    - name: 'STARGATE_HEALTH'
                      description: DocRef(StargateHealthTypeDescription)
              - type: entity-identifier
                properties:
                  identifiers:
                    - value: "EXTENT_GROUP_REPLICAS"
                      index: 2001
                    - value: "OPLOG_EPISODES"
                      index: 2002
                    - value: "CASSANDRA_RING"
                      index: 2003
                    - value: "ZOOKEPER_INSTANCES"
                      index: 2004
                    - value: "FREE_SPACE"
                      index: 2005
                    - value: "STATIC_CONFIG"
                      index: 2006
                    - value: "ERASURE_CODE_STRIP_SIZE"
                      index: 2007
                    - value: "STARGATE_HEALTH"
                      index: 2008

    ToleranceMessage:
      description: DocRef(DetailMessageDesc)
      type: "object"
      properties:
        id:
          description: DocRef(MessageIdDesc)
          type: "string"
        attributeList:
          description: DocRef(AttributeListDesc)
          type: "array"
          minItems: 0
          maxItems: 1024
          items:
            $ref: ModelRef({./AttributeItem})
      x-codegen-hint:
        $any:
          - type: entity-identifier
            properties:
              identifiers:
                - name: "id"
                  index: 2001
                - name: "attributeList"
                  index: 2002

    AttributeItem:
      description: DocRef(AttributeItemDesc)
      type: "object"
      properties:
        attribute:
          description: DocRef(AttributeKeyDesc)
          type: "string"
        value:
          description: DocRef(AttributeValueDesc)
          type: "string"
      x-codegen-hint:
        $any:
          - type: entity-identifier
            properties:
              identifiers:
                - name: "attribute"
                  index: 2001
                - name: "value"
                  index: 2002

    NodeDiscoveryParams:
      description: DocRef(DiscoverUnconfiguredNodeDesc)
      type: "object"
      properties:
        addressType:
          description: DocRef(AddressTypeDesc)
          $ref: ModelRef({./AddressType})
        ipFilterList:
          description: DocRef(IpFilterListDesc)
          type: "array"
          minItems: 0
          maxItems: 1024
          items:
            $ref: ModelRef({ext:common:/namespaces/common/versioned/v1/modules/config/beta/models/IPAddress})
        uuidFilterList:
          description: DocRef(UuidFilterListDesc)
          type: "array"
          minItems: 0
          maxItems: 1024
          items:
            type: "string"
            x-constraints:
              pattern: "ConstantRef({ext:common:/namespaces/common}, uuidPattern)"
        timeout:
          description: DocRef(TimeoutDesc)
          type: "integer"
          format: int64
        interfaceFilterList:
          description: DocRef(InterfaceFilterListDesc)
          type: "array"
          minItems: 0
          maxItems: 1024
          items:
            type: "string"
        isManualDiscovery:
          description: DocRef(ManualDiscoveryDesc)
          type: "boolean"
      x-codegen-hint:
        $any:
          - type: entity-identifier
            properties:
              identifiers:
                - name: "addressType"
                  index: 2001
                - name: "ipFilterList"
                  index: 2002
                - name: "uuidFilterList"
                  index: 2003
                - name: "timeout"
                  index: 2004
                - name: "interfaceFilterList"
                  index: 2005
                - name: "isManualDiscovery"
                  index: 2006

    AddressType:
      description: DocRef(AddressTypeDesc)
      allOf:
        - $ref: "ModelRef({ext:common:/namespaces/common/versioned/v1/modules/config/beta/models/BaseEnum})"
        - type: "string"
          enum:
            - IPV4
            - IPV6
          x-codegen-hint:
            $any:
              - type: enum
                properties:
                  descriptions:
                    - name: 'IPV4'
                      description: DocRef(Ipv4TypeDescription)
                    - name: 'IPV6'
                      description: DocRef(Ipv6TypeDescription)
              - type: entity-identifier
                properties:
                  identifiers:
                    - value: "IPV4"
                      index: 2001
                    - value: "IPV6"
                      index: 2002

    NodeDetails:
      description: DocRef(NetworkingDetailsBodyDesc)
      type: "object"
      required:
        - nodeList
      properties:
        nodeList:
          description: DocRef(NodesNetworkingDetailsBodyDesc)
          type: "array"
          minItems: 0
          maxItems: 1024
          items:
            $ref: ModelRef({./NodeListNetworkingDetails})
        requestType:
          description: DocRef(RequestTypeDesc)
          type: "string"
      x-codegen-hint:
        $any:
          - type: entity-identifier
            properties:
              identifiers:
                - name: "nodeList"
                  index: 2001
                - name: "requestType"
                  index: 2002

    NodeListNetworkingDetails:
      description: DocRef(NodesNetworkingDetailsBodyDesc)
      type: "object"
      properties:
        nodeUuid:
          description: DocRef(NodeUuid)
          type: "string"
          x-constraints:
            pattern: "ConstantRef({ext:common:/namespaces/common}, uuidPattern)"
        blockId:
          description: DocRef(BlockIdDesc)
          type: "string"
        nodePosition:
          description: DocRef(NodePositionDesc)
          type: "string"
        cvmIp:
          description: DocRef(ControllerVmIpDesc)
          $ref: ModelRef({ext:common:/namespaces/common/versioned/v1/modules/config/beta/models/IPAddress})
        hypervisorIp:
          description: DocRef(HypervisorIpDesc)
          $ref: ModelRef({ext:common:/namespaces/common/versioned/v1/modules/config/beta/models/IPAddress})
        ipmiIp:
          description: DocRef(IpmiIpDesc)
          $ref: ModelRef({ext:common:/namespaces/common/versioned/v1/modules/config/beta/models/IPAddress})
        digitalCertificateMapList:
          description: DocRef(DigitalCertificateMapListDesc)
          type: "array"
          minItems: 0
          maxItems: 1024
          items:
            $ref: ModelRef({./DigitalCertificateMapReference})
        model:
          description: DocRef(ModelDesc)
          type: "string"
        isComputeOnly:
          description: DocRef(IsComputeOnlyDesc)
          type: "boolean"
        isLightCompute:
          description: DocRef(isLightComputeDesc)
          type: "boolean"
        hypervisorType:
          description: DocRef(HypervisorTypes)
          $ref: ModelRef({./HypervisorType})
        hypervisorVersion:
          description: DocRef(HypervisorVersionDesc)
          type: "string"
        nosVersion:
          description: DocRef(NosVersionDesc)
          type: "string"
        currentNetworkInterface:
          description: DocRef(CurrentNetworkInterfaceDesc)
          type: "string"
        isRoboMixedHypervisor:
          description: DocRef(RoboMixedHypervisorDesc)
          type: "boolean"
      x-codegen-hint:
        $any:
          - type: entity-identifier
            properties:
              identifiers:
                - name: "nodeUuid"
                  index: 2001
                - name: "blockId"
                  index: 2002
                - name: "nodePosition"
                  index: 2003
                - name: "cvmIp"
                  index: 2004
                - name: "hypervisorIp"
                  index: 2005
                - name: "ipmiIp"
                  index: 2006
                - name: "digitalCertificateMapList"
                  index: 2007
                - name: "model"
                  index: 2008
                - name: "isComputeOnly"
                  index: 2009
                - name: "isLightCompute"
                  index: 2010
                - name: "hypervisorType"
                  index: 2011
                - name: "hypervisorVersion"
                  index: 2012
                - name: "nosVersion"
                  index: 2013
                - name: "currentNetworkInterface"
                  index: 2014
                - name: "isRoboMixedHypervisor"
                  index: 2015

    DigitalCertificateMapReference:
      description: DocRef(DigitalCertificateMapReferenceDesc)
      type: "object"
      properties:
        key:
          description: DocRef(DigitalCertificateMapReferenceKeyDesc)
          type: "string"
        value:
          description: DocRef(DigitalCertificateMapReferenceValueDesc)
          type: "string"
      x-codegen-hint:
        $any:
          - type: entity-identifier
            properties:
              identifiers:
                - name: "key"
                  index: 2001
                - name: "value"
                  index: 2002

    ExpandClusterParams:
      description: DocRef(AddNodeBodyDesc)
      type: "object"
      required:
        - nodeParams
      properties:
        nodeParams:
          description: DocRef(NodeParamDesc)
          type: "object"
          $ref: ModelRef({./NodeParam})
        configParams:
          description: DocRef(ConfigParamDesc)
          type: "object"
          $ref: ModelRef({./ConfigParams})
        shouldSkipAddNode:
          description: DocRef(SkipAddNodeDesc)
          type: "boolean"
        shouldSkipPreExpandChecks:
          description: DocRef(SkipPreExpandCheckDesc)
          type: "boolean"
      x-codegen-hint:
        $any:
          - type: entity-identifier
            properties:
              identifiers:
                - name: "nodeParams"
                  index: 2001
                - name: "configParams"
                  index: 2002
                - name: "shouldSkipAddNode"
                  index: 2003
                - name: "shouldSkipPreExpandChecks"
                  index: 2004

    NodeParam:
      description: DocRef(NodeParamDesc)
      type: "object"
      properties:
        blockList:
          description: DocRef(BlockListDesc)
          type: "array"
          minItems: 0
          maxItems: 1024
          items:
            $ref: ModelRef({./BlockItem})
        nodeList:
          description: DocRef(NodeListDesc)
          type: "array"
          minItems: 0
          maxItems: 1024
          items:
            $ref: ModelRef({./NodeItem})
        computeNodeList:
          description: DocRef(ComputeNodeListDesc)
          type: "array"
          minItems: 0
          maxItems: 1024
          items:
            $ref: ModelRef({./ComputeNodeItem})
        hypervisorIsos:
          description: DocRef(HypervisorIsosDesc)
          type: "array"
          minItems: 0
          maxItems: 1024
          items:
            $ref: ModelRef({./HypervisorIsoMap})
        hypervSku:
          description: DocRef(HypervSkuDesc)
          type: "string"
        bundleInfo:
          description: DocRef(BundleInfoDesc)
          $ref: ModelRef({./BundleInfo})
        shouldSkipHostNetworking:
          description: DocRef(SkipHostNetworkingDesc)
          type: "boolean"
      x-codegen-hint:
        $any:
          - type: entity-identifier
            properties:
              identifiers:
                - name: "blockList"
                  index: 2001
                - name: "nodeList"
                  index: 2002
                - name: "computeNodeList"
                  index: 2003
                - name: "hypervisorIsos"
                  index: 2004
                - name: "hypervSku"
                  index: 2005
                - name: "bundleInfo"
                  index: 2006
                - name: "shouldSkipHostNetworking"
                  index: 2007

    BundleInfo:
      description: DocRef(BundleInfoDesc)
      type: "object"
      properties:
        name:
          description: DocRef(BundleNameDesc)
          type: "string"
          x-constraints:
            maxLength: ConstantRef(maxBundleInfoNameLength)
      x-codegen-hint:
        $any:
          - type: entity-identifier
            properties:
              identifiers:
                - name: "name"
                  index: 2001

    BlockItem:
      description: DocRef(BlockItemDesc)
      type: "object"
      properties:
        blockId:
          description: DocRef(RackableUnitSerialDesc)
          type: "string"
        rackName:
          description: DocRef(RackNameDesc)
          type: "string"
          x-constraints:
            maxLength: ConstantRef(maxBlockItemNameLength)
      x-codegen-hint:
        $any:
          - type: entity-identifier
            properties:
              identifiers:
                - name: "blockId"
                  index: 2001
                - name: "rackName"
                  index: 2002

    NodeItem:
      description: DocRef(NodeItemDesc)
      type: "object"
      properties:
        nodeUuid:
          description: DocRef(NodeUuid)
          type: "string"
          x-constraints:
            pattern: "ConstantRef({ext:common:/namespaces/common}, uuidPattern)"
        blockId:
          description: DocRef(RackableUnitSerialDesc)
          type: "string"
        nodePosition:
          description: DocRef(NodePositionDesc)
          type: "string"
        hypervisorType:
          description: DocRef(HypervisorTypes)
          $ref: ModelRef({./HypervisorType})
        isRoboMixedHypervisor:
          description: DocRef(RoboMixedHypervisorDesc)
          type: "boolean"
        hypervisorHostname:
          description: DocRef(HostNameDesc)
          type: "string"
          x-constraints:
            pattern: ConstantRef(hostNamePattern)
            maxLength: ConstantRef(maxHostNameLength)
        hypervisorVersion:
          description: DocRef(HypervisorVersionDesc)
          type: "string"
        nosVersion:
          description: DocRef(NosVersionDesc)
          type: "string"
        isLightCompute:
          description: DocRef(isLightComputeDesc)
          type: "boolean"
        ipmiIp:
          description: DocRef(IpmiIpDesc)
          $ref: ModelRef({ext:common:/namespaces/common/versioned/v1/modules/config/beta/models/IPAddress})
        digitalCertificateMapList:
          description: DocRef(DigitalCertificateMapListDesc)
          type: "array"
          minItems: 0
          maxItems: 1024
          items:
            $ref: ModelRef({./DigitalCertificateMapReference})
        cvmIp:
          description: DocRef(ControllerVmIpDesc)
          $ref: ModelRef({ext:common:/namespaces/common/versioned/v1/modules/config/beta/models/IPAddress})
        hypervisorIp:
          description: DocRef(HypervisorIpDesc)
          $ref: ModelRef({ext:common:/namespaces/common/versioned/v1/modules/config/beta/models/IPAddress})
        model:
          description: DocRef(ModelDesc)
          type: "string"
        currentNetworkInterface:
          description: DocRef(CurrentNetworkInterfaceDesc)
          type: "string"
        networks:
          description: DocRef(UplinkNetworkDesc)
          type: "array"
          minItems: 0
          maxItems: 1024
          items:
            $ref: ModelRef({./UplinkNetworkItem})
      x-codegen-hint:
        $any:
          - type: entity-identifier
            properties:
              identifiers:
                - name: "nodeUuid"
                  index: 2001
                - name: "blockId"
                  index: 2002
                - name: "nodePosition"
                  index: 2003
                - name: "hypervisorType"
                  index: 2004
                - name: "isRoboMixedHypervisor"
                  index: 2005
                - name: "hypervisorHostname"
                  index: 2006
                - name: "hypervisorVersion"
                  index: 2007
                - name: "nosVersion"
                  index: 2008
                - name: "isLightCompute"
                  index: 2009
                - name: "ipmiIp"
                  index: 2010
                - name: "digitalCertificateMapList"
                  index: 2011
                - name: "cvmIp"
                  index: 2012
                - name: "hypervisorIp"
                  index: 2013
                - name: "model"
                  index: 2014
                - name: "currentNetworkInterface"
                  index: 2015
                - name: "networks"
                  index: 2016

    NodeInfo:
      description: DocRef(NodeItemDesc)
      type: "object"
      properties:
        nodeUuid:
          description: DocRef(NodeUuid)
          type: "string"
          x-constraints:
            pattern: "ConstantRef({ext:common:/namespaces/common}, uuidPattern)"
        blockId:
          description: DocRef(RackableUnitSerialDesc)
          type: "string"
        nodePosition:
          description: DocRef(NodePositionDesc)
          type: "string"
        hypervisorType:
          description: DocRef(HypervisorTypes)
          $ref: ModelRef({./HypervisorType})
        isRoboMixedHypervisor:
          description: DocRef(RoboMixedHypervisorDesc)
          type: "boolean"
        hypervisorHostname:
          description: DocRef(HostNameDesc)
          type: "string"
          x-constraints:
            maxLength: ConstantRef(maxHypervisorHostNameLength)
        hypervisorVersion:
          description: DocRef(HypervisorVersionDesc)
          type: "string"
        nosVersion:
          description: DocRef(NosVersionDesc)
          type: "string"
        isLightCompute:
          description: DocRef(isLightComputeDesc)
          type: "boolean"
        ipmiIp:
          description: DocRef(IpmiIpDesc)
          $ref: ModelRef({ext:common:/namespaces/common/versioned/v1/modules/config/beta/models/IPAddress})
        digitalCertificateMapList:
          description: DocRef(DigitalCertificateMapListDesc)
          type: "array"
          minItems: 0
          maxItems: 1024
          items:
            $ref: ModelRef({./DigitalCertificateMapReference})
        cvmIp:
          description: DocRef(ControllerVmIpDesc)
          $ref: ModelRef({ext:common:/namespaces/common/versioned/v1/modules/config/beta/models/IPAddress})
        hypervisorIp:
          description: DocRef(HypervisorIpDesc)
          $ref: ModelRef({ext:common:/namespaces/common/versioned/v1/modules/config/beta/models/IPAddress})
        model:
          description: DocRef(ModelDesc)
          type: "string"
        currentNetworkInterface:
          description: DocRef(CurrentNetworkInterfaceDesc)
          type: "string"
      x-codegen-hint:
        $any:
          - type: entity-identifier
            properties:
              identifiers:
                - name: "nodeUuid"
                  index: 2001
                - name: "blockId"
                  index: 2002
                - name: "nodePosition"
                  index: 2003
                - name: "hypervisorType"
                  index: 2004
                - name: "isRoboMixedHypervisor"
                  index: 2005
                - name: "hypervisorHostname"
                  index: 2006
                - name: "hypervisorVersion"
                  index: 2007
                - name: "nosVersion"
                  index: 2008
                - name: "isLightCompute"
                  index: 2009
                - name: "ipmiIp"
                  index: 2010
                - name: "digitalCertificateMapList"
                  index: 2011
                - name: "cvmIp"
                  index: 2012
                - name: "hypervisorIp"
                  index: 2013
                - name: "model"
                  index: 2014
                - name: "currentNetworkInterface"
                  index: 2015

    ComputeNodeItem:
      description: DocRef(ComputeNodeItemDesc)
      type: "object"
      properties:
        nodeUuid:
          description: DocRef(NodeUuid)
          type: "string"
          x-constraints:
            pattern: "ConstantRef({ext:common:/namespaces/common}, uuidPattern)"
        blockId:
          description: DocRef(BlockIdDesc)
          type: "string"
        nodePosition:
          description: DocRef(NodePositionDesc)
          type: "string"
        hypervisorIp:
          description: DocRef(HypervisorIpDesc)
          $ref: ModelRef({ext:common:/namespaces/common/versioned/v1/modules/config/beta/models/IPAddress})
        ipmiIp:
          description: DocRef(IpmiIpDesc)
          $ref: ModelRef({ext:common:/namespaces/common/versioned/v1/modules/config/beta/models/IPAddress})
        digitalCertificateMapList:
          description: DocRef(DigitalCertificateMapListDesc)
          type: "array"
          minItems: 0
          maxItems: 1024
          items:
            $ref: ModelRef({./DigitalCertificateMapReference})
        hypervisorHostname:
          description: DocRef(HostNameDesc)
          type: "string"
          x-constraints:
            maxLength: ConstantRef(maxHypervisorHostNameLength)
        model:
          description: DocRef(RackableUnitModelDesc)
          type: "string"
      x-codegen-hint:
        $any:
          - type: entity-identifier
            properties:
              identifiers:
                - name: "nodeUuid"
                  index: 2001
                - name: "blockId"
                  index: 2002
                - name: "nodePosition"
                  index: 2003
                - name: "hypervisorIp"
                  index: 2004
                - name: "ipmiIp"
                  index: 2005
                - name: "digitalCertificateMapList"
                  index: 2006
                - name: "hypervisorHostname"
                  index: 2007
                - name: "model"
                  index: 2008

    HypervisorIsoMap:
      description: DocRef(HypervisorIsoMapDesc)
      type: "object"
      properties:
        type:
          description: DocRef(HypervisorTypes)
          $ref: ModelRef({./HypervisorType})
        md5Sum:
          description: DocRef(Md5sumDesc)
          type: "string"
          x-constraints:
            pattern: ConstantRef(md5sumPattern)
      x-codegen-hint:
        $any:
          - type: entity-identifier
            properties:
              identifiers:
                - name: "type"
                  index: 2001
                - name: "md5Sum"
                  index: 2002

    ConfigParams:
      description: DocRef(ConfigParamDesc)
      type: "object"
      properties:
        shouldSkipDiscovery:
          description: DocRef(SkipDiscoveryDesc)
          type: "boolean"
        shouldSkipImaging:
          description: DocRef(SkipImagingDesc)
          type: "boolean"
        shouldValidateRackAwareness:
          description: DocRef(ValidateRackAwarenessDesc)
          type: "boolean"
        isNosCompatible:
          description: DocRef(IsNosCompatibleDesc)
          type: "boolean"
        isComputeOnly:
          description: DocRef(IsComputeOnlyDesc)
          type: "boolean"
        isNeverScheduleable:
          description: DocRef(NeverScheduleableDesc)
          type: "boolean"
        targetHypervisor:
          description: DocRef(TargetHypervisorDesc)
          type: "string"
        hyperv:
          description: DocRef(HypervCredentialDesc)
          $ref: ModelRef({./HypervCredentials})
      x-codegen-hint:
        $any:
          - type: entity-identifier
            properties:
              identifiers:
                - name: "shouldSkipDiscovery"
                  index: 2001
                - name: "shouldSkipImaging"
                  index: 2002
                - name: "shouldValidateRackAwareness"
                  index: 2003
                - name: "isNosCompatible"
                  index: 2004
                - name: "isComputeOnly"
                  index: 2005
                - name: "isNeverScheduleable"
                  index: 2006
                - name: "targetHypervisor"
                  index: 2007
                - name: "hyperv"
                  index: 2008

    HypervCredentials:
      description: DocRef(HypervCredentialDesc)
      type: "object"
      properties:
        domainDetails:
          description: DocRef(DomainDetailsDesc)
          $ref: ModelRef({./UserInfo})
        failoverClusterDetails:
          description: DocRef(FailoverClusterDetailsDesc)
          $ref: ModelRef({./UserInfo})
      x-codegen-hint:
        $any:
          - type: entity-identifier
            properties:
              identifiers:
                - name: "domainDetails"
                  index: 2001
                - name: "failoverClusterDetails"
                  index: 2002

    UserInfo:
      description: DocRef(UserNamePasswordDesc)
      type: "object"
      properties:
        userName:
          description: DocRef(UserNameDesc)
          type: "string"
          x-constraints:
            maxLength: ConstantRef(maxUsernameLength)
        password:
          description: DocRef(PasswordDesc)
          type: "string"
        clusterName:
          description: DocRef(ClusterName)
          type: "string"
          x-constraints:
            maxLength: ConstantRef(maxClusterNameLength)
      x-codegen-hint:
        $any:
          - type: entity-identifier
            properties:
              identifiers:
                - name: "userName"
                  index: 2001
                - name: "password"
                  index: 2002
                - name: "clusterName"
                  index: 2003

    HypervisorUploadParam:
      description: DocRef(HypervisorUploadRequiredBodyDesc)
      type: "object"
      required:
        - nodeList
      properties:
        nodeList:
          description: DocRef(HypervisorUploadNodeListDesc)
          type: "array"
          minItems: 0
          maxItems: 1024
          items:
            $ref: ModelRef({./HypervisorUploadNodeListItem})
      x-codegen-hint:
        $any:
          - type: entity-identifier
            properties:
              identifiers:
                - name: "nodeList"
                  index: 2001

    HypervisorUploadNodeListItem:
      description: DocRef(HypervisorUploadNodeListItemDesc)
      type: "object"
      properties:
        nodeUuid:
          description: DocRef(NodeUuid)
          type: "string"
          x-constraints:
            pattern: "ConstantRef({ext:common:/namespaces/common}, uuidPattern)"
        hypervisorVersion:
          description: DocRef(HypervisorVersionDesc)
          type: "string"
        nosVersion:
          description: DocRef(NosVersionDesc)
          type: "string"
        model:
          description: DocRef(RackableUnitModelDesc)
          type: "string"
        blockId:
          description: DocRef(BlockIdDesc)
          type: "string"
        isLightCompute:
          description: DocRef(isLightComputeDesc)
          type: "boolean"
        hypervisorType:
          description: DocRef(HypervisorTypes)
          $ref: ModelRef({./HypervisorType})
        isRoboMixedHypervisor:
          description: DocRef(RoboMixedHypervisorDesc)
          type: "boolean"
        isMinimumComputeNode:
          description: DocRef(MinimumComputeNodeDesc)
          type: "boolean"
      x-codegen-hint:
        $any:
          - type: entity-identifier
            properties:
              identifiers:
                - name: "nodeUuid"
                  index: 2001
                - name: "hypervisorVersion"
                  index: 2002
                - name: "nosVersion"
                  index: 2003
                - name: "model"
                  index: 2004
                - name: "blockId"
                  index: 2005
                - name: "isLightCompute"
                  index: 2006
                - name: "hypervisorType"
                  index: 2007
                - name: "isRoboMixedHypervisor"
                  index: 2008
                - name: "isMinimumComputeNode"
                  index: 2009

    ValidateNodeParam:
      description: DocRef(ValidateNodeParamDesc)
      type: object
      required:
        - spec
      properties:
        spec:
          description: DocRef(ValidateNodeParamSpecDesc)
          oneOf:
            - $ref: ModelRef({./BundleParam})
            - type: "array"
              minItems: 0
              maxItems: 1024
              items:
                $ref: ModelRef({./UplinkNode})
          x-codegen-hint:
            $any:
              - type: entity-identifier
                properties:
                  identifiers:
                    - type: "ModelRef({./BundleParam})"
                      index: 2001
                    - type: "ModelRef({./UplinkNode})"
                      container: "array"
                      index: 2002

    BundleParam:
      description: DocRef(ValidateBundleParamDesc)
      type: "object"
      required:
        - nodeList
        - bundleInfo
      properties:
        bundleInfo:
          description: DocRef(BundleInfoDesc)
          $ref: ModelRef({./BundleInfo})
        nodeList:
          description: DocRef(ValidateBundleNodeListDesc)
          type: "array"
          minItems: 0
          maxItems: 1024
          items:
            $ref: ModelRef({./NodeInfo})
      x-codegen-hint:
        $any:
          - type: entity-identifier
            properties:
              identifiers:
                - name: "bundleInfo"
                  index: 2001
                - name: "nodeList"
                  index: 2002

    UplinkNode:
      description: DocRef(ValidateUplinkNodeItemDesc)
      type: "object"
      required:
        - cvmIp
        - networks
      properties:
        cvmIp:
          description: DocRef(ControllerVmIpDesc)
          $ref: ModelRef({ext:common:/namespaces/common/versioned/v1/modules/config/beta/models/IPAddress})
        hypervisorIp:
          description: DocRef(HypervisorIpDesc)
          $ref: ModelRef({ext:common:/namespaces/common/versioned/v1/modules/config/beta/models/IPAddress})
        networks:
          description: DocRef(UplinkNetworkDesc)
          type: "array"
          minItems: 0
          maxItems: 1024
          items:
            $ref: ModelRef({./UplinkNetworkItem})
      x-codegen-hint:
        $any:
          - type: entity-identifier
            properties:
              identifiers:
                - name: "cvmIp"
                  index: 2001
                - name: "hypervisorIp"
                  index: 2002
                - name: "networks"
                  index: 2003

    UplinkNetworkItem:
      description: DocRef(UplinkNetworkDesc)
      type: "object"
      properties:
        name:
          description: DocRef(UplinkNameDesc)
          type: "string"
          x-constraints:
            maxLength: ConstantRef(maxUplinkNetworkItemNameLength)
        networks:
          description: DocRef(NetworkTypeDesc)
          type: "array"
          minItems: 0
          maxItems: 1024
          items:
            type: "string"
        uplinks:
          description: DocRef(UplinkNetworkDesc)
          $ref: ModelRef({./Uplinks})
      x-codegen-hint:
        $any:
          - type: entity-identifier
            properties:
              identifiers:
                - name: "name"
                  index: 2001
                - name: "networks"
                  index: 2002
                - name: "uplinks"
                  index: 2003

    Uplinks:
      description: DocRef(UplinkNetworkDesc)
      type: "object"
      properties:
        active:
          description: DocRef(ActiveUplinkDesc)
          type: "array"
          minItems: 0
          maxItems: 1024
          items:
            $ref: ModelRef({./UplinksField})
        standby:
          description: DocRef(StandByUplinkDesc)
          type: "array"
          minItems: 0
          maxItems: 1024
          items:
            $ref: ModelRef({./UplinksField})
      x-codegen-hint:
        $any:
          - type: entity-identifier
            properties:
              identifiers:
                - name: "active"
                  index: 2001
                - name: "standby"
                  index: 2002

    UplinksField:
      description: DocRef(UplinkFieldDesc)
      type: "object"
      properties:
        mac:
          description: DocRef(MacInfoDesc)
          type: "string"
          x-constraints:
            pattern: "ConstantRef({ext:common:/namespaces/common}, macPattern)"
        name:
          description: DocRef(InterfaceNameDesc)
          type: "string"
          x-constraints:
            maxLength: ConstantRef(maxUplinksFieldNameLength)
        value:
          description: DocRef(InterfaceValueDesc)
          type: "string"
      x-codegen-hint:
        $any:
          - type: entity-identifier
            properties:
              identifiers:
                - name: "mac"
                  index: 2001
                - name: "name"
                  index: 2002
                - name: "value"
                  index: 2003

    NodeRemovalParams:
      description: DocRef(RemoveNodeBodyDesc)
      type: "object"
      required:
        - nodeUuids
      properties:
        shouldSkipPrechecks:
          description: DocRef(SkipPrecheckRemoveNodeDesc)
          type: "boolean"
        shouldSkipRemove:
          description: DocRef(SkipRemoveNodeDesc)
          type: "boolean"
        nodeUuids:
          description: DocRef(NodeUUIDsToRemoveDesc)
          type: "array"
          minItems: 0
          maxItems: 1024
          items:
            type: "string"
            x-constraints:
              pattern: "ConstantRef({ext:common:/namespaces/common}, uuidPattern)"
        extraParams:
          description: DocRef(ExtraParamDesc)
          type: "object"
          $ref: ModelRef({./NodeRemovalExtraParam})
      x-codegen-hint:
        $any:
          - type: entity-identifier
            properties:
              identifiers:
                - name: "shouldSkipPrechecks"
                  index: 2001
                - name: "shouldSkipRemove"
                  index: 2002
                - name: "nodeUuids"
                  index: 2003
                - name: "extraParams"
                  index: 2004

    NodeRemovalExtraParam:
      description: DocRef(ExtraParamDesc)
      type: "object"
      properties:
        shouldSkipUpgradeCheck:
          description: DocRef(SkipUpgradeCheckDesc)
          type: "boolean"
        shouldSkipSpaceCheck:
          description: DocRef(SkipSpaceCheckDesc)
          type: "boolean"
        shouldSkipAddCheck:
          description: DocRef(SkipAddCheckDesc)
          type: "boolean"
      x-codegen-hint:
        $any:
          - type: entity-identifier
            properties:
              identifiers:
                - name: "shouldSkipUpgradeCheck"
                  index: 2001
                - name: "shouldSkipSpaceCheck"
                  index: 2002
                - name: "shouldSkipAddCheck"
                  index: 2003

    SearchParams:
      type: object
      description: DocRef(SearchParamDesc)
      required:
        - searchType
      properties:
        searchType:
          description: DocRef(SearchTypeDesc)
          $ref: "ModelRef({./SearchType})"
      x-codegen-hint:
        $any:
          - type: entity-identifier
            properties:
              identifiers:
                - name: "searchType"
                  index: 2001

    SearchType:
      description: DocRef(SearchTypeDesc)
      allOf:
        - $ref: ModelRef({ext:common:/namespaces/common/versioned/v1/modules/config/beta/models/BaseEnum})
        - type: string
          enum:
            - "UNCONFIGURED_NODES"
            - "NETWORKING_DETAILS"
            - "HYPERVISOR_UPLOAD_INFO"
            - "VALIDATE_BUNDLE_INFO"
            - "NON_COMPATIBLE_CLUSTERS"
          x-codegen-hint:
            $any:
              - type: enum
                properties:
                  descriptions:
                    - name: 'UNCONFIGURED_NODES'
                      description: DocRef(UnconfigNodesTypeDescription)
                    - name: 'NETWORKING_DETAILS'
                      description: DocRef(NetworkingTypeDescription)
                    - name: 'HYPERVISOR_UPLOAD_INFO'
                      description: DocRef(HypUploadInfoTypeDescription)
                    - name: 'VALIDATE_BUNDLE_INFO'
                      description: DocRef(ValidateBundleInfoTypeDescription)
                    - name: 'NON_COMPATIBLE_CLUSTERS'
                      description: DocRef(NonCompatibleClustersDescription)
              - type: entity-identifier
                properties:
                  identifiers:
                    - value: "UNCONFIGURED_NODES"
                      index: 2001
                    - value: "NETWORKING_DETAILS"
                      index: 2002
                    - value: "HYPERVISOR_UPLOAD_INFO"
                      index: 2003
                    - value: "VALIDATE_BUNDLE_INFO"
                      index: 2004
                    - value: "NON_COMPATIBLE_CLUSTERS"
                      index: 2005

    SearchResponse:
      type: object
      description: DocRef(SearchRespDesc)
      properties:
        searchType:
          description: DocRef(StatsQueryAttributeDescription)
          $ref: "ModelRef({./SearchType})"
        response:
          description: DocRef(SearchRespDesc)
          oneOf:
            - $ref: ModelRef({./UnconfigureNodeDetails})
            - $ref: ModelRef({./NodeNetworkingDetails})
            - $ref: ModelRef({./HypervisorUploadInfo})
            - $ref: ModelRef({./ValidateBundleInfo})
            - type: "array"
              minItems: 0
              maxItems: 1024
              items:
                $ref: ModelRef({./NonCompatibleClusterReference})
          x-codegen-hint:
            $any:
              - type: entity-identifier
                properties:
                  identifiers:
                    - type: "ModelRef({./UnconfigureNodeDetails})"
                      index: 2001
                    - type: "ModelRef({./NodeNetworkingDetails})"
                      index: 2002
                    - type: "ModelRef({./HypervisorUploadInfo})"
                      index: 2003
                    - type: "ModelRef({./ValidateBundleInfo})"
                      index: 2004
                    - type: "ModelRef({./NonCompatibleClusterReference})"
                      container: "array"
                      index: 2005
      x-codegen-hint:
        $any:
          - type: entity-identifier
            properties:
              identifiers:
                - name: "searchType"
                  index: 2009

    UnconfigureNodeDetails:
      type: object
      description: DocRef(UnconfigureNodesResponseDesc)
      properties:
        nodeList:
          description: DocRef(UnconfigureNodesResponseDesc)
          type: "array"
          minItems: 0
          maxItems: 1024
          items:
            $ref: ModelRef({./UnconfiguredNodeListItem})
      x-codegen-hint:
        $any:
          - type: entity-identifier
            properties:
              identifiers:
                - name: "nodeList"
                  index: 2001

    UnconfiguredNodeListItem:
      type: object
      description: DocRef(UnconfigureNodeItemDesc)
      properties:
        foundationVersion:
          description: DocRef(FoundationVersionDesc)
          type: "string"
        rackableUnitSerial:
          description: DocRef(RackableUnitSerialDesc)
          type: "string"
        nodeUuid:
          description: DocRef(NodeUuid)
          type: "string"
          x-constraints:
            pattern: "ConstantRef({ext:common:/namespaces/common}, uuidPattern)"
        rackableUnitMaxNodes:
          description: DocRef(RackableUnitMaxNodesDesc)
          type: "integer"
          format: int64
        currentNetworkInterface:
          description: DocRef(CurrentNetworkInterfaceDesc)
          type: "string"
        nodePosition:
          description: DocRef(NodePositionDesc)
          type: "string"
        cvmIp:
          description: DocRef(ControllerVmIpDesc)
          $ref: ModelRef({ext:common:/namespaces/common/versioned/v1/modules/config/beta/models/IPAddress})
        currentCvmVlanTag:
          description: DocRef(CurrentCvmVlanTagDesc)
          type: "string"
        isSecureBooted:
          description: DocRef(IsSecureBootedDesc)
          type: "boolean"
        nosVersion:
          description: DocRef(NosVersionDesc)
          type: "string"
        cpuType:
          description: DocRef(CpuTypeDesc)
          type: "array"
          minItems: 0
          maxItems: 1024
          items:
            type: "string"
        hypervisorType:
          description: DocRef(HypervisorTypes)
          $ref: ModelRef({./HypervisorType})
        hypervisorVersion:
          description: DocRef(HypervisorVersionDesc)
          type: "string"
        interfaceIpv6:
          description: DocRef(InterfaceIpv6Desc)
          type: "string"
        clusterId:
          description: DocRef(ClusterIdDesc)
          type: "string"
        attributes:
          description: DocRef(AttributesMapDesc)
          $ref: ModelRef({./UnconfiguredNodeAttributeMap})
        rackableUnitModel:
          description: DocRef(RackableUnitModelDesc)
          type: "string"
        arch:
          description: DocRef(ClusterArchDesc)
          type: "string"
        hypervisorIp:
          description: DocRef(HypervisorIpDesc)
          $ref: ModelRef({ext:common:/namespaces/common/versioned/v1/modules/config/beta/models/IPAddress})
        ipmiIp:
          description: DocRef(IpmiIpDesc)
          $ref: ModelRef({ext:common:/namespaces/common/versioned/v1/modules/config/beta/models/IPAddress})
        nodeSerialNumber:
          x-internal: true
          description: DocRef(NodeSerialNumberDesc)
          type: "string"
        hostName:
          x-internal: true
          description: DocRef(HostNameDesc)
          type: "string"
          x-constraints:
            maxLength: ConstantRef(maxHostNameLength)
        hostType:
          x-internal: true
          description: DocRef(HostTypeDesc)
          $ref: ModelRef({./HostTypeEnum})
        isOneNodeClusterSupported:
          x-internal: true
          description: DocRef(OneNodeClusterSupportDesc)
          type: "boolean"
        isTwoNodeClusterSupported:
          x-internal: true
          description: DocRef(TwoNodeClusterSupportDesc)
          type: "boolean"
      x-codegen-hint:
        $any:
          - type: entity-identifier
            properties:
              identifiers:
                - name: "foundationVersion"
                  index: 2001
                - name: "rackableUnitSerial"
                  index: 2002
                - name: "nodeUuid"
                  index: 2003
                - name: "rackableUnitMaxNodes"
                  index: 2004
                - name: "currentNetworkInterface"
                  index: 2005
                - name: "nodePosition"
                  index: 2006
                - name: "cvmIp"
                  index: 2007
                - name: "currentCvmVlanTag"
                  index: 2008
                - name: "isSecureBooted"
                  index: 2009
                - name: "nosVersion"
                  index: 2010
                - name: "cpuType"
                  index: 2011
                - name: "hypervisorType"
                  index: 2012
                - name: "hypervisorVersion"
                  index: 2013
                - name: "interfaceIpv6"
                  index: 2014
                - name: "clusterId"
                  index: 2015
                - name: "attributes"
                  index: 2016
                - name: "rackableUnitModel"
                  index: 2017
                - name: "arch"
                  index: 2018
                - name: "hypervisorIp"
                  index: 2019
                - name: "ipmiIp"
                  index: 2020
                - name: "nodeSerialNumber"
                  index: 2021
                - name: "hostName"
                  index: 2022
                - name: "hostType"
                  index: 2023
                - name: "isOneNodeClusterSupported"
                  index: 2024
                - name: "isTwoNodeClusterSupported"
                  index: 2025

    UnconfiguredNodeAttributeMap:
      type: object
      description: DocRef(UnconfiguredNodeAttrMapDesc)
      properties:
        lcmFamily:
          description: DocRef(LcmFamilyDesc)
          type: "string"
        isModelSupported:
          description: DocRef(IsModelSupportedDesc)
          type: "boolean"
        defaultWorkload:
          description: DocRef(DefaultWorkloadDesc)
          type: "string"
        shouldWorkWith1GNic:
          description: DocRef(MayBe1GBOnlyDesc)
          type: "boolean"
        isRoboMixedHypervisor:
          description: DocRef(RoboMixedHypervisorDesc)
          type: "boolean"
      x-codegen-hint:
        $any:
          - type: entity-identifier
            properties:
              identifiers:
                - name: "lcmFamily"
                  index: 2001
                - name: "isModelSupported"
                  index: 2002
                - name: "defaultWorkload"
                  index: 2003
                - name: "shouldWorkWith1GNic"
                  index: 2004
                - name: "isRoboMixedHypervisor"
                  index: 2005

    NodeNetworkingDetails:
      type: object
      description: DocRef(NetworkingDetailResponseDesc)
      properties:
        networkInfo:
          description: DocRef(NetworkInfoDesc)
          $ref: ModelRef({./NetworkInfo})
        uplinks:
          description: DocRef(UplinksDesc)
          type: "array"
          minItems: 0
          maxItems: 1024
          items:
            $ref: ModelRef({./UplinkInfo})
        warnings:
          description: DocRef(WarningsDesc)
          type: "array"
          minItems: 0
          maxItems: 1024
          items:
            type: "string"
      x-codegen-hint:
        $any:
          - type: entity-identifier
            properties:
              identifiers:
                - name: "networkInfo"
                  index: 2001
                - name: "uplinks"
                  index: 2002
                - name: "warnings"
                  index: 2003

    NetworkInfo:
      description: DocRef(NetworkInfoDesc)
      type: object
      properties:
        hci:
          description: DocRef(HCIDesc)
          type: "array"
          minItems: 0
          maxItems: 1024
          items:
            $ref: ModelRef({./NameNetworkRef})
        so:
          description: DocRef(SODesc)
          type: "array"
          minItems: 0
          maxItems: 1024
          items:
            $ref: ModelRef({./NameNetworkRef})
      x-codegen-hint:
        $any:
          - type: entity-identifier
            properties:
              identifiers:
                - name: "hci"
                  index: 2001
                - name: "so"
                  index: 2002

    NameNetworkRef:
      type: object
      description: DocRef(NameNetworkRefDesc)
      properties:
        hypervisorType:
          description: DocRef(HypervisorTypes)
          $ref: ModelRef({./HypervisorType})
        name:
          description: DocRef(InterfaceNameDesc)
          type: "string"
          x-constraints:
            maxLength: ConstantRef(maxNameNetworkRefNameLength)
        networks:
          description: DocRef(NetworkDesc)
          type: "array"
          minItems: 0
          maxItems: 1024
          items:
            type: "string"
      x-codegen-hint:
        $any:
          - type: entity-identifier
            properties:
              identifiers:
                - name: "hypervisorType"
                  index: 2001
                - name: "name"
                  index: 2002
                - name: "networks"
                  index: 2003

    UplinkInfo:
      description: DocRef(UplinkDesc)
      type: object
      properties:
        cvmIp:
          description: DocRef(ControllerVmIpDesc)
          $ref: ModelRef({ext:common:/namespaces/common/versioned/v1/modules/config/beta/models/IPAddress})
        uplinkList:
          description: DocRef(UplinkValueDesc)
          type: "array"
          minItems: 0
          maxItems: 1024
          items:
            $ref: ModelRef({./NameMacRef})
      x-codegen-hint:
        $any:
          - type: entity-identifier
            properties:
              identifiers:
                - name: "cvmIp"
                  index: 2001
                - name: "uplinkList"
                  index: 2002

    NameMacRef:
      description: DocRef(NameMacRefDesc)
      type: object
      properties:
        name:
          description: DocRef(InterfaceNameDesc)
          type: "string"
          x-constraints:
            maxLength: ConstantRef(maxMacRefNameLength)
        mac:
          description: DocRef(MacInfoDesc)
          type: "string"
          x-constraints:
            pattern: "ConstantRef({ext:common:/namespaces/common}, macPattern)"
      x-codegen-hint:
        $any:
          - type: entity-identifier
            properties:
              identifiers:
                - name: "name"
                  index: 2001
                - name: "mac"
                  index: 2002

    HypervisorUploadInfo:
      type: object
      description: DocRef(HypervisorUploadInfoDesc)
      properties:
        errorMessage:
          description: DocRef(ErrorMessageDesc)
          type: "string"
        uploadInfoNodeList:
          description: DocRef(UploadInfoNodeListDesc)
          type: "array"
          minItems: 0
          maxItems: 10
          items:
            $ref: ModelRef({./UploadInfoNodeItem})
      x-codegen-hint:
        $any:
          - type: entity-identifier
            properties:
              identifiers:
                - name: "errorMessage"
                  index: 2001
                - name: "uploadInfoNodeList"
                  index: 2002

    UploadInfoNodeItem:
      type: object
      description: DocRef(UploadInfoNodeItemDesc)
      properties:
        isHypervisorUploadRequired:
          description: DocRef(HypervisorUploadRequiredDesc)
          type: boolean
        isImagingMandatory:
          description: DocRef(IsImagingMandatoryDesc)
          type: boolean
        nodeUuid:
          description: DocRef(NodeUuid)
          type: "string"
          x-constraints:
            pattern: "ConstantRef({ext:common:/namespaces/common}, uuidPattern)"
        availableHypervisorIsoError:
          description: DocRef(AvailableHypervisorIsoError)
          type: "string"
        requiredHypervisorType:
          description: DocRef(RequiredHypervisorTypeDesc)
          $ref: ModelRef({./HypervisorType})
        isNodeCompatible:
          description: DocRef(IsNodeCompatibleDesc)
          type: boolean
        md5Sum:
          description: DocRef(Md5sumDesc)
          type: "string"
          x-constraints:
            pattern: ConstantRef(md5sumPattern)
        bundleName:
          description: DocRef(BundleNameDesc)
          type: "string"
          x-constraints:
            maxLength: ConstantRef(maxBundleNameLength)
      x-codegen-hint:
        $any:
          - type: entity-identifier
            properties:
              identifiers:
                - name: "isHypervisorUploadRequired"
                  index: 2001
                - name: "isImagingMandatory"
                  index: 2002
                - name: "nodeUuid"
                  index: 2003
                - name: "availableHypervisorIsoError"
                  index: 2004
                - name: "requiredHypervisorType"
                  index: 2005
                - name: "isNodeCompatible"
                  index: 2006
                - name: "md5Sum"
                  index: 2007
                - name: "bundleName"
                  index: 2008

    ValidateBundleInfo:
      type: object
      description: DocRef(ValidateBundleInfoDesc)
      properties:
        md5Sum:
          description: DocRef(Md5sumDesc)
          type: "string"
          x-constraints:
            pattern: ConstantRef(md5sumPattern)
      x-codegen-hint:
        $any:
          - type: entity-identifier
            properties:
              identifiers:
                - name: "md5Sum"
                  index: 2001

    BackplaneNetworkParams:
      type: object
      description: DocRef(BackplaneNetworkParamsDesc)
      properties:
        isSegmentationEnabled:
          description: DocRef(EnableBackplaneSegmentationDesc)
          type: "boolean"
        vlanTag:
          description: DocRef(BackplaneVlanTagDesc)
          type: "integer"
          format: int64
        subnet:
          description: DocRef(BackplaneSubnetDesc)
          $ref: ModelRef({ext:common:/namespaces/common/versioned/v1/modules/config/beta/models/IPv4Address})
        netmask:
          description: DocRef(BackplaneNetmaskDesc)
          $ref: ModelRef({ext:common:/namespaces/common/versioned/v1/modules/config/beta/models/IPv4Address})
      x-codegen-hint:
        $any:
          - type: entity-identifier
            properties:
              identifiers:
                - name: "isSegmentationEnabled"
                  index: 2001
                - name: "vlanTag"
                  index: 2002
                - name: "subnet"
                  index: 2003
                - name: "netmask"
                  index: 2004

    NonCompatibleClusterReference:
      type: object
      description: DocRef(NonCompatibleClusterReferenceDesc)
      properties:
        clusterExtId:
          description: DocRef(ClusterProfileExtIdDescription)
          readOnly: true
          type: "string"
          x-constraints:
            pattern: "ConstantRef({ext:common:/namespaces/common}, uuidPattern)"
        configDrifts:
          description: DocRef(ClusterProfileSettingDescription)
          readOnly: true
          type: array
          x-constraints:
            minItems: ConstantRef(minConfigCount)
            maxItems: ConstantRef(maxConfigCount)
          items:
            $ref: ModelRef({./ConfigType})
      x-codegen-hint:
        $any:
          - type: entity-identifier
            properties:
              identifiers:
                - name: "clusterExtId"
                  index: 2001
                - name: "configDrifts"
                  index: 2002

    ClusterFaultToleranceRef:
      description: DocRef(ClusterFaultToleranceDesc)
      allOf:
        - $ref: "ModelRef({ext:common:/namespaces/common/versioned/v1/modules/config/beta/models/BaseEnum})"
        - type: "string"
          enum:
            - CFT_0N_AND_0D
            - CFT_1N_OR_1D
            - CFT_2N_OR_2D
            - CFT_1N_AND_1D
          x-property-mapping:
            - name: CFT_0N_AND_0D
              value: 1
            - name: CFT_1N_OR_1D
              value: 2
            - name: CFT_2N_OR_2D
              value: 3
            - name: CFT_1N_AND_1D
              value: 4
          x-codegen-hint:
            $any:
              - type: enum
                properties:
                  descriptions:
                    - name: 'CFT_0N_AND_0D'
                      description: DocRef(CftOneDescription)
                    - name: 'CFT_1N_OR_1D'
                      description: DocRef(CftTwoDescription)
                    - name: 'CFT_2N_OR_2D'
                      description: DocRef(CftThreeDescription)
                    - name: 'CFT_1N_AND_1D'
                      description: DocRef(CftFiveDescription)
              - type: entity-identifier
                properties:
                  identifiers:
                    - value: "CFT_0N_AND_0D"
                      index: 2001
                    - value: "CFT_1N_OR_1D"
                      index: 2002
                    - value: "CFT_2N_OR_2D"
                      index: 2003
                    - value: "CFT_1N_AND_1D"
                      index: 2004

    ComputeNonMigratableVmsSpec:
      description: DocRef(ComputeNonMigratableVmsBodyDesc)
      type: "object"
      properties:
        hosts:
          description: DocRef(HostsDesc)
          type: "array"
          minItems: 1
          maxItems: 1024
          items:
            type: "string"
            x-constraints:
              pattern: "ConstantRef({ext:common:/namespaces/common}, uuidPattern)"
        vcenterInfo:
          description: DocRef(VcenterInfoDesc)
          $ref: ModelRef({./VcenterInfo})
      x-codegen-hint:
        $any:
          - type: entity-identifier
            properties:
              identifiers:
                - name: "hosts"
                  index: 2001
                - name: "vcenterInfo"
                  index: 2002

    NonMigratableVmsResult:
      type: object
      description: DocRef(NonMigratableVmsResultDesc)
      properties:
        vms:
          description: DocRef(NonMigratableVmsListDesc)
          type: "array"
          minItems: 0
          maxItems: 1024
          items:
            $ref: ModelRef({./NonMigratableVmInfo})
      x-codegen-hint:
        $any:
          - type: entity-identifier
            properties:
              identifiers:
                - name: "vms"
                  index: 2001

    NonMigratableVmInfo:
      type: "object"
      description: DocRef(NonMigratableVmInfoDesc)
      properties:
        vmName:
          description: DocRef(VmNameDesc)
          type: "string"
          x-constraints:
            maxLength: ConstantRef(maxVmNameLength)
        vmUuid:
          description: DocRef(VmUuidDesc)
          type: "string"
          x-constraints:
            pattern: "ConstantRef({ext:common:/namespaces/common}, uuidPattern)"
        nonMigratableVmReason:
          description: DocRef(NonMigratableVmReasonDesc)
          type: "string"
      x-codegen-hint:
        $any:
          - type: entity-identifier
            properties:
              identifiers:
                - name: "vmName"
                  index: 2001
                - name: "vmUuid"
                  index: 2002
                - name: "nonMigratableVmReason"
                  index: 2003

    RedundancyStatusDetails:
      type: object
      description: DocRef(RedundancyStatusDetailsDesc)
      properties:
        isCassandraPreparationDone:
          description: DocRef(IsCassandraPreparationDoneDesc)
          readOnly: true
          type: "boolean"
        isZookeeperPreparationDone:
          description: DocRef(IsZookeeperPreparationDoneDesc)
          readOnly: true
          type: "boolean"
      x-codegen-hint:
        $any:
          - type: entity-identifier
            properties:
              identifiers:
                - name: "isCassandraPreparationDone"
                  index: 2001
                - name: "isZookeeperPreparationDone"
                  index: 2002

    VcenterInfo:
      description: DocRef(VcenterInfoDesc)
      type: "object"
      required:
        - address
        - credentials
      properties:
        address:
          description: DocRef(VcenterAddressDesc)
          $ref: ModelRef({ext:common:/namespaces/common/versioned/v1/modules/config/beta/models/IPAddressOrFQDN})
        credentials:
          description: DocRef(VcenterCredentialsDesc)
          type: "object"
          $ref: ModelRef({ext:vcenter:/namespaces/clustermgmt/versioned/v4/modules/config/beta/models/VcenterCredentials})
      x-codegen-hint:
        $any:
          - type: entity-identifier
            properties:
              identifiers:
                - name: "address"
                  index: 2001
                - name: "credentials"
                  index: 2002