openapi: 3.0.1
info:
  title: PC Protection PC Client SDK
  version: 0.0.1-SNAPSHOT
  x-repo-name: pc_protection_pc_client
security:
- basicAuthScheme: []
- apiKeyAuthScheme: []
tags:
- name: DomainManagerBackups
  description: Provides an ability to backup and restore the Domain Manager. Backup
    can be configured to  cluster or s3 compatible objectstore.
  x-displayName: Domain Manager Backup And Restore
paths:
  /prism/v4.0.b1/management/domain-managers/{domainManagerExtId}/backup-targets:
    get:
      tags:
      - DomainManagerBackups
      summary: |
        List Backup Targets
      description: |
        Lists backup targets (cluster or object store) configured for a given domain manager.
      operationId: listBackupTargets
      parameters:
      - name: domainManagerExtId
        in: path
        description: |
          The unique identifier for the domain manager that is to be restored.
        required: true
        style: simple
        explode: false
        schema:
          pattern: "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$"
          type: string
      responses:
        "200":
          description: |
            List of backup clusters/object store backing up the domain manager configurations.
          content:
            application/json:
              schema:
                type: object
                properties:
                  metadata:
                    $ref: '#/components/schemas/common.v1.r0.b1.response.ApiResponseMetadata'
                  data:
                    maxItems: 4
                    type: array
                    items:
                      $ref: '#/components/schemas/prism.v4.r0.b1.management.BackupTarget'
                additionalProperties: false
                description: "REST response for all response codes in API path /prism/v4.0.b1/management/domain-managers/{domainManagerExtId}/backup-targets\
                  \ Get operation"
        "4XX":
          description: Client error response
          content:
            application/json:
              schema:
                type: object
                properties:
                  metadata:
                    $ref: '#/components/schemas/common.v1.r0.b1.response.ApiResponseMetadata'
                  data:
                    $ref: '#/components/schemas/prism.v4.r0.b1.error.ErrorResponse'
                additionalProperties: false
                description: "REST response for all response codes in API path /prism/v4.0.b1/management/domain-managers/{domainManagerExtId}/backup-targets\
                  \ Get operation"
        "5XX":
          description: Server error response
          content:
            application/json:
              schema:
                type: object
                properties:
                  metadata:
                    $ref: '#/components/schemas/common.v1.r0.b1.response.ApiResponseMetadata'
                  data:
                    $ref: '#/components/schemas/prism.v4.r0.b1.error.ErrorResponse'
                additionalProperties: false
                description: "REST response for all response codes in API path /prism/v4.0.b1/management/domain-managers/{domainManagerExtId}/backup-targets\
                  \ Get operation"
      x-permissions:
        deploymentList:
        - ON_PREM
        - CLOUD
        operationName: View Domain Manager Backup Target
        roleList:
        - Super Admin
        - Prism Admin
        - Prism Viewer
        - Domain Manager Admin
        - Domain Manager Viewer
      x-rate-limit:
      - type: xsmall
        count: 5
        timeUnit: seconds
      - type: small
        count: 5
        timeUnit: seconds
      - type: large
        count: 5
        timeUnit: seconds
      - type: xlarge
        count: 5
        timeUnit: seconds
      x-supported-versions:
      - product: PC
        version: 2024.3
      - product: PE
        version: 6.9
      x-code-samples:
      - lang: Java
        source: "\npackage sample;\n\nimport com.nutanix.pri.java.client.ApiClient;\n\
          import com.nutanix.pri.java.client.api.DomainManagerBackupsApi;\nimport\
          \ com.nutanix.dp1.pri.prism.v4.management.ListBackupTargetsApiResponse;\n\
          import prism.v4.management.ListBackupTargetsApiResponse;\n\npublic class\
          \ JavaSdkSample {\n    public static void main(String[] args) {\n      \
          \  // Configure the client\n        ApiClient apiClient = new ApiClient();\n\
          \        // IPv4/IPv6 address or FQDN of the cluster\n        apiClient.setHost(\"\
          localhost\");\n        // Port to which to connect to\n        apiClient.setPort(9440);\n\
          \        // Interval in ms to use during retry attempts\n        apiClient.setRetryInterval(5000);\n\
          \        // Max retry attempts while reconnecting on a loss of connection\n\
          \        apiClient.setMaxRetryAttempts(5);\n        // UserName to connect\
          \ to the cluster\n        String username = \"username\";\n        // Password\
          \ to connect to the cluster\n        String password = \"password\";\n \
          \       apiClient.setUsername(username);\n        apiClient.setPassword(password);\n\
          \n        // Please add authorization information here if needed.\n    \
          \    DomainManagerBackupsApi domainManagerBackupsApi = new DomainManagerBackupsApi(apiClient);\n\
          \n        \n        String domainManagerExtId = \"B1ee5ac4-4bdA-AcEc-AAdf-6Aca6029cCDF\"\
          ;\n\n        try {\n            ListBackupTargetsApiResponse listBackupTargetsApiResponse\
          \ = domainManagerBackupsApi.listBackupTargets(domainManagerExtId);\n   \
          \         System.out.println(listBackupTargetsApiResponse.toString());\n\
          \        } catch (RestClientException ex) {\n            System.out.println(ex.getMessage());\n\
          \        }\n    }\n}\n"
      - lang: JavaScript
        source: "\nimport { ApiClient, DomainManagerBackupsApi } from \"@nutanix-api/prism-js-client\"\
          ;\n\n// Configure the client\nlet apiClientInstance = new ApiClient();\n\
          // IPv4/IPv6 address or FQDN of the cluster\napiClientInstance.host = 'localhost';\n\
          // Port to which to connect to\napiClientInstance.port = '9440';\n// Max\
          \ retry attempts while reconnecting on a loss of connection\napiClientInstance.maxRetryAttempts\
          \ = 5;\n// Interval in ms to use during retry attempts\napiClientInstance.retryInterval\
          \ = 5000;\n// UserName to connect to the cluster\napiClientInstance.username\
          \ = 'username';\n// Password to connect to the cluster\napiClientInstance.password\
          \ = 'password';\n// Please add authorization information here if needed.\n\
          let domainManagerBackupsApi = new DomainManagerBackupsApi(apiClientInstance);\n\
          \nfunction sample() {\n\n    \n    let domainManagerExtId = \"fFFfCDfE-8bCa-E0D8-DDDD-f1b9afbdAA0f\"\
          ;\n\n\n\n\n    domainManagerBackupsApi.listBackupTargets(domainManagerExtId).then(({data,\
          \ response}) => {\n        console.log(`API returned the following status\
          \ code: ${response.status}`);\n        console.log(data.getData());\n  \
          \  }).catch((error) => {\n        console.log(`Error is: ${error}`);\n \
          \   });\n}\nsample()\n"
      - lang: Python
        source: "\nimport ntnx_prism_py_client\nimport prism.v4.management.ListBackupTargetsApiResponse\n\
          \nif __name__ == \"__main__\":\n    # Configure the client\n    config =\
          \ ntnx_prism_py_client.Configuration()\n    # IPv4/IPv6 address or FQDN\
          \ of the cluster\n    config.host = \"localhost\"\n    # Port to which to\
          \ connect to\n    config.port = 9440\n    # Max retry attempts while reconnecting\
          \ on a loss of connection\n    config.max_retry_attempts = 3\n    # Backoff\
          \ factor to use during retry attempts\n    config.backoff_factor = 3\n \
          \   # UserName to connect to the cluster\n    config.username = \"username\"\
          \n    # Password to connect to the cluster\n    config.password = \"password\"\
          \n    # Please add authorization information here if needed.\n    client\
          \ = ntnx_prism_py_client.ApiClient(configuration=config)\n    domain_manager_backups_api\
          \ = ntnx_prism_py_client.DomainManagerBackupsApi(api_client=client)\n  \
          \  \n    domain_manager_ext_id = \"8C35Fbdb-aad8-D290-3f09-dDc30aE5adcF\"\
          \n\n    try:\n        api_response = domain_manager_backups_api.list_backup_targets(domainManagerExtId=domain_manager_ext_id)\n\
          \        print(api_response)\n    except ntnx_prism_py_client.rest.ApiException\
          \ as e:\n        print(e)\n"
      - lang: Go
        source: "\npackage main\n\nimport (\n    \"fmt\"\n    \"prism.v4.management.ListBackupTargetsApiResponse\"\
          \n    \"github.com/nutanix/ntnx-api-golang-clients/prism-go-client/v4/api\"\
          \n    \"github.com/nutanix/ntnx-api-golang-clients/prism-go-client/v4/client\"\
          \n    import1 \"github.com/nutanix/ntnx-api-golang-clients/prism-go-client/v4/models/prism/v4/management\"\
          \n)\n\nvar (\n    ApiClientInstance *client.ApiClient\n    DomainManagerBackupsApiInstance\
          \ *api.DomainManagerBackupsApi\n)\n\nfunc main() {\n    ApiClientInstance\
          \ = client.NewApiClient()\n    // IPv4/IPv6 address or FQDN of the cluster\n\
          \    ApiClientInstance.Host = \"localhost\"\n    // Port to which to connect\
          \ to\n    ApiClientInstance.Port = 9440\n    // Interval in ms to use during\
          \ retry attempts\n    ApiClientInstance.RetryInterval = 5000\n    // Max\
          \ retry attempts while reconnecting on a loss of connection\n    ApiClientInstance.MaxRetryAttempts\
          \ = 5\n    // UserName to connect to the cluster\n    ApiClientInstance.Username\
          \ = \"username\"\n    // Password to connect to the cluster\n    ApiClientInstance.Password\
          \ = \"password\"\n    // Please add authorization information here if needed.\n\
          \    DomainManagerBackupsApiInstance = api.NewDomainManagerBackupsApi(ApiClientInstance)\n\
          \n    \n    domainManagerExtId := \"8ee3480d-3aA1-6A79-Ad64-E0CAbb5b6fbb\"\
          \n\n\n    response, error := DomainManagerBackupsApiInstance.ListBackupTargets(&domainManagerExtId)\n\
          \    if error != nil {\n        fmt.Println(error)\n        return\n   \
          \ }\n    data, _ := response.GetData().([]import1.BackupTarget)\n    fmt.Println(data)\n\
          }\n\n"
      - lang: cURL
        source: |2

          curl --request GET \
               --url "https://{pc-ip}:9440/api/prism/v4.0.b1/management/domain-managers/3eCF46Ca-C3d6-bcEA-dD8c-1fab6f5eFfFb/backup-targets" \
               --header 'Accept: application/json' \
               --header 'Authorization:Basic $APP_ACCESS_TOKEN' \
      - lang: Wget
        source: |2

          wget --verbose \
               --method GET \
               --header 'Accept: application/json' \
               --header 'Authorization:Basic $APP_ACCESS_TOKEN' \
               - "https://{pc-ip}:9440/api/prism/v4.0.b1/management/domain-managers/E7F7Ceae-0Bfa-24eE-09f1-dbeBFA1A5AC8/backup-targets"
    post:
      tags:
      - DomainManagerBackups
      summary: |
        Create backup target
      description: |
        Creates a cluster or object store as backup target on which the backup is required to be
        stored. The maximum allowed backup targets at a given moment  for cluster is 3 and for object store is 1.
        If any one of the cluster/object store does not qualify for backup, then the API will fail.
      operationId: createBackupTarget
      parameters:
      - name: domainManagerExtId
        in: path
        description: |
          The unique identifier for the domain manager that is to be restored.
        required: true
        style: simple
        explode: false
        schema:
          pattern: "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$"
          type: string
      - name: NTNX-Request-Id
        in: header
        description: |
          A unique identifier that is associated with each request. The provided value must be opaque and preferably in Universal Unique Identifier (UUID) format. This identifier is also used as an idempotence token for safely retrying requests in case of network errors. All the supported Nutanix API clients add this auto-generated request identifier to each request.
        required: true
        schema:
          type: string
          format: uuid
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/prism.v4.r0.b1.management.BackupTarget'
        required: true
      responses:
        "202":
          description: |
            Task Id corresponding to the create backup target api
          headers:
            Location:
              schema:
                pattern: "^((http[s]?):\\/)?\\/?([^:\\/\\s]+)((\\/\\w+)*(:[0-9]+)*?\\\
                  /)([\\w\\-\\.]+[^#?\\s]+)(.*)?(#[\\w\\-]+)?$"
                type: string
                description: Indicates the target of a redirection or the URL of a
                  newly created resource.
          content:
            application/json:
              schema:
                type: object
                properties:
                  metadata:
                    $ref: '#/components/schemas/common.v1.r0.b1.response.ApiResponseMetadata'
                  data:
                    $ref: '#/components/schemas/prism.v4.r0.b1.config.TaskReference'
                additionalProperties: false
                description: "REST response for all response codes in API path /prism/v4.0.b1/management/domain-managers/{domainManagerExtId}/backup-targets\
                  \ Post operation"
        "4XX":
          description: Client error response
          content:
            application/json:
              schema:
                type: object
                properties:
                  metadata:
                    $ref: '#/components/schemas/common.v1.r0.b1.response.ApiResponseMetadata'
                  data:
                    $ref: '#/components/schemas/prism.v4.r0.b1.error.ErrorResponse'
                additionalProperties: false
                description: "REST response for all response codes in API path /prism/v4.0.b1/management/domain-managers/{domainManagerExtId}/backup-targets\
                  \ Post operation"
        "5XX":
          description: Server error response
          content:
            application/json:
              schema:
                type: object
                properties:
                  metadata:
                    $ref: '#/components/schemas/common.v1.r0.b1.response.ApiResponseMetadata'
                  data:
                    $ref: '#/components/schemas/prism.v4.r0.b1.error.ErrorResponse'
                additionalProperties: false
                description: "REST response for all response codes in API path /prism/v4.0.b1/management/domain-managers/{domainManagerExtId}/backup-targets\
                  \ Post operation"
      x-permissions:
        deploymentList:
        - ON_PREM
        - CLOUD
        operationName: Create Domain Manager Backup Target
        roleList:
        - Super Admin
        - Prism Admin
        - Domain Manager Admin
      x-rate-limit:
      - type: xsmall
        count: 3
        timeUnit: seconds
      - type: small
        count: 3
        timeUnit: seconds
      - type: large
        count: 3
        timeUnit: seconds
      - type: xlarge
        count: 3
        timeUnit: seconds
      x-supported-versions:
      - product: PC
        version: 2024.3
      x-code-samples:
      - lang: Java
        source: "\npackage sample;\n\nimport com.nutanix.pri.java.client.ApiClient;\n\
          import com.nutanix.pri.java.client.api.DomainManagerBackupsApi;\nimport\
          \ com.nutanix.dp1.pri.prism.v4.management.BackupTarget;\nimport com.nutanix.dp1.pri.prism.v4.management.CreateBackupTargetApiResponse;\n\
          import prism.v4.management.BackupTarget;\nimport prism.v4.management.CreateBackupTargetApiResponse;\n\
          \npublic class JavaSdkSample {\n    public static void main(String[] args)\
          \ {\n        // Configure the client\n        ApiClient apiClient = new\
          \ ApiClient();\n        // IPv4/IPv6 address or FQDN of the cluster\n  \
          \      apiClient.setHost(\"localhost\");\n        // Port to which to connect\
          \ to\n        apiClient.setPort(9440);\n        // Interval in ms to use\
          \ during retry attempts\n        apiClient.setRetryInterval(5000);\n   \
          \     // Max retry attempts while reconnecting on a loss of connection\n\
          \        apiClient.setMaxRetryAttempts(5);\n        // UserName to connect\
          \ to the cluster\n        String username = \"username\";\n        // Password\
          \ to connect to the cluster\n        String password = \"password\";\n \
          \       apiClient.setUsername(username);\n        apiClient.setPassword(password);\n\
          \n        // Please add authorization information here if needed.\n    \
          \    DomainManagerBackupsApi domainManagerBackupsApi = new DomainManagerBackupsApi(apiClient);\n\
          \n        BackupTarget backupTarget = new BackupTarget();\n\n        //\
          \ BackupTarget object initializations here...\n        \n        String\
          \ domainManagerExtId = \"AbF9FfcD-4Dfc-ceA9-EF2F-aA3AcEaa91DE\";\n\n   \
          \     try {\n            CreateBackupTargetApiResponse createBackupTargetApiResponse\
          \ = domainManagerBackupsApi.createBackupTarget(domainManagerExtId, backupTarget);\n\
          \            System.out.println(createBackupTargetApiResponse.toString());\n\
          \        } catch (RestClientException ex) {\n            System.out.println(ex.getMessage());\n\
          \        }\n    }\n}\n"
      - lang: JavaScript
        source: "\nimport { ApiClient, DomainManagerBackupsApi, BackupTarget } from\
          \ \"@nutanix-api/prism-js-client\";\n\n// Configure the client\nlet apiClientInstance\
          \ = new ApiClient();\n// IPv4/IPv6 address or FQDN of the cluster\napiClientInstance.host\
          \ = 'localhost';\n// Port to which to connect to\napiClientInstance.port\
          \ = '9440';\n// Max retry attempts while reconnecting on a loss of connection\n\
          apiClientInstance.maxRetryAttempts = 5;\n// Interval in ms to use during\
          \ retry attempts\napiClientInstance.retryInterval = 5000;\n// UserName to\
          \ connect to the cluster\napiClientInstance.username = 'username';\n// Password\
          \ to connect to the cluster\napiClientInstance.password = 'password';\n\
          // Please add authorization information here if needed.\nlet domainManagerBackupsApi\
          \ = new DomainManagerBackupsApi(apiClientInstance);\n\nfunction sample()\
          \ {\n    let backupTarget = new BackupTarget();\n\n    // BackupTarget object\
          \ initializations here...\n\n    \n    let domainManagerExtId = \"7bbabBEc-Ffdf-dBE1-AFEc-32eD039F1F86\"\
          ;\n\n\n\n\n    domainManagerBackupsApi.createBackupTarget(domainManagerExtId,\
          \ backupTarget).then(({data, response}) => {\n        console.log(`API returned\
          \ the following status code: ${response.status}`);\n        console.log(data.getData());\n\
          \    }).catch((error) => {\n        console.log(`Error is: ${error}`);\n\
          \    });\n}\nsample()\n"
      - lang: Python
        source: "\nimport ntnx_prism_py_client\nimport prism.v4.management.BackupTarget\n\
          import prism.v4.management.CreateBackupTargetApiResponse\n\nif __name__\
          \ == \"__main__\":\n    # Configure the client\n    config = ntnx_prism_py_client.Configuration()\n\
          \    # IPv4/IPv6 address or FQDN of the cluster\n    config.host = \"localhost\"\
          \n    # Port to which to connect to\n    config.port = 9440\n    # Max retry\
          \ attempts while reconnecting on a loss of connection\n    config.max_retry_attempts\
          \ = 3\n    # Backoff factor to use during retry attempts\n    config.backoff_factor\
          \ = 3\n    # UserName to connect to the cluster\n    config.username = \"\
          username\"\n    # Password to connect to the cluster\n    config.password\
          \ = \"password\"\n    # Please add authorization information here if needed.\n\
          \    client = ntnx_prism_py_client.ApiClient(configuration=config)\n   \
          \ domain_manager_backups_api = ntnx_prism_py_client.DomainManagerBackupsApi(api_client=client)\n\
          \    backupTarget = ntnx_prism_py_client.BackupTarget()\n\n    # BackupTarget\
          \ object initializations here...\n    \n    domain_manager_ext_id = \"11bca2Cc-cC1f-76Fd-A0E2-2FcA4B5dADAa\"\
          \n\n    try:\n        api_response = domain_manager_backups_api.create_backup_target(domainManagerExtId=domain_manager_ext_id,\
          \ body=backupTarget)\n        print(api_response)\n    except ntnx_prism_py_client.rest.ApiException\
          \ as e:\n        print(e)\n"
      - lang: Go
        source: "\npackage main\n\nimport (\n    \"fmt\"\n    \"prism.v4.management.BackupTarget\"\
          \n    \"prism.v4.management.CreateBackupTargetApiResponse\"\n    \"github.com/nutanix/ntnx-api-golang-clients/prism-go-client/v4/api\"\
          \n    \"github.com/nutanix/ntnx-api-golang-clients/prism-go-client/v4/client\"\
          \n    import1 \"github.com/nutanix/ntnx-api-golang-clients/prism-go-client/v4/models/prism/v4/management\"\
          \n    import2 \"github.com/nutanix/ntnx-api-golang-clients/prism-go-client/v4/models/prism/v4/config\"\
          \n)\n\nvar (\n    ApiClientInstance *client.ApiClient\n    DomainManagerBackupsApiInstance\
          \ *api.DomainManagerBackupsApi\n)\n\nfunc main() {\n    ApiClientInstance\
          \ = client.NewApiClient()\n    // IPv4/IPv6 address or FQDN of the cluster\n\
          \    ApiClientInstance.Host = \"localhost\"\n    // Port to which to connect\
          \ to\n    ApiClientInstance.Port = 9440\n    // Interval in ms to use during\
          \ retry attempts\n    ApiClientInstance.RetryInterval = 5000\n    // Max\
          \ retry attempts while reconnecting on a loss of connection\n    ApiClientInstance.MaxRetryAttempts\
          \ = 5\n    // UserName to connect to the cluster\n    ApiClientInstance.Username\
          \ = \"username\"\n    // Password to connect to the cluster\n    ApiClientInstance.Password\
          \ = \"password\"\n    // Please add authorization information here if needed.\n\
          \    DomainManagerBackupsApiInstance = api.NewDomainManagerBackupsApi(ApiClientInstance)\n\
          \n    backupTarget := import1.NewBackupTarget()\n\n    // BackupTarget object\
          \ initializations here...\n\n    \n    domainManagerExtId := \"EFfFb8cE-A53F-C9cB-7CDB-BEaE1d0bEEBE\"\
          \n\n\n    response, error := DomainManagerBackupsApiInstance.CreateBackupTarget(&domainManagerExtId,\
          \ backupTarget)\n    if error != nil {\n        fmt.Println(error)\n   \
          \     return\n    }\n    data, _ := response.GetData().(import2.TaskReference)\n\
          \    fmt.Println(data)\n}\n\n"
      - lang: cURL
        source: |2

          curl --request POST \
               --url "https://{pc-ip}:9440/api/prism/v4.0.b1/management/domain-managers/BFA9B3B0-b5B0-dF9F-dCD7-CDcd9EDaA9E8/backup-targets" \
               --header 'Accept: application/json' \
               --header 'Content-Type: application/json' \
               --header 'NTNX-Request-Id: 3fa85f64-5717-4562-b3fc-2c963f66afa6' \
               --header 'Authorization:Basic $APP_ACCESS_TOKEN' \
               --data {"tenantId":"string","extId":"string","links":[{"href":"string","rel":"string","$objectType":"common.v1.response.ApiLink"}],"location":{"config":{"extId":"string","name":"string","$objectType":"prism.v4.management.ClusterReference"},"$objectType":"prism.v4.management.ClusterLocation"},"lastSyncTime":"2015-07-20T15:49:04-07:00","isBackupPaused":true,"backupPauseReason":"string","$objectType":"prism.v4.management.BackupTarget"} \
      - lang: Wget
        source: |2

          wget --verbose \
               --method POST \
               --header 'Accept: application/json' \
               --header 'Content-Type: application/json' \
               --header 'NTNX-Request-Id: 3fa85f64-5717-4562-b3fc-2c963f66afa6' \
               --header 'Authorization:Basic $APP_ACCESS_TOKEN' \
               --body-data {"tenantId":"string","extId":"string","links":[{"href":"string","rel":"string","$objectType":"common.v1.response.ApiLink"}],"location":{"config":{"extId":"string","name":"string","$objectType":"prism.v4.management.ClusterReference"},"$objectType":"prism.v4.management.ClusterLocation"},"lastSyncTime":"2015-07-20T15:49:04-07:00","isBackupPaused":true,"backupPauseReason":"string","$objectType":"prism.v4.management.BackupTarget"} \
               - "https://{pc-ip}:9440/api/prism/v4.0.b1/management/domain-managers/eEfE6eAF-DBBC-4CA5-DFab-E0CcC3FB834d/backup-targets"
    parameters:
    - name: domainManagerExtId
      in: path
      description: |
        The unique identifier for the domain manager that is to be restored.
      required: true
      style: simple
      explode: false
      schema:
        pattern: "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$"
        type: string
  /prism/v4.0.b1/management/domain-managers/{domainManagerExtId}/backup-targets/{extId}:
    get:
      tags:
      - DomainManagerBackups
      summary: |
        Fetch backup target
      description: |
        Retrieves the backup targets (cluster or object store) from domain manager. Returns the
        backup config and lastSyncTimestamp to the user
      operationId: getBackupTargetById
      parameters:
      - name: extId
        in: path
        description: |
          A globally unique identifier of an instance that is suitable for external consumption.
        required: true
        style: simple
        explode: false
        schema:
          pattern: "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$"
          type: string
      - name: domainManagerExtId
        in: path
        description: |
          The unique identifier for the domain manager that is to be restored.
        required: true
        style: simple
        explode: false
        schema:
          pattern: "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$"
          type: string
      responses:
        "200":
          description: |
            Backup target details corresponding to the cluster/object store configuration.
          content:
            application/json:
              schema:
                type: object
                properties:
                  metadata:
                    $ref: '#/components/schemas/common.v1.r0.b1.response.ApiResponseMetadata'
                  data:
                    $ref: '#/components/schemas/prism.v4.r0.b1.management.BackupTarget'
                additionalProperties: false
                description: "REST response for all response codes in API path /prism/v4.0.b1/management/domain-managers/{domainManagerExtId}/backup-targets/{extId}\
                  \ Get operation"
        "4XX":
          description: Client error response
          content:
            application/json:
              schema:
                type: object
                properties:
                  metadata:
                    $ref: '#/components/schemas/common.v1.r0.b1.response.ApiResponseMetadata'
                  data:
                    $ref: '#/components/schemas/prism.v4.r0.b1.error.ErrorResponse'
                additionalProperties: false
                description: "REST response for all response codes in API path /prism/v4.0.b1/management/domain-managers/{domainManagerExtId}/backup-targets/{extId}\
                  \ Get operation"
        "5XX":
          description: Server error response
          content:
            application/json:
              schema:
                type: object
                properties:
                  metadata:
                    $ref: '#/components/schemas/common.v1.r0.b1.response.ApiResponseMetadata'
                  data:
                    $ref: '#/components/schemas/prism.v4.r0.b1.error.ErrorResponse'
                additionalProperties: false
                description: "REST response for all response codes in API path /prism/v4.0.b1/management/domain-managers/{domainManagerExtId}/backup-targets/{extId}\
                  \ Get operation"
      x-permissions:
        deploymentList:
        - ON_PREM
        - CLOUD
        operationName: View Domain Manager Backup Target
        roleList:
        - Super Admin
        - Prism Admin
        - Prism Viewer
        - Domain Manager Admin
        - Domain Manager Viewer
      x-rate-limit:
      - type: xsmall
        count: 5
        timeUnit: seconds
      - type: small
        count: 5
        timeUnit: seconds
      - type: large
        count: 5
        timeUnit: seconds
      - type: xlarge
        count: 5
        timeUnit: seconds
      x-supported-versions:
      - product: PC
        version: 2024.3
      - product: PE
        version: 6.9
      x-code-samples:
      - lang: Java
        source: "\npackage sample;\n\nimport com.nutanix.pri.java.client.ApiClient;\n\
          import com.nutanix.pri.java.client.api.DomainManagerBackupsApi;\nimport\
          \ com.nutanix.dp1.pri.prism.v4.management.GetBackupTargetApiResponse;\n\
          import prism.v4.management.GetBackupTargetApiResponse;\n\npublic class JavaSdkSample\
          \ {\n    public static void main(String[] args) {\n        // Configure\
          \ the client\n        ApiClient apiClient = new ApiClient();\n        //\
          \ IPv4/IPv6 address or FQDN of the cluster\n        apiClient.setHost(\"\
          localhost\");\n        // Port to which to connect to\n        apiClient.setPort(9440);\n\
          \        // Interval in ms to use during retry attempts\n        apiClient.setRetryInterval(5000);\n\
          \        // Max retry attempts while reconnecting on a loss of connection\n\
          \        apiClient.setMaxRetryAttempts(5);\n        // UserName to connect\
          \ to the cluster\n        String username = \"username\";\n        // Password\
          \ to connect to the cluster\n        String password = \"password\";\n \
          \       apiClient.setUsername(username);\n        apiClient.setPassword(password);\n\
          \n        // Please add authorization information here if needed.\n    \
          \    DomainManagerBackupsApi domainManagerBackupsApi = new DomainManagerBackupsApi(apiClient);\n\
          \n        \n        String extId = \"b1Cf8Aab-b66a-5b16-4264-DBffdDE6dCd7\"\
          ;\n        \n        String domainManagerExtId = \"8Ea5DDdE-1B5F-feBf-6AAE-F5CabfCC1EC5\"\
          ;\n\n        try {\n            GetBackupTargetApiResponse getBackupTargetApiResponse\
          \ = domainManagerBackupsApi.getBackupTargetById(extId, domainManagerExtId);\n\
          \            System.out.println(getBackupTargetApiResponse.toString());\n\
          \        } catch (RestClientException ex) {\n            System.out.println(ex.getMessage());\n\
          \        }\n    }\n}\n"
      - lang: JavaScript
        source: "\nimport { ApiClient, DomainManagerBackupsApi } from \"@nutanix-api/prism-js-client\"\
          ;\n\n// Configure the client\nlet apiClientInstance = new ApiClient();\n\
          // IPv4/IPv6 address or FQDN of the cluster\napiClientInstance.host = 'localhost';\n\
          // Port to which to connect to\napiClientInstance.port = '9440';\n// Max\
          \ retry attempts while reconnecting on a loss of connection\napiClientInstance.maxRetryAttempts\
          \ = 5;\n// Interval in ms to use during retry attempts\napiClientInstance.retryInterval\
          \ = 5000;\n// UserName to connect to the cluster\napiClientInstance.username\
          \ = 'username';\n// Password to connect to the cluster\napiClientInstance.password\
          \ = 'password';\n// Please add authorization information here if needed.\n\
          let domainManagerBackupsApi = new DomainManagerBackupsApi(apiClientInstance);\n\
          \nfunction sample() {\n\n    \n    let extId = \"572fFfff-86EC-31be-c9Cb-2ddabdeCDE72\"\
          ;\n    \n    let domainManagerExtId = \"A23bDFFa-f8BB-eA4a-af1E-BAcAAC8d8DEA\"\
          ;\n\n\n\n\n    domainManagerBackupsApi.getBackupTargetById(extId, domainManagerExtId).then(({data,\
          \ response}) => {\n        console.log(`API returned the following status\
          \ code: ${response.status}`);\n        console.log(data.getData());\n  \
          \  }).catch((error) => {\n        console.log(`Error is: ${error}`);\n \
          \   });\n}\nsample()\n"
      - lang: Python
        source: "\nimport ntnx_prism_py_client\nimport prism.v4.management.GetBackupTargetApiResponse\n\
          \nif __name__ == \"__main__\":\n    # Configure the client\n    config =\
          \ ntnx_prism_py_client.Configuration()\n    # IPv4/IPv6 address or FQDN\
          \ of the cluster\n    config.host = \"localhost\"\n    # Port to which to\
          \ connect to\n    config.port = 9440\n    # Max retry attempts while reconnecting\
          \ on a loss of connection\n    config.max_retry_attempts = 3\n    # Backoff\
          \ factor to use during retry attempts\n    config.backoff_factor = 3\n \
          \   # UserName to connect to the cluster\n    config.username = \"username\"\
          \n    # Password to connect to the cluster\n    config.password = \"password\"\
          \n    # Please add authorization information here if needed.\n    client\
          \ = ntnx_prism_py_client.ApiClient(configuration=config)\n    domain_manager_backups_api\
          \ = ntnx_prism_py_client.DomainManagerBackupsApi(api_client=client)\n  \
          \  \n    ext_id = \"fb77aDC8-a15B-da4F-cCF4-67FAaBeb3E13\"\n    \n    domain_manager_ext_id\
          \ = \"EC71DFBA-7eAa-0aDF-bb3e-9eFcA2cD8bFC\"\n\n    try:\n        api_response\
          \ = domain_manager_backups_api.get_backup_target_by_id(extId=ext_id, domainManagerExtId=domain_manager_ext_id)\n\
          \        print(api_response)\n    except ntnx_prism_py_client.rest.ApiException\
          \ as e:\n        print(e)\n"
      - lang: Go
        source: "\npackage main\n\nimport (\n    \"fmt\"\n    \"prism.v4.management.GetBackupTargetApiResponse\"\
          \n    \"github.com/nutanix/ntnx-api-golang-clients/prism-go-client/v4/api\"\
          \n    \"github.com/nutanix/ntnx-api-golang-clients/prism-go-client/v4/client\"\
          \n    import1 \"github.com/nutanix/ntnx-api-golang-clients/prism-go-client/v4/models/prism/v4/management\"\
          \n)\n\nvar (\n    ApiClientInstance *client.ApiClient\n    DomainManagerBackupsApiInstance\
          \ *api.DomainManagerBackupsApi\n)\n\nfunc main() {\n    ApiClientInstance\
          \ = client.NewApiClient()\n    // IPv4/IPv6 address or FQDN of the cluster\n\
          \    ApiClientInstance.Host = \"localhost\"\n    // Port to which to connect\
          \ to\n    ApiClientInstance.Port = 9440\n    // Interval in ms to use during\
          \ retry attempts\n    ApiClientInstance.RetryInterval = 5000\n    // Max\
          \ retry attempts while reconnecting on a loss of connection\n    ApiClientInstance.MaxRetryAttempts\
          \ = 5\n    // UserName to connect to the cluster\n    ApiClientInstance.Username\
          \ = \"username\"\n    // Password to connect to the cluster\n    ApiClientInstance.Password\
          \ = \"password\"\n    // Please add authorization information here if needed.\n\
          \    DomainManagerBackupsApiInstance = api.NewDomainManagerBackupsApi(ApiClientInstance)\n\
          \n    \n    extId := \"31FEcEBb-C014-2eDD-1Bc3-aFad9bFF8fea\"\n    \n  \
          \  domainManagerExtId := \"4fAca5DA-A3df-3Ced-d9b4-FdA1adAee4E1\"\n\n\n\
          \    response, error := DomainManagerBackupsApiInstance.GetBackupTargetById(&extId,\
          \ &domainManagerExtId)\n    if error != nil {\n        fmt.Println(error)\n\
          \        return\n    }\n    data, _ := response.GetData().(import1.BackupTarget)\n\
          \    fmt.Println(data)\n}\n\n"
      - lang: cURL
        source: |2

          curl --request GET \
               --url "https://{pc-ip}:9440/api/prism/v4.0.b1/management/domain-managers/DAFEB2bd-B87E-4Cbe-b969-CeABB5faf21B/backup-targets/f38fAbeC-eB9D-51ED-DBfF-7Bcdad4ecFdE" \
               --header 'Accept: application/json' \
               --header 'Authorization:Basic $APP_ACCESS_TOKEN' \
      - lang: Wget
        source: |2

          wget --verbose \
               --method GET \
               --header 'Accept: application/json' \
               --header 'Authorization:Basic $APP_ACCESS_TOKEN' \
               - "https://{pc-ip}:9440/api/prism/v4.0.b1/management/domain-managers/9aCb90CC-9375-bBc6-E8bD-bFF11Fab6Ddb/backup-targets/23DFa7eD-AB8A-3eCa-aAB5-46D154FEdB62"
    put:
      tags:
      - DomainManagerBackups
      summary: |
        Update backup target
      description: |
        Updates the credentials and/or rpo of the given objectstore
      operationId: updateBackupTargetById
      parameters:
      - name: domainManagerExtId
        in: path
        description: |
          The unique identifier for the domain manager that is to be restored.
        required: true
        style: simple
        explode: false
        schema:
          pattern: "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$"
          type: string
      - name: extId
        in: path
        description: |
          A globally unique identifier of an instance that is suitable for external consumption.
        required: true
        style: simple
        explode: false
        schema:
          pattern: "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$"
          type: string
      - name: If-Match
        in: header
        description: "The If-Match request header makes the request conditional. When\
          \ not provided, the server will respond with  an HTTP-428 (Precondition\
          \ Required) response code indicating that the server requires the request\
          \ to be conditional. The server will allow the successful completion of\
          \ PUT and PATCH operations, if the resource matches the ETag value returned\
          \ to the response of a GET operation. If the conditional does not match,\
          \ then an HTTP-412 (Precondition Failed) response will be returned."
        required: true
        schema:
          type: string
      - name: NTNX-Request-Id
        in: header
        description: |
          A unique identifier that is associated with each request. The provided value must be opaque and preferably in Universal Unique Identifier (UUID) format. This identifier is also used as an idempotence token for safely retrying requests in case of network errors. All the supported Nutanix API clients add this auto-generated request identifier to each request.
        required: true
        schema:
          type: string
          format: uuid
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/prism.v4.r0.b1.management.BackupTarget'
        required: true
      responses:
        "202":
          description: |
            Task Id corresponding to the update backup target api.
          headers:
            Location:
              schema:
                pattern: "^((http[s]?):\\/)?\\/?([^:\\/\\s]+)((\\/\\w+)*(:[0-9]+)*?\\\
                  /)([\\w\\-\\.]+[^#?\\s]+)(.*)?(#[\\w\\-]+)?$"
                type: string
                description: Indicates the target of a redirection or the URL of a
                  newly created resource.
          content:
            application/json:
              schema:
                type: object
                properties:
                  metadata:
                    $ref: '#/components/schemas/common.v1.r0.b1.response.ApiResponseMetadata'
                  data:
                    $ref: '#/components/schemas/prism.v4.r0.b1.config.TaskReference'
                additionalProperties: false
                description: "REST response for all response codes in API path /prism/v4.0.b1/management/domain-managers/{domainManagerExtId}/backup-targets/{extId}\
                  \ Put operation"
        "4XX":
          description: Client error response
          content:
            application/json:
              schema:
                type: object
                properties:
                  metadata:
                    $ref: '#/components/schemas/common.v1.r0.b1.response.ApiResponseMetadata'
                  data:
                    $ref: '#/components/schemas/prism.v4.r0.b1.error.ErrorResponse'
                additionalProperties: false
                description: "REST response for all response codes in API path /prism/v4.0.b1/management/domain-managers/{domainManagerExtId}/backup-targets/{extId}\
                  \ Put operation"
        "5XX":
          description: Server error response
          content:
            application/json:
              schema:
                type: object
                properties:
                  metadata:
                    $ref: '#/components/schemas/common.v1.r0.b1.response.ApiResponseMetadata'
                  data:
                    $ref: '#/components/schemas/prism.v4.r0.b1.error.ErrorResponse'
                additionalProperties: false
                description: "REST response for all response codes in API path /prism/v4.0.b1/management/domain-managers/{domainManagerExtId}/backup-targets/{extId}\
                  \ Put operation"
      x-permissions:
        deploymentList:
        - ON_PREM
        - CLOUD
        operationName: Update Domain Manager Backup Target
        roleList:
        - Super Admin
        - Prism Admin
        - Domain Manager Admin
      x-rate-limit:
      - type: xsmall
        count: 3
        timeUnit: seconds
      - type: small
        count: 3
        timeUnit: seconds
      - type: large
        count: 3
        timeUnit: seconds
      - type: xlarge
        count: 3
        timeUnit: seconds
      x-supported-versions:
      - product: PC
        version: 2024.3
      x-code-samples:
      - lang: Java
        source: "\npackage sample;\n\nimport com.nutanix.pri.java.client.ApiClient;\n\
          import com.nutanix.pri.java.client.api.DomainManagerBackupsApi;\nimport\
          \ com.nutanix.dp1.pri.prism.v4.management.BackupTarget;\nimport com.nutanix.dp1.pri.prism.v4.management.GetBackupTargetApiResponse;\n\
          import com.nutanix.dp1.pri.prism.v4.management.UpdateBackupTargetApiResponse;\n\
          import prism.v4.management.BackupTarget;\nimport prism.v4.management.GetBackupTargetApiResponse;\n\
          import prism.v4.management.UpdateBackupTargetApiResponse;\nimport java.util.HashMap;\n\
          import org.apache.http.HttpHeaders;\n\npublic class JavaSdkSample {\n  \
          \  public static void main(String[] args) {\n        // Configure the client\n\
          \        ApiClient apiClient = new ApiClient();\n        // IPv4/IPv6 address\
          \ or FQDN of the cluster\n        apiClient.setHost(\"localhost\");\n  \
          \      // Port to which to connect to\n        apiClient.setPort(9440);\n\
          \        // Interval in ms to use during retry attempts\n        apiClient.setRetryInterval(5000);\n\
          \        // Max retry attempts while reconnecting on a loss of connection\n\
          \        apiClient.setMaxRetryAttempts(5);\n        // UserName to connect\
          \ to the cluster\n        String username = \"username\";\n        // Password\
          \ to connect to the cluster\n        String password = \"password\";\n \
          \       apiClient.setUsername(username);\n        apiClient.setPassword(password);\n\
          \n        // Please add authorization information here if needed.\n    \
          \    DomainManagerBackupsApi domainManagerBackupsApi = new DomainManagerBackupsApi(apiClient);\n\
          \n        BackupTarget backupTarget = new BackupTarget();\n\n        //\
          \ BackupTarget object initializations here...\n        \n        String\
          \ domainManagerExtId = \"416cdFaa-6dCd-9E9f-FFBA-D1Bf5E1Be6cc\";\n     \
          \   \n        String extId = \"DDA9Be3B-bd49-91eD-CFbd-aC47aA1bf81C\";\n\
          \n        // perform GET call\n        GetBackupTargetApiResponse getResponse\
          \ = null;\n        try {\n            getResponse = domainManagerBackupsApi.getBackupTargetById(domainManagerExtId,\
          \ extId);\n        } catch(RestClientException ex) {\n            System.out.println(ex.getMessage());\n\
          \        }\n        // Extract E-Tag Header\n        String eTag = ApiClient.getEtag(getResponse);\n\
          \        // initialize/change parameters for update\n        HashMap<String,\
          \ Object> opts = new HashMap<>();\n        opts.put(HttpHeaders.IF_MATCH,\
          \ eTag);\n        try {\n            UpdateBackupTargetApiResponse updateBackupTargetApiResponse\
          \ = domainManagerBackupsApi.updateBackupTargetById(domainManagerExtId, extId,\
          \ backupTarget, opts);\n            System.out.println(updateBackupTargetApiResponse.toString());\n\
          \        } catch (RestClientException ex) {\n            System.out.println(ex.getMessage());\n\
          \        }\n    }\n}\n"
      - lang: JavaScript
        source: "\nimport { ApiClient, DomainManagerBackupsApi, BackupTarget, GetBackupTargetApiResponse\
          \ } from \"@nutanix-api/prism-js-client\";\n\n// Configure the client\n\
          let apiClientInstance = new ApiClient();\n// IPv4/IPv6 address or FQDN of\
          \ the cluster\napiClientInstance.host = 'localhost';\n// Port to which to\
          \ connect to\napiClientInstance.port = '9440';\n// Max retry attempts while\
          \ reconnecting on a loss of connection\napiClientInstance.maxRetryAttempts\
          \ = 5;\n// Interval in ms to use during retry attempts\napiClientInstance.retryInterval\
          \ = 5000;\n// UserName to connect to the cluster\napiClientInstance.username\
          \ = 'username';\n// Password to connect to the cluster\napiClientInstance.password\
          \ = 'password';\n// Please add authorization information here if needed.\n\
          let domainManagerBackupsApi = new DomainManagerBackupsApi(apiClientInstance);\n\
          \nfunction sample() {\n    let backupTarget = new BackupTarget();\n\n  \
          \  // BackupTarget object initializations here...\n\n    \n    let domainManagerExtId\
          \ = \"eADEb1AD-aB2A-39aA-25bF-0A02Ea74FD1f\";\n    \n    let extId = \"\
          cdAEBfcE-9FAC-EAc8-2e22-b6CaE362fB89\";\n\n\n    // Perform Get call\n \
          \   domainManagerBackupsApi.getBackupTargetById(domainManagerExtId, extId).then(({data,\
          \ response}) => {\n        console.log(`API returned the following status\
          \ code: ${response.status}`);\n        // Extract E-Tag Header\n       \
          \ let etagValue = ApiClient.getEtag(data);\n\n        domainManagerBackupsApi.updateBackupTargetById(domainManagerExtId,\
          \ extId, backupTarget, {\"If-Match\" : etagValue}).then(({data, response})\
          \ => {\n            console.log(`API returned the following status code:\
          \ ${response.status}`);\n            console.log(data.getData());\n    \
          \    }).catch((error) => {\n            console.log(`Error is: ${error}`);\n\
          \        });\n    });\n\n}\nsample()\n"
      - lang: Python
        source: "\nimport ntnx_prism_py_client\nimport prism.v4.management.BackupTarget\n\
          import prism.v4.management.GetBackupTargetApiResponse\nimport prism.v4.management.UpdateBackupTargetApiResponse\n\
          \nif __name__ == \"__main__\":\n    # Configure the client\n    config =\
          \ ntnx_prism_py_client.Configuration()\n    # IPv4/IPv6 address or FQDN\
          \ of the cluster\n    config.host = \"localhost\"\n    # Port to which to\
          \ connect to\n    config.port = 9440\n    # Max retry attempts while reconnecting\
          \ on a loss of connection\n    config.max_retry_attempts = 3\n    # Backoff\
          \ factor to use during retry attempts\n    config.backoff_factor = 3\n \
          \   # UserName to connect to the cluster\n    config.username = \"username\"\
          \n    # Password to connect to the cluster\n    config.password = \"password\"\
          \n    # Please add authorization information here if needed.\n    client\
          \ = ntnx_prism_py_client.ApiClient(configuration=config)\n    domain_manager_backups_api\
          \ = ntnx_prism_py_client.DomainManagerBackupsApi(api_client=client)\n  \
          \  backupTarget = ntnx_prism_py_client.BackupTarget()\n\n    # BackupTarget\
          \ object initializations here...\n    \n    domain_manager_ext_id = \"fBdccCDD-eFaB-f8FC-Dfec-EBeF2C4BAd2c\"\
          \n    \n    ext_id = \"1bbA4dBE-5A0B-Da8a-9EcE-dDdCeb5CE7f2\"\n\n    try:\n\
          \        api_response = domain_manager_backups_api.get_backup_target_by_id(domainManagerExtId=domain_manager_ext_id,\
          \ extId=ext_id)\n    except ntnx_prism_py_client.rest.ApiException as e:\n\
          \        print(e)\n    # Extract E-Tag Header\n    etag_value = ntnx_prism_py_client.ApiClient.get_etag(api_response)\n\
          \    try:\n        api_response = domain_manager_backups_api.update_backup_target_by_id(domainManagerExtId=domain_manager_ext_id,\
          \ extId=ext_id, body=backupTarget, if_match=etag_value)\n        print(api_response)\n\
          \    except ntnx_prism_py_client.rest.ApiException as e:\n        print(e)\n"
      - lang: Go
        source: "\npackage main\n\nimport (\n    \"fmt\"\n    \"prism.v4.management.BackupTarget\"\
          \n    \"prism.v4.management.GetBackupTargetApiResponse\"\n    \"prism.v4.management.UpdateBackupTargetApiResponse\"\
          \n    \"github.com/nutanix/ntnx-api-golang-clients/prism-go-client/v4/api\"\
          \n    \"github.com/nutanix/ntnx-api-golang-clients/prism-go-client/v4/client\"\
          \n    import1 \"github.com/nutanix/ntnx-api-golang-clients/prism-go-client/v4/models/prism/v4/management\"\
          \n    import2 \"github.com/nutanix/ntnx-api-golang-clients/prism-go-client/v4/models/prism/v4/config\"\
          \n)\n\nvar (\n    ApiClientInstance *client.ApiClient\n    DomainManagerBackupsApiInstance\
          \ *api.DomainManagerBackupsApi\n)\n\nfunc main() {\n    ApiClientInstance\
          \ = client.NewApiClient()\n    // IPv4/IPv6 address or FQDN of the cluster\n\
          \    ApiClientInstance.Host = \"localhost\"\n    // Port to which to connect\
          \ to\n    ApiClientInstance.Port = 9440\n    // Interval in ms to use during\
          \ retry attempts\n    ApiClientInstance.RetryInterval = 5000\n    // Max\
          \ retry attempts while reconnecting on a loss of connection\n    ApiClientInstance.MaxRetryAttempts\
          \ = 5\n    // UserName to connect to the cluster\n    ApiClientInstance.Username\
          \ = \"username\"\n    // Password to connect to the cluster\n    ApiClientInstance.Password\
          \ = \"password\"\n    // Please add authorization information here if needed.\n\
          \    DomainManagerBackupsApiInstance = api.NewDomainManagerBackupsApi(ApiClientInstance)\n\
          \n    backupTarget := import1.NewBackupTarget()\n\n    // BackupTarget object\
          \ initializations here...\n\n    \n    domainManagerExtId := \"BdEEAEAE-0C70-bD1f-bbB1-0cFa1BEA16eC\"\
          \n    \n    extId := \"d9CfCE8E-Ed3A-3deD-AEbe-FCea7AbcCCbF\"\n\n    getResponse,\
          \ err := DomainManagerBackupsApiInstance.GetBackupTargetById(&domainManagerExtId,\
          \ &extId)\n    if err != nil {\n        fmt.Println(err)\n        return\n\
          \    }\n\n    // Extract E-Tag Header\n    etagValue := ApiClientInstance.GetEtag(getResponse)\n\
          \n    args := make(map[string] interface{})\n    args[\"If-Match\"] = etagValue\n\
          \n    response, error := DomainManagerBackupsApiInstance.UpdateBackupTargetById(&domainManagerExtId,\
          \ &extId, backupTarget, args)\n    if error != nil {\n        fmt.Println(error)\n\
          \        return\n    }\n    data, _ := response.GetData().(import2.TaskReference)\n\
          \    fmt.Println(data)\n}\n\n"
      - lang: cURL
        source: |2

          curl --request PUT \
               --url "https://{pc-ip}:9440/api/prism/v4.0.b1/management/domain-managers/728dbBbA-FbB3-d896-0FEc-a816a76ACA5A/backup-targets/aF0ab2EB-4dc1-FA43-DACf-4DdeCF4d5D1c" \
               --header 'Accept: application/json' \
               --header 'Content-Type: application/json' \
               --header 'If-Match: string_sample_data' \
               --header 'NTNX-Request-Id: 3fa85f64-5717-4562-b3fc-2c963f66afa6' \
               --header 'Authorization:Basic $APP_ACCESS_TOKEN' \
               --data {"tenantId":"string","extId":"string","links":[{"href":"string","rel":"string","$objectType":"common.v1.response.ApiLink"}],"location":{"config":{"extId":"string","name":"string","$objectType":"prism.v4.management.ClusterReference"},"$objectType":"prism.v4.management.ClusterLocation"},"lastSyncTime":"2015-07-20T15:49:04-07:00","isBackupPaused":true,"backupPauseReason":"string","$objectType":"prism.v4.management.BackupTarget"} \
      - lang: Wget
        source: |2

          wget --verbose \
               --method PUT \
               --header 'Accept: application/json' \
               --header 'Content-Type: application/json' \
               --header 'If-Match: string_sample_data' \
               --header 'NTNX-Request-Id: 3fa85f64-5717-4562-b3fc-2c963f66afa6' \
               --header 'Authorization:Basic $APP_ACCESS_TOKEN' \
               --body-data {"tenantId":"string","extId":"string","links":[{"href":"string","rel":"string","$objectType":"common.v1.response.ApiLink"}],"location":{"config":{"extId":"string","name":"string","$objectType":"prism.v4.management.ClusterReference"},"$objectType":"prism.v4.management.ClusterLocation"},"lastSyncTime":"2015-07-20T15:49:04-07:00","isBackupPaused":true,"backupPauseReason":"string","$objectType":"prism.v4.management.BackupTarget"} \
               - "https://{pc-ip}:9440/api/prism/v4.0.b1/management/domain-managers/DfDDA6e0-c110-Fc13-af1F-f48D9EFBb8ca/backup-targets/5AAED9f3-4cFe-AF7F-Aa7f-CA8BBDC53DFc"
    delete:
      tags:
      - DomainManagerBackups
      summary: |
        Delete backup target
      description: |
        Removes cluster/object store from backup targets. This will stop backup from being
        taken on cluster/object store.
      operationId: deleteBackupTargetById
      parameters:
      - name: domainManagerExtId
        in: path
        description: |
          The unique identifier for the domain manager that is to be restored.
        required: true
        style: simple
        explode: false
        schema:
          pattern: "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$"
          type: string
      - name: extId
        in: path
        description: |
          A globally unique identifier of an instance that is suitable for external consumption.
        required: true
        style: simple
        explode: false
        schema:
          pattern: "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$"
          type: string
      - name: If-Match
        in: header
        description: |
          The If-Match request header makes the request conditional. When not provided the server will respond with an HTTP 428 (Precondition Required) response code indicating that the server requires the request to be conditional. The server will allow successful completion of PUT and PATCH operations, if the resource matches the ETag value returned to the response of a GET operation. If the conditional does not match, then an HTTP 412 (Precondition Failed) response
        required: true
        schema:
          type: string
      - name: NTNX-Request-Id
        in: header
        description: |
          A unique identifier that is associated with each request. The provided value must be opaque and preferably in Universal Unique Identifier (UUID) format. This identifier is also used as an idempotence token for safely retrying requests in case of network errors. All the supported Nutanix API clients add this auto-generated request identifier to each request.
        required: true
        schema:
          type: string
          format: uuid
      responses:
        "202":
          description: |
            Task Id corresponding to the delete backup target api.
          headers:
            Location:
              schema:
                pattern: "^((http[s]?):\\/)?\\/?([^:\\/\\s]+)((\\/\\w+)*(:[0-9]+)*?\\\
                  /)([\\w\\-\\.]+[^#?\\s]+)(.*)?(#[\\w\\-]+)?$"
                type: string
                description: Indicates the target of a redirection or the URL of a
                  newly created resource.
          content:
            application/json:
              schema:
                type: object
                properties:
                  metadata:
                    $ref: '#/components/schemas/common.v1.r0.b1.response.ApiResponseMetadata'
                  data:
                    $ref: '#/components/schemas/prism.v4.r0.b1.config.TaskReference'
                additionalProperties: false
                description: "REST response for all response codes in API path /prism/v4.0.b1/management/domain-managers/{domainManagerExtId}/backup-targets/{extId}\
                  \ Delete operation"
        "4XX":
          description: Client error response
          content:
            application/json:
              schema:
                type: object
                properties:
                  metadata:
                    $ref: '#/components/schemas/common.v1.r0.b1.response.ApiResponseMetadata'
                  data:
                    $ref: '#/components/schemas/prism.v4.r0.b1.error.ErrorResponse'
                additionalProperties: false
                description: "REST response for all response codes in API path /prism/v4.0.b1/management/domain-managers/{domainManagerExtId}/backup-targets/{extId}\
                  \ Delete operation"
        "5XX":
          description: Server error response
          content:
            application/json:
              schema:
                type: object
                properties:
                  metadata:
                    $ref: '#/components/schemas/common.v1.r0.b1.response.ApiResponseMetadata'
                  data:
                    $ref: '#/components/schemas/prism.v4.r0.b1.error.ErrorResponse'
                additionalProperties: false
                description: "REST response for all response codes in API path /prism/v4.0.b1/management/domain-managers/{domainManagerExtId}/backup-targets/{extId}\
                  \ Delete operation"
      x-permissions:
        deploymentList:
        - ON_PREM
        - CLOUD
        operationName: Delete Domain Manager Backup Target
        roleList:
        - Super Admin
        - Prism Admin
        - Domain Manager Admin
      x-rate-limit:
      - type: xsmall
        count: 3
        timeUnit: seconds
      - type: small
        count: 3
        timeUnit: seconds
      - type: large
        count: 3
        timeUnit: seconds
      - type: xlarge
        count: 3
        timeUnit: seconds
      x-supported-versions:
      - product: PC
        version: 2024.3
      x-code-samples:
      - lang: Java
        source: "\npackage sample;\n\nimport com.nutanix.pri.java.client.ApiClient;\n\
          import com.nutanix.pri.java.client.api.DomainManagerBackupsApi;\nimport\
          \ com.nutanix.dp1.pri.prism.v4.management.GetBackupTargetApiResponse;\n\
          import com.nutanix.dp1.pri.prism.v4.management.DeleteBackupTargetApiResponse;\n\
          import prism.v4.management.DeleteBackupTargetApiResponse;\nimport prism.v4.management.GetBackupTargetApiResponse;\n\
          import java.util.HashMap;\nimport org.apache.http.HttpHeaders;\n\npublic\
          \ class JavaSdkSample {\n    public static void main(String[] args) {\n\
          \        // Configure the client\n        ApiClient apiClient = new ApiClient();\n\
          \        // IPv4/IPv6 address or FQDN of the cluster\n        apiClient.setHost(\"\
          localhost\");\n        // Port to which to connect to\n        apiClient.setPort(9440);\n\
          \        // Interval in ms to use during retry attempts\n        apiClient.setRetryInterval(5000);\n\
          \        // Max retry attempts while reconnecting on a loss of connection\n\
          \        apiClient.setMaxRetryAttempts(5);\n        // UserName to connect\
          \ to the cluster\n        String username = \"username\";\n        // Password\
          \ to connect to the cluster\n        String password = \"password\";\n \
          \       apiClient.setUsername(username);\n        apiClient.setPassword(password);\n\
          \n        // Please add authorization information here if needed.\n    \
          \    DomainManagerBackupsApi domainManagerBackupsApi = new DomainManagerBackupsApi(apiClient);\n\
          \n        \n        String domainManagerExtId = \"8Ab8aBBf-785A-7AEC-adaB-5b0EA786BECA\"\
          ;\n        \n        String extId = \"DAde3aCD-EB8D-712b-f5F9-454a76013cd8\"\
          ;\n\n        // perform GET call\n        GetBackupTargetApiResponse getResponse\
          \ = null;\n        try {\n            getResponse = domainManagerBackupsApi.getBackupTargetById(domainManagerExtId,\
          \ extId);\n        } catch(RestClientException ex) {\n            System.out.println(ex.getMessage());\n\
          \        }\n        // Extract E-Tag Header\n        String eTag = ApiClient.getEtag(getResponse);\n\
          \        // initialize/change parameters for update\n        HashMap<String,\
          \ Object> opts = new HashMap<>();\n        opts.put(HttpHeaders.IF_MATCH,\
          \ eTag);\n        try {\n            DeleteBackupTargetApiResponse deleteBackupTargetApiResponse\
          \ = domainManagerBackupsApi.deleteBackupTargetById(domainManagerExtId, extId,\
          \ opts);\n            System.out.println(deleteBackupTargetApiResponse.toString());\n\
          \        } catch (RestClientException ex) {\n            System.out.println(ex.getMessage());\n\
          \        }\n    }\n}\n"
      - lang: JavaScript
        source: "\nimport { ApiClient, DomainManagerBackupsApi, GetBackupTargetApiResponse\
          \ } from \"@nutanix-api/prism-js-client\";\n\n// Configure the client\n\
          let apiClientInstance = new ApiClient();\n// IPv4/IPv6 address or FQDN of\
          \ the cluster\napiClientInstance.host = 'localhost';\n// Port to which to\
          \ connect to\napiClientInstance.port = '9440';\n// Max retry attempts while\
          \ reconnecting on a loss of connection\napiClientInstance.maxRetryAttempts\
          \ = 5;\n// Interval in ms to use during retry attempts\napiClientInstance.retryInterval\
          \ = 5000;\n// UserName to connect to the cluster\napiClientInstance.username\
          \ = 'username';\n// Password to connect to the cluster\napiClientInstance.password\
          \ = 'password';\n// Please add authorization information here if needed.\n\
          let domainManagerBackupsApi = new DomainManagerBackupsApi(apiClientInstance);\n\
          \nfunction sample() {\n\n    \n    let domainManagerExtId = \"AeDFbAf8-Dccd-Ebd3-9B36-BdFfaf7b9Bab\"\
          ;\n    \n    let extId = \"cBaADcCf-BEb0-00Db-Eafc-cF30ceF17FE9\";\n\n\n\
          \    // Perform Get call\n    domainManagerBackupsApi.getBackupTargetById(domainManagerExtId,\
          \ extId).then(({data, response}) => {\n        console.log(`API returned\
          \ the following status code: ${response.status}`);\n        // Extract E-Tag\
          \ Header\n        let etagValue = ApiClient.getEtag(data);\n\n        domainManagerBackupsApi.deleteBackupTargetById(domainManagerExtId,\
          \ extId, {\"If-Match\" : etagValue}).then(({data, response}) => {\n    \
          \        console.log(`API returned the following status code: ${response.status}`);\n\
          \            console.log(data.getData());\n        }).catch((error) => {\n\
          \            console.log(`Error is: ${error}`);\n        });\n    });\n\n\
          }\nsample()\n"
      - lang: Python
        source: "\nimport ntnx_prism_py_client\nimport prism.v4.management.DeleteBackupTargetApiResponse\n\
          import prism.v4.management.GetBackupTargetApiResponse\n\nif __name__ ==\
          \ \"__main__\":\n    # Configure the client\n    config = ntnx_prism_py_client.Configuration()\n\
          \    # IPv4/IPv6 address or FQDN of the cluster\n    config.host = \"localhost\"\
          \n    # Port to which to connect to\n    config.port = 9440\n    # Max retry\
          \ attempts while reconnecting on a loss of connection\n    config.max_retry_attempts\
          \ = 3\n    # Backoff factor to use during retry attempts\n    config.backoff_factor\
          \ = 3\n    # UserName to connect to the cluster\n    config.username = \"\
          username\"\n    # Password to connect to the cluster\n    config.password\
          \ = \"password\"\n    # Please add authorization information here if needed.\n\
          \    client = ntnx_prism_py_client.ApiClient(configuration=config)\n   \
          \ domain_manager_backups_api = ntnx_prism_py_client.DomainManagerBackupsApi(api_client=client)\n\
          \    \n    domain_manager_ext_id = \"0AcFDCDd-6EF5-bFab-cfD8-DA162fc2bDfb\"\
          \n    \n    ext_id = \"ccf84ea1-AF2C-bc2b-cd9F-f3AD95AdDd26\"\n\n    try:\n\
          \        api_response = domain_manager_backups_api.get_backup_target_by_id(domainManagerExtId=domain_manager_ext_id,\
          \ extId=ext_id)\n    except ntnx_prism_py_client.rest.ApiException as e:\n\
          \        print(e)\n    # Extract E-Tag Header\n    etag_value = ntnx_prism_py_client.ApiClient.get_etag(api_response)\n\
          \    try:\n        api_response = domain_manager_backups_api.delete_backup_target_by_id(domainManagerExtId=domain_manager_ext_id,\
          \ extId=ext_id, if_match=etag_value)\n        print(api_response)\n    except\
          \ ntnx_prism_py_client.rest.ApiException as e:\n        print(e)\n"
      - lang: Go
        source: "\npackage main\n\nimport (\n    \"fmt\"\n    \"prism.v4.management.DeleteBackupTargetApiResponse\"\
          \n    \"prism.v4.management.GetBackupTargetApiResponse\"\n    \"github.com/nutanix/ntnx-api-golang-clients/prism-go-client/v4/api\"\
          \n    \"github.com/nutanix/ntnx-api-golang-clients/prism-go-client/v4/client\"\
          \n    import1 \"github.com/nutanix/ntnx-api-golang-clients/prism-go-client/v4/models/prism/v4/config\"\
          \n)\n\nvar (\n    ApiClientInstance *client.ApiClient\n    DomainManagerBackupsApiInstance\
          \ *api.DomainManagerBackupsApi\n)\n\nfunc main() {\n    ApiClientInstance\
          \ = client.NewApiClient()\n    // IPv4/IPv6 address or FQDN of the cluster\n\
          \    ApiClientInstance.Host = \"localhost\"\n    // Port to which to connect\
          \ to\n    ApiClientInstance.Port = 9440\n    // Interval in ms to use during\
          \ retry attempts\n    ApiClientInstance.RetryInterval = 5000\n    // Max\
          \ retry attempts while reconnecting on a loss of connection\n    ApiClientInstance.MaxRetryAttempts\
          \ = 5\n    // UserName to connect to the cluster\n    ApiClientInstance.Username\
          \ = \"username\"\n    // Password to connect to the cluster\n    ApiClientInstance.Password\
          \ = \"password\"\n    // Please add authorization information here if needed.\n\
          \    DomainManagerBackupsApiInstance = api.NewDomainManagerBackupsApi(ApiClientInstance)\n\
          \n    \n    domainManagerExtId := \"ffedDD51-EDcd-eFA9-aB7E-1AA3FcfcDeE6\"\
          \n    \n    extId := \"F8FAfe2F-9f7d-AfEd-Cb95-fcc4089B71EB\"\n\n    getResponse,\
          \ err := DomainManagerBackupsApiInstance.GetBackupTargetById(&domainManagerExtId,\
          \ &extId)\n    if err != nil {\n        fmt.Println(err)\n        return\n\
          \    }\n\n    // Extract E-Tag Header\n    etagValue := ApiClientInstance.GetEtag(getResponse)\n\
          \n    args := make(map[string] interface{})\n    args[\"If-Match\"] = etagValue\n\
          \n    response, error := DomainManagerBackupsApiInstance.DeleteBackupTargetById(&domainManagerExtId,\
          \ &extId, args)\n    if error != nil {\n        fmt.Println(error)\n   \
          \     return\n    }\n    data, _ := response.GetData().(import1.TaskReference)\n\
          \    fmt.Println(data)\n}\n\n"
      - lang: cURL
        source: |2

          curl --request DELETE \
               --url "https://{pc-ip}:9440/api/prism/v4.0.b1/management/domain-managers/61DFb5FB-C508-9ae0-fF1b-ddb524b2FAAE/backup-targets/bB4dBF4E-b10D-3dE6-feF5-4FEFFb4ffcb6" \
               --header 'Accept: application/json' \
               --header 'If-Match: string_sample_data' \
               --header 'NTNX-Request-Id: 3fa85f64-5717-4562-b3fc-2c963f66afa6' \
               --header 'Authorization:Basic $APP_ACCESS_TOKEN' \
      - lang: Wget
        source: |2

          wget --verbose \
               --method DELETE \
               --header 'Accept: application/json' \
               --header 'If-Match: string_sample_data' \
               --header 'NTNX-Request-Id: 3fa85f64-5717-4562-b3fc-2c963f66afa6' \
               --header 'Authorization:Basic $APP_ACCESS_TOKEN' \
               - "https://{pc-ip}:9440/api/prism/v4.0.b1/management/domain-managers/ba0C012a-A397-3969-1D07-eaDC67Adb5Ce/backup-targets/6ac14E1f-CbCd-8Ce1-eeE3-f2EEbdaddcdA"
    parameters:
    - name: domainManagerExtId
      in: path
      description: |
        The unique identifier for the domain manager that is to be restored.
      required: true
      style: simple
      explode: false
      schema:
        pattern: "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$"
        type: string
    - name: extId
      in: path
      description: |
        A globally unique identifier of an instance that is suitable for external consumption.
      required: true
      style: simple
      explode: false
      schema:
        pattern: "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$"
        type: string
components:
  schemas:
    prism.v4.r0.b1.management.ListBackupTargetsApiResponse:
      type: object
      properties:
        metadata:
          $ref: '#/components/schemas/common.v1.r0.b1.response.ApiResponseMetadata'
        data:
          oneOf:
          - maxItems: 4
            type: array
            items:
              $ref: '#/components/schemas/prism.v4.r0.b1.management.BackupTarget'
          - $ref: '#/components/schemas/prism.v4.r0.b1.error.ErrorResponse'
      additionalProperties: false
      description: "REST response for all response codes in API path /prism/v4.0.b1/management/domain-managers/{domainManagerExtId}/backup-targets\
        \ Get operation"
    prism.v4.r0.b1.management.BackupTarget:
      required:
      - location
      description: |
        Backup target for the domain manager, either a cluster or object store.
      allOf:
      - $ref: '#/components/schemas/common.v1.r0.b1.response.ExternalizableAbstractModel'
      - type: object
        properties:
          location:
            required:
            - $objectType
            type: object
            properties:
              $objectType:
                type: string
                example: prism.v4.management.ClusterLocation
            description: |
              Location of the backup target. For example a cluster or an object store endpoint such as AWS s3.
            oneOf:
            - $ref: '#/components/schemas/prism.v4.r0.b1.management.ClusterLocation'
            - $ref: '#/components/schemas/prism.v4.r0.b1.management.ObjectStoreLocation'
          lastSyncTime:
            type: string
            description: "Represents the time when the domain manager was last synchronized\
              \ or copied its \nconfiguration data to the backup target. This field\
              \ is updated every 30 minutes.\n"
            format: date-time
            readOnly: true
          isBackupPaused:
            type: boolean
            description: |
              Whether the backup is paused on the given cluster or not.
            readOnly: true
          backupPauseReason:
            type: string
            description: |
              Specifies a reason why the backup might have paused. Will be empty if isBackupPaused field is false.
            readOnly: true
        additionalProperties: false
    prism.v4.r0.b1.management.CreateBackupTargetApiResponse:
      type: object
      properties:
        metadata:
          $ref: '#/components/schemas/common.v1.r0.b1.response.ApiResponseMetadata'
        data:
          required:
          - $objectType
          properties:
            $objectType:
              type: string
              example: prism.v4.config.TaskReference
          oneOf:
          - $ref: '#/components/schemas/prism.v4.r0.b1.config.TaskReference'
          - $ref: '#/components/schemas/prism.v4.r0.b1.error.ErrorResponse'
      additionalProperties: false
      description: "REST response for all response codes in API path /prism/v4.0.b1/management/domain-managers/{domainManagerExtId}/backup-targets\
        \ Post operation"
    prism.v4.r0.b1.management.ClusterLocation:
      type: object
      properties:
        config:
          $ref: '#/components/schemas/prism.v4.r0.b1.management.ClusterReference'
      additionalProperties: false
      description: |
        Model which contains the information of backup cluster
    prism.v4.r0.b1.management.ObjectStoreLocation:
      required:
      - backupPolicy
      - providerConfig
      type: object
      properties:
        providerConfig:
          $ref: '#/components/schemas/prism.v4.r0.b1.management.AWSS3Config'
        backupPolicy:
          $ref: '#/components/schemas/prism.v4.r0.b1.management.BackupPolicy'
      additionalProperties: false
      description: "Model which contains the information of the object store endpoint\
        \ where \nbackup is present. It contains information like objectstore \nendpoint\
        \ address, endpoint flavour and last sync timestamp.\n"
    prism.v4.r0.b1.management.AWSS3Config:
      description: |
        The base model of S3 object store endpoint where domain manager is backed up.
      allOf:
      - $ref: '#/components/schemas/prism.v4.r0.b1.management.S3Config'
      - type: object
        properties:
          credentials:
            required:
            - $objectType
            properties:
              $objectType:
                type: string
                example: prism.v4.management.AccessKeyCredentials
            description: |
              This object is a container for credentials to access the objectstore
            writeOnly: true
            oneOf:
            - $ref: '#/components/schemas/prism.v4.r0.b1.management.AccessKeyCredentials'
        additionalProperties: false
    prism.v4.r0.b1.management.BackupPolicy:
      required:
      - rpoInMinutes
      type: object
      properties:
        rpoInMinutes:
          maximum: 1440
          minimum: 60
          type: integer
          description: |
            RPO interval in minutes at which the backup will be taken
          format: int32
      additionalProperties: false
      description: Backup policy for the object store provided defining the rpo etc.
    prism.v4.r0.b1.management.S3Config:
      required:
      - bucketName
      - region
      type: object
      properties:
        bucketName:
          maxLength: 63
          minLength: 3
          type: string
          description: |
            The bucket name of the object store endpoint where backup data of domain manager
            is stored.
        region:
          maxLength: 63
          type: string
          description: |
            The region name of the object store endpoint where backup data of domain manager
            is stored.
      additionalProperties: false
      description: |
        The endpoint of the object store s3 where domain manager is backed up.
    prism.v4.r0.b1.management.AccessKeyCredentials:
      type: object
      properties:
        accessKeyId:
          maxLength: 128
          minLength: 16
          type: string
          description: Access key for the object store provided for backup target.
        secretAccessKey:
          maxLength: 1024
          type: string
          description: |
            Secret access key ID for the object store provided for backup target.
          format: password
      additionalProperties: false
      description: Secret credentials model for the object store containing access
        key ID and secret access key.
    prism.v4.r0.b1.management.GetBackupTargetApiResponse:
      type: object
      properties:
        metadata:
          $ref: '#/components/schemas/common.v1.r0.b1.response.ApiResponseMetadata'
        data:
          required:
          - $objectType
          properties:
            $objectType:
              type: string
              example: prism.v4.management.BackupTarget
          oneOf:
          - $ref: '#/components/schemas/prism.v4.r0.b1.management.BackupTarget'
          - $ref: '#/components/schemas/prism.v4.r0.b1.error.ErrorResponse'
      additionalProperties: false
      description: "REST response for all response codes in API path /prism/v4.0.b1/management/domain-managers/{domainManagerExtId}/backup-targets/{extId}\
        \ Get operation"
    prism.v4.r0.b1.management.UpdateBackupTargetApiResponse:
      type: object
      properties:
        metadata:
          $ref: '#/components/schemas/common.v1.r0.b1.response.ApiResponseMetadata'
        data:
          required:
          - $objectType
          properties:
            $objectType:
              type: string
              example: prism.v4.config.TaskReference
          oneOf:
          - $ref: '#/components/schemas/prism.v4.r0.b1.config.TaskReference'
          - $ref: '#/components/schemas/prism.v4.r0.b1.error.ErrorResponse'
      additionalProperties: false
      description: "REST response for all response codes in API path /prism/v4.0.b1/management/domain-managers/{domainManagerExtId}/backup-targets/{extId}\
        \ Put operation"
    prism.v4.r0.b1.management.DeleteBackupTargetApiResponse:
      type: object
      properties:
        metadata:
          $ref: '#/components/schemas/common.v1.r0.b1.response.ApiResponseMetadata'
        data:
          required:
          - $objectType
          properties:
            $objectType:
              type: string
              example: prism.v4.config.TaskReference
          oneOf:
          - $ref: '#/components/schemas/prism.v4.r0.b1.config.TaskReference'
          - $ref: '#/components/schemas/prism.v4.r0.b1.error.ErrorResponse'
      additionalProperties: false
      description: "REST response for all response codes in API path /prism/v4.0.b1/management/domain-managers/{domainManagerExtId}/backup-targets/{extId}\
        \ Delete operation"
    common.v1.r0.b1.response.ExternalizableAbstractModel:
      description: |
        A model that represents an object instance that is accessible through an API endpoint.  Instances of this type get an extId field that contains the globally unique identifier for that instance.  Externally accessible instances are always tenant aware and, therefore, extend the TenantAwareModel
      allOf:
      - $ref: '#/components/schemas/common.v1.r0.b1.config.TenantAwareModel'
      - type: object
        properties:
          extId:
            pattern: "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$"
            type: string
            description: |
              A globally unique identifier of an instance that is suitable for external consumption.
            nullable: true
            readOnly: true
          links:
            maxItems: 20
            minItems: 0
            type: array
            description: |
              A HATEOAS style link for the response.  Each link contains a user-friendly name identifying the link and an address for retrieving the particular resource.
            readOnly: true
            items:
              $ref: '#/components/schemas/common.v1.r0.b1.response.ApiLink'
        additionalProperties: false
    prism.v4.r0.b1.management.ClusterReference:
      required:
      - extId
      type: object
      properties:
        extId:
          pattern: "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$"
          type: string
          description: Cluster UUID of a remote cluster.
        name:
          maxLength: 80
          minLength: 1
          type: string
          description: Name of the cluster.
          readOnly: true
      additionalProperties: false
      description: Cluster reference of the remote cluster to be connected.
    common.v1.r0.b1.config.TenantAwareModel:
      type: object
      properties:
        tenantId:
          pattern: "^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$"
          type: string
          description: |
            A globally unique identifier that represents the tenant that owns this entity. The system automatically assigns it, and it and is immutable from an API consumer perspective (some use cases may cause this Id to change - For instance, a use case may require the transfer of ownership of the entity, but these cases are handled automatically on the server).
          readOnly: true
      additionalProperties: false
      description: |
        A model base class whose instances are bound to a specific tenant.  This model adds a tenantId to the base model class that it extends and is automatically set by the server.
    common.v1.r0.b1.response.ApiLink:
      type: object
      properties:
        href:
          type: string
          description: |
            The URL at which the entity described by the link can be accessed.
        rel:
          type: string
          description: |
            A name that identifies the relationship of the link to the object that is returned by the URL.  The unique value of "self" identifies the URL for the object.
      additionalProperties: false
      description: |
        A HATEOAS style link for the response.  Each link contains a user-friendly name identifying the link and an address for retrieving the particular resource.
    prism.v4.r0.b1.error.ErrorResponse:
      type: object
      properties:
        error:
          oneOf:
          - type: array
            items:
              $ref: '#/components/schemas/prism.v4.r0.b1.error.AppMessage'
          - $ref: '#/components/schemas/prism.v4.r0.b1.error.SchemaValidationError'
      additionalProperties: false
      description: An error response indicates that the operation has failed either
        due to a client error(4XX) or server error(5XX). Please look at the HTTP status
        code and namespace specific error code and error message for further details.
      x-platform-generated: true
    prism.v4.r0.b1.error.AppMessage:
      type: object
      properties:
        message:
          type: string
          description: The message string.
          format: ""
        severity:
          $ref: '#/components/schemas/common.v1.r0.b1.config.MessageSeverity'
        code:
          type: string
          description: "The code associated with this message.This string is typically\
            \ prefixed by the namespace the endpoint belongs to. For example: VMM-40000"
          format: ""
        locale:
          type: string
          description: Locale for this message. The default locale would be 'en-US'.
          default: en_US
        errorGroup:
          type: string
          description: The error group associated with this message of severity ERROR.
          format: ""
        argumentsMap:
          type: object
          additionalProperties:
            type: string
          description: The map of argument name to value.
      additionalProperties: false
      description: Message with associated severity describing status of the current
        operation.
      x-platform-generated: true
    prism.v4.r0.b1.error.MessageSeverity:
      type: string
      description: Enum schema MessageSeverity
      enum:
      - $UNKNOWN
      - $REDACTED
      - INFO
      - WARNING
      - ERROR
      x-platform-generated: true
      x-codegen-hint:
        $any:
        - type: entity-identifier
          properties:
            identifiers:
            - value: $UNKNOWN
              index: 201
            - value: $REDACTED
              index: 202
            - value: INFO
              index: 203
            - value: WARNING
              index: 204
            - value: ERROR
              index: 205
    prism.v4.r0.b1.error.SchemaValidationError:
      type: object
      properties:
        timestamp:
          type: string
          description: Timestamp of the response.
          format: date-time
        statusCode:
          type: integer
          description: The HTTP status code of the response.
          format: ""
        error:
          type: string
          description: The generic error message for the response.
          format: ""
        path:
          type: string
          description: API path on which the request was made.
          format: ""
        validationErrorMessages:
          type: array
          description: List of validation error messages
          items:
            $ref: '#/components/schemas/prism.v4.r0.b1.error.SchemaValidationErrorMessage'
      additionalProperties: false
      description: This schema is generated from SchemaValidationError.java
      x-platform-generated: true
    prism.v4.r0.b1.error.SchemaValidationErrorMessage:
      type: object
      properties:
        location:
          type: string
          description: "The part of the request that failed validation. Validation\
            \ can fail for path, query parameters, and request body."
          format: ""
        message:
          type: string
          description: The detailed message for the validation error.
          format: ""
        attributePath:
          type: string
          description: The path of the attribute that failed validation in the schema.
          format: ""
      additionalProperties: false
      description: This schema is generated from SchemaValidationErrorMessage.java
      x-platform-generated: true
    common.v1.r0.b1.response.ApiResponseMetadata:
      type: object
      properties:
        flags:
          maxItems: 20
          minItems: 0
          type: array
          description: |
            An array of flags that may indicate the status of the response. For example, a flag with the name 'isPaginated' and value 'false', indicates that the response is not paginated.
          items:
            $ref: '#/components/schemas/common.v1.r0.b1.config.Flag'
        links:
          maxItems: 20
          minItems: 0
          type: array
          description: |
            An array of HATEOAS style links for the response that may also include pagination links for list operations.
          items:
            $ref: '#/components/schemas/common.v1.r0.b1.response.ApiLink'
        totalAvailableResults:
          type: integer
          description: |
            The total number of entities that are available on the server for this type.
          format: int32
        messages:
          maxItems: 20
          minItems: 0
          type: array
          description: |
            Information, Warning or Error messages that might provide additional contextual information related to the operation.
          items:
            $ref: '#/components/schemas/common.v1.r0.b1.config.Message'
        extraInfo:
          maxItems: 20
          minItems: 0
          type: array
          description: |
            An array of entity-specific metadata
          items:
            $ref: '#/components/schemas/common.v1.r0.b1.config.KVPair'
      additionalProperties: false
      description: |
        The metadata associated with an API response. This value is always present and minimally contains the self-link for the API request that produced this response. It also contains pagination data for the paginated requests.
    prism.v4.r0.b1.config.TaskReference:
      type: object
      properties:
        extId:
          pattern: "^[a-zA-Z0-9/+]*={0,2}:[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}"
          type: string
          description: A globally unique identifier of a task.
      additionalProperties: false
      description: A reference to a task tracking an asynchronous operation. The status
        of the task can be queried by making a GET request to the task URI provided
        in the metadata section of the API response.
    common.v1.r0.b1.config.Flag:
      type: object
      properties:
        name:
          maxLength: 128
          minLength: 3
          type: string
          description: |
            Name of the flag.
        value:
          type: boolean
          description: |
            Value of the flag.
          default: false
      additionalProperties: false
      description: |
        Many entities in the Nutanix APIs carry flags.  This object captures all the flags associated with that entity through this object.  The field that hosts this type of object must have an attribute called x-bounded-map-keys that tells which flags are actually present for that entity.
    common.v1.r0.b1.config.Message:
      type: object
      properties:
        code:
          type: string
          description: |
            A code that uniquely identifies a message.
        message:
          type: string
          description: |
            The description of the message.
        locale:
          type: string
          description: |
            The locale for the message description.
          default: en_US
        severity:
          $ref: '#/components/schemas/common.v1.r0.b1.config.MessageSeverity'
      additionalProperties: false
    common.v1.r0.b1.config.KVPair:
      type: object
      properties:
        name:
          maxLength: 128
          minLength: 3
          type: string
          description: |
            The key of the key-value pair.
        value:
          description: The value associated with the key for this key-value pair
          oneOf:
          - type: string
            description: |
              A string value in a key-value pair.
          - type: integer
            description: |
              An integer value in a key-value pair.
          - type: boolean
            description: |
              An boolean value in a key-value pair.
          - maxItems: 100
            minItems: 0
            type: array
            description: |
              A value in a key-value pair that represents a list of strings.
            items:
              type: string
          - type: object
            additionalProperties:
              type: string
            description: |
              A value in a key-value pair that represents a map of string keys and values.
          - maxItems: 20
            minItems: 0
            type: array
            description: |
              A value in a key-value pair that represents an array of maps of string keys and values.
            items:
              $ref: '#/components/schemas/common.v1.r0.b1.config.MapOfStringWrapper'
          - maxItems: 100
            minItems: 0
            type: array
            description: |
              A value in a key-value pair that represents a list of integers.
            items:
              type: integer
      additionalProperties: false
      description: |
        A map describing a set of keys and their corresponding values.
    common.v1.r0.b1.config.MessageSeverity:
      type: string
      description: |
        The message severity.
      enum:
      - $UNKNOWN
      - $REDACTED
      - INFO
      - WARNING
      - ERROR
      x-enumDescriptions:
        ERROR: |
          Error indicating failed completion.
        INFO: |
          Information about successful completion.
        $UNKNOWN: |
          Unknown value.
        WARNING: |
          Warning indicating future error.
        $REDACTED: |
          Redacted value.
    common.v1.r0.b1.config.MapOfStringWrapper:
      type: object
      properties:
        map:
          type: object
          additionalProperties:
            type: string
          description: |
            A map with string keys and values.
      additionalProperties: false
      description: |
        A wrapper schema containing a map with string keys and values.
  securitySchemes:
    basicAuthScheme:
      type: http
      scheme: basic
    apiKeyAuthScheme:
      type: apiKey
      name: X-ntnx-api-key
      in: header
