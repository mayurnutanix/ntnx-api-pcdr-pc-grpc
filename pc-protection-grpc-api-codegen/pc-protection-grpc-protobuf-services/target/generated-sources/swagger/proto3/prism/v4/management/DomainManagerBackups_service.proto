/*
 * Generated file proto3/prism/v4/management.proto.
 *
 * Product version: 17.0.0-SNAPSHOT
 *
 * Part of the PC Protection PC Client SDK
 *
 * (c) 2025 Nutanix Inc.  All rights reserved
 *
 */

syntax = "proto3";

package proto3.prism.v4.management;

option java_multiple_files = true;
option java_package = "proto3.prism.v4.management";
option go_package = "proto3/prism/v4/management";

import "proto3/prism/v4/api_version.proto";

import "proto3/prism/v4/http_method_options.proto";
import "proto3/prism/v4/management/management.proto";

service DomainManagerBackupsService {
    option (ntnx_api_version) = {
    MAJOR: "4",
    MINOR: "0"    };


  /*
   * uri: /prism/v4/management/domain-managers/{domainManagerExtId}/backup-targets-new
   * http method: POST
   * Create backup target 
   * Creates a cluster or object store as the backup target. For a given Prism Central,
there can be up to 3 clusters as backup targets 
and 1 object store as backup target. If any cluster or object store is not eligible for backup or 
lacks appropriate permissions, the API request will fail. 
For object store backup targets, specifying backup policy is mandatory along 
with the location of the object store.

   */
  rpc createBackupTarget1(CreateBackupTarget1Arg) returns (CreateBackupTarget1Ret) {
    option (ntnx_api_http) = {
      POST: "/prism/v4/management/domain-managers/{domainManagerExtId}/backup-targets-new"
    };
  }
  /*
   * uri: /prism/v4/management/domain-managers/{domainManagerExtId}/backup-targets-new/{extId}
   * http method: DELETE
   * Delete backup target 
   * Removes cluster/object store from the backup targets. This will stop the cluster/object store 
from backing up Prism Central data.

   */
  rpc deleteBackupTargetById1(DeleteBackupTargetById1Arg) returns (DeleteBackupTargetById1Ret) {
    option (ntnx_api_http) = {
      DELETE: "/prism/v4/management/domain-managers/{domainManagerExtId}/backup-targets-new/{extId}"
    };
  }
  /*
   * uri: /prism/v4/management/domain-managers/{domainManagerExtId}/backup-targets-new/{extId}
   * http method: GET
   * Fetch backup target 
   * Retrieves the backup targets (cluster or object store) from a domain manager and returns the
backup configuration and lastSyncTimestamp parameter to the user.

   */
  rpc getBackupTargetById1(GetBackupTargetById1Arg) returns (GetBackupTargetById1Ret) {
    option (ntnx_api_http) = {
      GET: "/prism/v4/management/domain-managers/{domainManagerExtId}/backup-targets-new/{extId}"
    };
  }
  /*
   * uri: /prism/v4/management/domain-managers/{domainManagerExtId}/backup-targets-new
   * http method: GET
   * List backup targets 
   * Lists backup targets (cluster or object store) configured for a given domain manager.

   */
  rpc listBackupTargets1(ListBackupTargets1Arg) returns (ListBackupTargets1Ret) {
    option (ntnx_api_http) = {
      GET: "/prism/v4/management/domain-managers/{domainManagerExtId}/backup-targets-new"
    };
  }
  /*
   * uri: /prism/v4/management/domain-managers/{domainManagerExtId}/backup-targets-new/{extId}
   * http method: PUT
   * Update backup target 
   * Updates the credentials and/or RPO of the given object store.

   */
  rpc updateBackupTargetById1(UpdateBackupTargetById1Arg) returns (UpdateBackupTargetById1Ret) {
    option (ntnx_api_http) = {
      PUT: "/prism/v4/management/domain-managers/{domainManagerExtId}/backup-targets-new/{extId}"
    };
  }
}

/*
 * message containing all attributes expected in the createBackupTarget1 request
 */
message CreateBackupTarget1Arg {
  /*
   * A unique identifier for the domain manager.

   */
  string domain_manager_ext_id = 31001;
  /*
   * Creates a cluster or object store as the backup target. For a given Prism Central,
there can be up to 3 clusters as backup targets 
and 1 object store as backup target. If any cluster or object store is not eligible for backup or 
lacks appropriate permissions, the API request will fail. 
For object store backup targets, specifying backup policy is mandatory along 
with the location of the object store.

   */
  proto3.prism.v4.management.BackupTarget body = 31002;
}

/*
 * message containing all attributes expected in the createBackupTarget1 response
 */
message CreateBackupTarget1Ret {
  /*
   * field containing expected response content
   */
  proto3.prism.v4.management.CreateBackupTargetApiResponse content = 999;
  /*
   * map containing headers expected in response
   */
  map<string, string> reserved = 1000;
}
/*
 * message containing all attributes expected in the deleteBackupTargetById1 request
 */
message DeleteBackupTargetById1Arg {
  /*
   * A unique identifier for the domain manager.

   */
  string domain_manager_ext_id = 31001;
  /*
   * A globally unique identifier of an instance that is suitable for external consumption.

   */
  string ext_id = 31002;
}

/*
 * message containing all attributes expected in the deleteBackupTargetById1 response
 */
message DeleteBackupTargetById1Ret {
  /*
   * field containing expected response content
   */
  proto3.prism.v4.management.DeleteBackupTargetApiResponse content = 999;
  /*
   * map containing headers expected in response
   */
  map<string, string> reserved = 1000;
}
/*
 * message containing all attributes expected in the getBackupTargetById1 request
 */
message GetBackupTargetById1Arg {
  /*
   * A unique identifier for the domain manager.

   */
  string domain_manager_ext_id = 31001;
  /*
   * A globally unique identifier of an instance that is suitable for external consumption.

   */
  string ext_id = 31002;
}

/*
 * message containing all attributes expected in the getBackupTargetById1 response
 */
message GetBackupTargetById1Ret {
  /*
   * field containing expected response content
   */
  proto3.prism.v4.management.GetBackupTargetApiResponse content = 999;
  /*
   * map containing headers expected in response
   */
  map<string, string> reserved = 1000;
}
/*
 * message containing all attributes expected in the listBackupTargets1 request
 */
message ListBackupTargets1Arg {
  /*
   * A unique identifier for the domain manager.

   */
  string domain_manager_ext_id = 31001;
}

/*
 * message containing all attributes expected in the listBackupTargets1 response
 */
message ListBackupTargets1Ret {
  /*
   * field containing expected response content
   */
  proto3.prism.v4.management.ListBackupTargetsApiResponse content = 999;
  /*
   * map containing headers expected in response
   */
  map<string, string> reserved = 1000;
}
/*
 * message containing all attributes expected in the updateBackupTargetById1 request
 */
message UpdateBackupTargetById1Arg {
  /*
   * A unique identifier for the domain manager.

   */
  string domain_manager_ext_id = 31001;
  /*
   * A globally unique identifier of an instance that is suitable for external consumption.

   */
  string ext_id = 31002;
  /*
   * Updates the credentials and/or RPO of the given object store.

   */
  proto3.prism.v4.management.BackupTarget body = 31003;
}

/*
 * message containing all attributes expected in the updateBackupTargetById1 response
 */
message UpdateBackupTargetById1Ret {
  /*
   * field containing expected response content
   */
  proto3.prism.v4.management.UpdateBackupTargetApiResponse content = 999;
  /*
   * map containing headers expected in response
   */
  map<string, string> reserved = 1000;
}