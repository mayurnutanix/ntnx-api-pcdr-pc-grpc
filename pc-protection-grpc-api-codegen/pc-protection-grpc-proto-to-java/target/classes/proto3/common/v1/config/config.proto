/*
 * Generated file proto3/common/v1/config/config.proto.
 *
 * Product version: 0.0.1-SNAPSHOT
 *
 * Part of the PC Protection PC Client SDK
 *
 * (c) 2024 Nutanix Inc.  All rights reserved
 *
 */

syntax = "proto3";

package proto3.common.v1.config;

option java_multiple_files = true;
option java_package = "proto3.common.v1.config";
option go_package = "proto3/common/v1/config";


/*
 * Many entities in the Nutanix APIs carry flags.  This object captures all the flags associated with that entity through this object.  The field that hosts this type of object must have an attribute called x-bounded-map-keys that tells which flags are actually present for that entity. 
 */
message Flag {
  /*
   * Name of the flag. 
   */
  string name = 1001;
  /*
   * Value of the flag. 
   */
  bool value = 1002;
}
/*
 * OneOf item wrapper message
 */
message StringWrapper {
  /*
   * Value field in oneOf item wrapper message
   */
  string value = 1000;
}
/*
 * OneOf item wrapper message
 */
message IntegerWrapper {
  /*
   * Value field in oneOf item wrapper message
   */
  int32 value = 1000;
}
/*
 * OneOf item wrapper message
 */
message BooleanWrapper {
  /*
   * Value field in oneOf item wrapper message
   */
  bool value = 1000;
}
/*
 * OneOf item wrapper message
 */
message StringArrayWrapper {
  /*
   * Value field in oneOf item wrapper message
   */
  repeated string value = 1000;
}
/*
 * OneOf item wrapper message
 */
message StringMapWrapper {
  /*
   * Value field in oneOf item wrapper message
   */
  map<string, string> value = 1000;
}
/*
 * OneOf item wrapper message
 */
message MapOfStringWrapperArrayWrapper {
  /*
   * Value field in oneOf item wrapper message
   */
  repeated proto3.common.v1.config.MapOfStringWrapper value = 1000;
}
/*
 * OneOf item wrapper message
 */
message IntegerArrayWrapper {
  /*
   * Value field in oneOf item wrapper message
   */
  repeated int32 value = 1000;
}
/*
 * A map describing a set of keys and their corresponding values. 
 */
message KVPair {
  /*
   * A map describing a set of keys and their corresponding values. 
   */
  oneof value {
    /*
     * A string value in a key-value pair. 
     */
    proto3.common.v1.config.StringWrapper string_value = 1002;
    /*
     * An integer value in a key-value pair. 
     */
    proto3.common.v1.config.IntegerWrapper integer_value = 1003;
    /*
     * An boolean value in a key-value pair. 
     */
    proto3.common.v1.config.BooleanWrapper boolean_value = 1004;
    /*
     * A value in a key-value pair that represents a list of strings. 
     */
    proto3.common.v1.config.StringArrayWrapper string_array_value = 1005;
    /*
     * A value in a key-value pair that represents a map of string keys and values. 
     */
    proto3.common.v1.config.StringMapWrapper string_map_value = 1006;
    /*
     * A value in a key-value pair that represents an array of maps of string keys and values. 
     */
    proto3.common.v1.config.MapOfStringWrapperArrayWrapper map_of_string_wrapper_array_value = 1007;
    /*
     * A value in a key-value pair that represents a list of integers. 
     */
    proto3.common.v1.config.IntegerArrayWrapper integer_array_value = 1008;
  }
  /*
   * The key of the key-value pair. 
   */
  string name = 1001;
}
/*
 * A wrapper schema containing a map with string keys and values. 
 */
message MapOfStringWrapper {
  /*
   * A map with string keys and values. 
   */
  map<string, string> map = 1001;
}
/*
 * 
 */
message Message {
  /*
   * A code that uniquely identifies a message. 
   */
  string code = 1001;
  /*
   * The description of the message. 
   */
  string message = 1002;
  /*
   * The locale for the message description. 
   */
  string locale = 1003;
  /*
   * 
   */
  proto3.common.v1.config.MessageSeverityMessage.MessageSeverity severity = 1004;
}
/*
 * The message severity. 
 */
message MessageSeverityMessage {
  enum MessageSeverity {
    UNKNOWN = 0;
    REDACTED = 1;
    INFO = 1001;
    WARNING = 1002;
    ERROR = 1003;
  }
}

/*
 * A model base class whose instances are bound to a specific tenant.  This model adds a tenantId to the base model class that it extends and is automatically set by the server. 
 */
message TenantAwareModel {
  /*
   * A globally unique identifier that represents the tenant that owns this entity. The system automatically assigns it, and it and is immutable from an API consumer perspective (some use cases may cause this Id to change - For instance, a use case may require the transfer of ownership of the entity, but these cases are handled automatically on the server). 
   */
  string tenant_id = 1001;
}